var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/guards/AdminGuard.html",[0,2.379,1,2.379]],["body/guards/AdminGuard.html",[1,3.939,2,3.248,3,0.411,4,0.411,5,0.356,6,3.729,7,0.303,8,0.963,9,5.183,10,0.794,11,2.159,12,2.372,13,4.13,14,0.876,15,4.459,16,1.054,17,0.032,18,0.794,19,0.432,20,0.963,21,3.729,22,5.059,23,4.239,24,5.059,25,4.459,26,3.503,27,0.723,28,2.585,29,2.866,30,2.209,31,0.558,32,0.876,33,0.356,34,2.364,35,1.822,36,2.159,37,1.43,38,1.32,39,0.411,40,0.411,41,1.218,42,1.033,43,0.949,44,0.949,45,3.939,46,2.364,47,3.729,48,1.122,49,0.794,50,0.794,51,3.248,52,1.43,53,0.026,54,0.026]],["title/components/AdminPageComponent.html",[55,0.261,56,0.966]],["body/components/AdminPageComponent.html",[3,0.199,4,0.199,5,0.172,7,0.147,8,0.585,10,0.384,11,1.045,12,1.896,14,0.986,16,0.866,17,0.032,18,0.739,19,0.464,20,0.791,27,0.875,30,1.342,31,0.497,33,0.317,36,1.045,39,0.199,40,0.199,41,0.897,42,0.5,43,0.699,44,1.2,46,1.144,48,1.318,49,0.652,50,0.708,52,1.275,53,0.016,54,0.016,55,0.317,56,1.315,57,1.053,58,0.75,59,0.639,60,0.75,61,3.968,62,5.122,63,1.572,64,1.275,65,0.75,66,1.637,67,1.389,68,1.141,69,0.897,70,0.897,71,1.107,72,1.141,73,1.766,74,0.897,75,2.747,76,2.393,77,2.747,78,0.434,79,3.998,80,2.32,81,4.78,82,2.123,83,3.325,84,2.123,85,3.325,86,0.866,87,3.716,88,2.747,89,2.747,90,1.425,91,3.284,92,4.443,93,4.443,94,3.716,95,1.971,96,2.896,97,3.237,98,3.284,99,2.158,100,1.419,101,2.747,102,1.158,103,2.158,104,1.236,105,2.747,106,2.158,107,2.158,108,3.284,109,2.158,110,1.399,111,2.158,112,2.158,113,2.158,114,1.114,115,1.114,116,2.158,117,1.805,118,1.805,119,1.425,120,1.673,121,2.158,122,2.158,123,2.158,124,1.805,125,1.805,126,1.144,127,1.144,128,0.882,129,1.805,130,0.692,131,2.158,132,2.158,133,0.62,134,1.805,135,0.739,136,1.305,137,0.746,138,1.624,139,1.045,140,1.26,141,1.805,142,1.805,143,0.972,144,1.572,145,2.315,146,1.805,147,0.849,148,1.26,149,2.158,150,2.158,151,0.482,152,2.158,153,2.158,154,1.021,155,1.805,156,2.593,157,0.5,158,2.747,159,2.158,160,1.399,161,2.158,162,2.158,163,2.158,164,2.158,165,0.75,166,0.882,167,2.158,168,1.805,169,4.378,170,1.805,171,2.747,172,2.158,173,2.158,174,2.158,175,2.158,176,2.158,177,2.158,178,1.805,179,0.827,180,0.692,181,1.045,182,1.805,183,0.959,184,1.805,185,0.959,186,1.805,187,3.237,188,1.26,189,1.805,190,1.805,191,1.805,192,1.805,193,1.805,194,1.399,195,1.497,196,3.325,197,1.805,198,1.805,199,1.805,200,1.805,201,1.805,202,1.045,203,1.874,204,1.572,205,0.959,206,1.342,207,1.399,208,0.585,209,1.805,210,0.813,211,3.325,212,1.805,213,1.805,214,1.572,215,1.572,216,1.805,217,1.805,218,3.325,219,1.805,220,1.399,221,1.509,222,1.425,223,1.415,224,0.813,225,1.399,226,1.399,227,4.512,228,2.747,229,2.152,230,2.747,231,2.393,232,2.747,233,2.747,234,2.747,235,2.393,236,1.425,237,2.747,238,4.211,239,2.747,240,2.747,241,1.917,242,2.747,243,2.747,244,1.917,245,0.897,246,2.747,247,1.399,248,2.108,249,1.624,250,1.399,251,2.158,252,3.284,253,3.716,254,2.158,255,3.814,256,2.158,257,4.443,258,2.158,259,0.75,260,2.158,261,1.572,262,2.158,263,1.805,264,1.741,265,2.158,266,0.897,267,2.158,268,2.158,269,1.572,270,2.747,271,1.917,272,2.747,273,2.747,274,2.393,275,1.375,276,2.747,277,2.393,278,2.747,279,2.128,280,3.716,281,4.211,282,1.805,283,3.716,284,1.805,285,3.716,286,1.805,287,2.747,288,2.747,289,3.716,290,2.747,291,2.747,292,1.805,293,1.805,294,1.805,295,2.747,296,0.75,297,1.141,298,1.141,299,0.75,300,1.543,301,0.75,302,1.805,303,1.805,304,1.805,305,1.805,306,1.805,307,1.805,308,1.141,309,1.141,310,0.639,311,0.75,312,0.639,313,0.75,314,0.639,315,0.75,316,0.692,317,0.75,318,0.639,319,0.75,320,0.639,321,0.75,322,0.639,323,0.75,324,0.639,325,0.75,326,0.639,327,0.639,328,0.589,329,0.75,330,0.75]],["title/components/AnalyseComponent.html",[55,0.261,71,0.756]],["body/components/AnalyseComponent.html",[3,0.185,4,0.185,5,0.16,7,0.137,8,0.554,10,0.358,14,0.974,16,0.606,17,0.032,18,0.628,19,0.456,20,0.554,27,0.855,31,0.451,33,0.16,39,0.185,40,0.185,41,0.848,42,0.465,43,0.427,44,1.041,48,0.505,49,0.295,50,0.762,52,0.996,53,0.015,54,0.015,55,0.304,56,0.594,57,0.996,58,0.697,59,1.125,60,0.697,61,3.922,64,1.219,65,0.697,66,1.614,67,1.37,68,1.772,69,0.848,70,0.848,71,1.072,72,1.32,73,1.688,74,0.848,78,0.411,82,1.9,84,1.9,86,0.392,90,1.372,95,1.921,100,1.438,102,0.995,104,1.842,114,1.086,115,1.086,119,1.983,120,1.17,126,1.065,127,1.065,128,0.82,130,0.644,133,0.579,135,0.774,136,1.478,137,0.716,138,1.89,139,0.972,143,0.594,147,0.793,148,1.172,151,0.719,154,1.028,157,0.465,165,1.955,179,1.165,180,1.569,181,0.972,183,1.688,185,1.688,188,1.814,195,1.17,202,0.972,203,0.697,205,0.892,208,0.872,210,0.756,220,2.013,221,1.038,222,0.996,223,1.125,224,1.431,229,1.505,236,1.569,241,1.814,245,1.168,247,2.013,248,2.015,249,1.553,250,2.013,266,0.548,275,0.548,296,0.697,297,1.079,298,1.079,299,0.697,300,1.486,301,0.697,308,1.079,309,1.079,310,0.594,311,0.697,312,0.594,313,0.697,314,0.594,315,0.697,316,0.644,317,0.697,318,0.594,319,0.697,320,0.594,321,0.697,322,0.594,323,0.697,324,0.594,325,0.697,326,0.594,327,0.594,328,0.548,329,0.697,330,0.697,331,0.892,332,1.172,333,2.013,334,2.015,335,1.079,336,2.463,337,2.013,338,2.463,339,2.998,340,2.463,341,2.015,342,2.463,343,2.463,344,2.463,345,2.599,346,2.772,347,2.772,348,2.772,349,2.772,350,2.772,351,2.772,352,1.301,353,2.072,354,3.107,355,1.505,356,2.013,357,3.171,358,2.008,359,2.463,360,2.008,361,2.008,362,2.008,363,2.008,364,2.008,365,2.008,366,2.008,367,1.679,368,1.172,369,1.679,370,1.679,371,1.679,372,2.013,373,1.679,374,1.679,375,2.013,376,2.008,377,1.679,378,0.892,379,1.301,380,0.594,381,1.431,382,2.538,383,2.463,384,1.301,385,1.172,386,1.17,387,2.978,388,1.647,389,0.972,390,2.015,391,1.301,392,0.972,393,1.301,394,1.647,395,1.301,396,1.301,397,2.013,398,2.463,399,2.772,400,2.013,401,2.772,402,2.013,403,1.301,404,1.172,405,1.301,406,0.756,407,1.484,408,1.301,409,0.697,410,2.013,411,1.301,412,1.301,413,2.015,414,1.301,415,1.065,416,2.594,417,1.301,418,1.301,419,1.172,420,1.172,421,1.301,422,1.172,423,1.301,424,1.301,425,1.301,426,1.814,427,1.301,428,1.814,429,1.301,430,0.972,431,1.172,432,1.172,433,1.301,434,1.301,435,1.172,436,1.301,437,2.013,438,1.301,439,0.756,440,1.301,441,1.301,442,1.301,443,1.172,444,1.301,445,1.172,446,1.301,447,1.301,448,1.301,449,1.301,450,1.301,451,1.301,452,1.301,453,1.301,454,1.301,455,1.301,456,1.301,457,1.301,458,2.013,459,2.497,460,2.013,461,1.301,462,1.301,463,1.301,464,2.013,465,1.814,466,1.301,467,1.301,468,1.301,469,1.301,470,1.301,471,1.172,472,1.301,473,1.301,474,1.301,475,1.301,476,1.301,477,0.82,478,1.301,479,1.301,480,1.301,481,1.301,482,1.301,483,1.647,484,1.301,485,2.013,486,2.013,487,2.013,488,2.013,489,1.301,490,2.013,491,1.301,492,1.301,493,1.301,494,1.301,495,1.301,496,1.301,497,1.301,498,1.065,499,2.013,500,1.301,501,1.301,502,2.463,503,2.599,504,2.599,505,2.599,506,2.599,507,2.013,508,2.264,509,2.264,510,2.599,511,2.015,512,2.013,513,2.218,514,2.268,515,1.647,516,0.972,517,1.463,518,1.463,519,1.841,520,2.471,521,1.679,522,2.218,523,1.065,524,2.218,525,1.679,526,1.301,527,1.301,528,1.679,529,1.647,530,2.013,531,1.463,532,1.172,533,2.218,534,2.463,535,1.463,536,0.972,537,1.172,538,1.301,539,1.814,540,1.065,541,1.463,542,1.814,543,2.264,544,3.371,545,2.264,546,2.264,547,2.264,548,2.013,549,1.679,550,2.264,551,2.599,552,1.679,553,1.679,554,1.463,555,1.463,556,1.679,557,1.679]],["title/components/AnalyseComponent-1.html",[55,0.219,71,0.635,165,0.952]],["body/components/AnalyseComponent-1.html",[3,0.185,4,0.185,5,0.16,7,0.136,8,0.553,10,0.357,14,0.974,16,0.605,17,0.032,18,0.628,19,0.456,20,0.553,27,0.854,31,0.451,33,0.16,39,0.185,40,0.185,41,0.847,42,0.464,43,0.426,44,1.04,48,0.504,49,0.294,50,0.761,52,0.995,53,0.015,54,0.015,55,0.303,56,0.593,57,0.995,58,0.696,59,1.123,60,0.696,64,1.217,65,0.696,66,1.614,67,1.369,68,1.771,69,0.847,70,0.847,71,1.071,72,1.318,73,1.686,74,0.847,78,0.41,82,1.898,84,1.898,86,0.391,90,1.37,95,1.919,100,1.437,102,0.994,104,1.841,114,1.085,115,1.085,119,1.983,120,1.168,126,1.062,127,1.062,128,0.819,130,0.642,133,0.579,135,0.774,136,1.477,137,0.715,138,1.889,139,0.97,143,0.593,147,0.793,148,1.169,151,0.718,154,1.027,157,0.464,165,1.984,179,1.163,180,1.567,181,0.97,183,1.686,185,1.686,188,1.811,195,1.168,202,0.97,203,0.696,205,0.89,208,0.871,210,0.754,220,2.01,221,1.036,222,0.995,223,1.123,224,1.429,229,1.502,236,1.567,241,1.811,245,1.167,247,2.01,248,2.012,249,1.551,250,2.01,266,0.547,275,0.547,296,0.696,297,1.077,298,1.077,299,0.696,300,1.484,301,0.696,308,1.077,309,1.077,310,0.593,311,0.696,312,0.593,313,0.696,314,0.593,315,0.696,316,0.642,317,0.696,318,0.593,319,0.696,320,0.593,321,0.696,322,0.593,323,0.696,324,0.593,325,0.696,326,0.593,327,0.593,328,0.547,329,0.696,330,0.696,331,0.89,332,1.169,333,2.01,334,2.012,335,1.077,336,2.459,337,2.01,338,2.459,339,2.995,340,2.459,341,2.012,342,2.459,343,2.459,344,2.459,345,2.594,346,2.769,347,2.769,348,2.769,349,2.769,350,2.769,351,2.769,352,1.298,353,2.07,355,1.502,356,2.01,357,3.168,359,2.459,367,1.676,368,1.169,369,1.676,370,1.676,371,1.676,372,2.01,373,1.676,374,1.676,375,2.01,378,0.89,379,1.298,380,0.593,381,1.429,382,2.537,383,2.459,384,1.298,385,1.169,386,1.168,387,2.976,388,1.645,389,0.97,390,2.012,391,1.298,392,0.97,393,1.298,394,1.645,395,1.298,396,1.298,397,2.01,398,2.459,399,2.769,400,2.01,401,2.769,402,2.01,403,1.298,404,1.169,405,1.298,406,0.754,407,1.482,408,1.298,409,0.696,410,2.01,411,1.298,412,1.298,413,2.012,414,1.298,415,1.062,416,2.592,417,1.298,418,1.298,419,1.169,420,1.169,421,1.298,422,1.169,423,1.298,424,1.298,425,1.298,426,1.811,427,1.298,428,1.811,429,1.298,430,0.97,431,1.169,432,1.169,433,1.298,434,1.298,435,1.169,436,1.298,437,2.01,438,1.298,439,0.754,440,1.298,441,1.298,442,1.298,443,1.169,444,1.298,445,1.169,446,1.298,447,1.298,448,1.298,449,1.298,450,1.298,451,1.298,452,1.298,453,1.298,454,1.298,455,1.298,456,1.298,457,1.298,458,2.01,459,2.494,460,2.01,461,1.298,462,1.298,463,1.298,464,2.01,465,1.811,466,1.298,467,1.298,468,1.298,469,1.298,470,1.298,471,1.169,472,1.298,473,1.298,474,1.298,475,1.298,476,1.298,477,0.819,478,1.298,479,1.298,480,1.298,481,1.298,482,1.298,483,1.645,484,1.298,485,2.01,486,2.01,487,2.01,488,2.01,489,1.298,490,2.01,491,1.298,492,1.298,493,1.298,494,1.298,495,1.298,496,1.298,497,1.298,498,1.062,499,2.01,500,1.298,501,1.298,502,2.459,503,2.594,504,2.594,505,2.594,506,2.594,507,2.01,508,2.26,509,2.26,510,2.594,511,2.012,512,2.01,513,2.215,514,2.266,515,1.645,516,0.97,517,1.46,518,1.46,519,1.838,520,2.551,521,1.676,522,2.215,523,1.062,524,2.215,525,1.676,526,1.298,527,1.298,528,1.676,529,1.645,530,2.01,531,1.46,532,1.169,533,2.215,534,2.459,535,1.46,536,0.97,537,1.169,538,1.298,539,1.811,540,1.062,541,1.46,542,1.811,543,2.26,544,3.367,545,2.26,546,1.46,547,2.26,548,2.01,549,1.676,550,2.26,551,2.594,552,1.676,553,1.676,554,1.46,555,1.46,556,1.676,557,1.676,558,3.92,559,3.102,560,2.004,561,2.004,562,2.004,563,2.004,564,2.004,565,2.004,566,2.004,567,2.004,568,2.004,569,2.004,570,1.676,571,1.676]],["title/components/AppComponent.html",[55,0.261,310,0.966]],["body/components/AppComponent.html",[3,0.347,4,0.347,5,0.301,7,0.256,10,0.671,13,3.912,14,0.873,16,0.734,17,0.032,18,0.791,19,0.388,20,0.671,31,0.574,33,0.301,34,2.579,38,1.44,39,0.347,40,0.347,42,0.872,44,1.035,48,0.948,50,1.014,53,0.023,54,0.023,55,0.43,56,1.115,57,1.559,58,1.308,59,1.115,60,1.308,65,1.308,66,1.777,67,1.508,69,1.328,70,1.328,71,1.127,72,1.978,74,1.328,78,0.643,86,0.734,102,0.734,110,2.44,114,1.035,115,1.035,130,1.207,133,0.638,135,0.553,147,0.61,208,0.671,269,2.743,296,1.308,297,1.689,298,1.689,299,1.308,300,1.978,301,1.308,308,1.689,309,1.689,310,1.685,311,1.308,312,1.685,313,1.308,314,1.685,315,1.308,316,1.207,317,1.308,318,1.115,319,1.308,320,1.685,321,1.308,322,1.115,323,1.308,324,1.115,325,1.308,326,1.115,327,1.115,328,1.028,329,1.308,330,1.308,331,1.673,334,2.856,335,1.689,378,1.673,435,2.198,572,3.149,573,5.388,574,5.388,575,4.864,576,5.388,577,4.506,578,3.766,579,4.864,580,4.068,581,3.766,582,4.864,583,3.766,584,3.766,585,3.766,586,3.766,587,4.864,588,2.44,589,3.766,590,3.766,591,3.766,592,3.766,593,3.766,594,3.149,595,3.766,596,2.743,597,3.766,598,3.766,599,3.766,600,2.44,601,3.766,602,3.766,603,3.766,604,3.149,605,3.149,606,3.766,607,2.743,608,3.766,609,3.766,610,3.766]],["title/injectables/AuthService.html",[32,0.529,611,2.379]],["body/injectables/AuthService.html",[3,0.303,4,0.303,5,0.262,7,0.223,8,0.791,14,0.993,16,0.866,17,0.032,18,0.652,19,0.45,20,0.791,27,0.942,28,2.396,29,3.08,30,2.468,31,0.497,32,0.72,33,0.262,35,1.341,37,1.053,38,0.972,39,0.303,40,0.303,43,1.303,44,0.945,48,1.267,49,0.887,50,0.585,52,1.863,53,0.021,54,0.021,78,0.588,86,1.052,102,1.227,114,1.071,115,1.071,133,0.389,135,0.482,137,0.838,140,3.148,147,0.72,151,0.652,154,1.158,156,1.916,157,1.166,179,1.358,206,1.341,223,0.972,259,1.749,266,1.375,275,1.213,382,2.236,386,1.236,406,1.236,409,1.874,415,2.355,432,1.916,439,1.672,604,3.715,611,3.236,612,1.341,613,2.746,614,5.034,615,5.034,616,4.442,617,5.394,618,3.93,619,3.93,620,3.93,621,4.442,622,3.283,623,3.391,624,3.283,625,3.283,626,3.283,627,4.442,628,3.652,629,4.106,630,3.283,631,5.034,632,3.283,633,3.283,634,3.283,635,3.283,636,2.355,637,1.916,638,1.59,639,2.127,640,1.916,641,3.283,642,2.746,643,2.746,644,3.283,645,3.236,646,4.442,647,3.283,648,3.283,649,3.283,650,3.283,651,3.283,652,3.283,653,2.392,654,2.127,655,2.392,656,3.283,657,3.283,658,3.283,659,5.034,660,5.034,661,3.283,662,4.442,663,3.715,664,3.764,665,4.442,666,4.442,667,4.442,668,2.355,669,2.593,670,3.715,671,3.715,672,3.283,673,2.746,674,1.341,675,3.93,676,3.283,677,3.283,678,3.283,679,3.715,680,2.746,681,3.236,682,3.715,683,2.878,684,2.746,685,3.283]],["title/interfaces/CapteurData.html",[380,0.966,381,1.229]],["body/interfaces/CapteurData.html",[3,0.378,4,0.378,5,0.327,7,0.279,17,0.032,19,0.469,26,2.655,28,2.741,31,0.517,32,0.832,33,0.327,35,1.674,37,1.314,38,1.213,39,0.378,40,0.378,42,0.949,43,0.872,49,0.888,53,0.024,54,0.024,68,1.423,78,0.679,82,2.609,84,2.609,95,1.542,102,1.203,104,2.211,119,2.074,133,0.695,135,0.754,136,1.401,137,0.679,138,1.674,143,1.519,147,0.664,151,0.602,160,2.655,180,1.883,183,1.82,185,2.28,194,2.655,205,1.82,208,0.73,236,1.314,245,1.119,249,1.674,255,3.739,259,2.04,264,2.172,341,2.721,353,2.485,355,1.984,378,1.82,380,1.213,381,1.932,389,1.984,407,1.314,413,2.721,477,1.674,600,3.325,686,2.391,687,2.985,688,2.985,689,2.985,690,3.426,691,2.985,692,2.995,693,2.172,694,3.426,695,3.426,696,3.426,697,3.426,698,3.426,699,3.426,700,3.426,701,3.426,702,3.426,703,3.426,704,3.426,705,3.739,706,3.426,707,3.426,708,3.426,709,3.426,710,2.985,711,3.426,712,3.426,713,3.426,714,3.426]],["title/interfaces/CapteurData-1.html",[165,0.952,380,0.812,381,1.032]],["body/interfaces/CapteurData-1.html",[3,0.258,4,0.258,5,0.223,7,0.19,17,0.032,19,0.425,31,0.509,33,0.223,39,0.258,40,0.258,41,0.763,42,0.648,43,0.595,44,1.176,49,0.411,50,0.823,52,1.274,53,0.019,54,0.019,55,0.317,59,1.176,61,1.812,64,1.274,66,0.763,67,0.648,68,0.971,69,0.763,70,0.763,71,0.648,72,1.38,73,1.765,74,0.763,78,0.526,82,2.525,84,2.525,90,0.896,95,1.74,100,1.267,102,1.182,104,2.14,119,2.028,126,1.482,127,1.482,128,1.142,130,0.896,133,0.596,135,0.811,136,1.552,137,0.752,138,1.142,139,1.354,143,0.827,147,0.862,148,1.632,151,0.811,154,0.982,157,0.648,165,2.018,179,1.163,180,1.822,181,1.354,183,1.242,185,1.242,195,1.496,202,1.354,203,0.971,205,1.242,208,0.897,210,1.053,221,1.262,222,1.274,223,1.368,224,1.74,229,1.354,236,1.772,245,1.085,248,1.482,249,1.142,266,0.763,275,0.763,332,1.632,333,1.812,334,2.107,335,0.971,336,1.812,337,1.812,338,1.812,339,2.575,340,1.812,341,1.482,342,1.812,343,1.812,344,1.812,346,1.812,347,1.812,348,1.812,349,1.812,350,1.812,351,1.812,353,1.924,355,1.354,356,1.812,357,3.262,359,2.575,372,1.812,375,1.812,377,2.338,378,1.242,379,1.812,380,0.827,381,1.895,382,2.795,383,2.995,384,1.812,385,1.632,386,1.496,387,3.225,388,2.107,389,1.354,390,2.451,391,1.812,392,1.354,393,1.812,394,2.107,395,1.812,396,1.812,397,2.575,398,2.575,399,3.262,400,2.575,401,3.262,402,2.575,403,1.812,404,1.632,405,1.812,406,1.053,407,1.705,408,1.812,409,0.971,410,2.575,411,1.812,412,1.812,413,1.482,414,1.812,415,1.482,416,2.107,417,1.812,418,1.812,419,1.632,420,1.632,421,1.812,422,1.632,423,1.812,424,1.812,425,1.812,426,2.319,427,1.812,428,2.319,429,1.812,430,1.354,431,1.632,432,1.632,433,1.812,434,1.812,435,1.632,436,1.812,437,2.575,438,1.812,439,1.053,440,1.812,441,1.812,442,1.812,443,1.632,444,1.812,445,1.632,446,1.812,447,1.812,448,1.812,449,1.812,450,1.812,451,1.812,452,1.812,453,1.812,454,1.812,455,1.812,456,1.812,457,1.812,458,2.575,459,2.319,460,2.575,461,1.812,462,1.812,463,1.812,464,2.575,465,2.319,466,1.812,467,1.812,468,1.812,469,1.812,470,1.812,471,1.632,472,1.812,473,1.812,474,1.812,475,1.812,476,1.812,477,1.142,478,1.812,479,1.812,480,1.812,481,1.812,482,1.812,483,2.107,484,1.812,485,2.575,486,2.575,487,2.575,488,2.575,489,1.812,490,2.575,491,1.812,492,1.812,493,1.812,494,1.812,495,1.812,496,1.812,497,1.812,498,1.482,499,2.575,500,1.812,501,1.812,502,2.995,686,1.632]],["title/interfaces/CapteurData-2.html",[195,1.032,380,0.812,381,1.032]],["body/interfaces/CapteurData-2.html",[3,0.258,4,0.258,5,0.223,7,0.19,17,0.032,19,0.425,31,0.509,33,0.223,39,0.258,40,0.258,41,0.764,42,0.648,43,0.595,44,1.176,49,0.411,50,0.824,52,1.275,53,0.019,54,0.019,55,0.317,59,1.177,64,1.275,66,0.764,67,0.648,68,0.972,69,0.764,70,0.764,71,0.648,72,1.381,73,1.766,74,0.764,78,0.526,82,2.525,84,2.525,90,0.897,95,1.741,100,1.267,102,1.183,104,2.14,119,2.028,126,1.483,127,1.483,128,1.143,130,0.897,133,0.596,135,0.812,136,1.552,137,0.752,138,1.143,139,1.355,143,0.828,147,0.862,148,1.633,151,0.812,154,0.982,157,0.648,165,2.018,179,1.164,180,1.823,181,1.355,183,1.243,185,1.243,195,1.497,202,1.355,203,0.972,205,1.243,208,0.897,210,1.053,221,1.263,222,1.275,223,1.369,224,1.741,229,1.355,236,1.772,245,1.086,248,1.483,249,1.143,266,0.764,275,0.764,332,1.633,333,1.813,334,2.108,335,0.972,336,1.813,337,1.813,338,1.813,339,2.576,340,1.813,341,1.483,342,1.813,343,1.813,344,1.813,346,1.813,347,1.813,348,1.813,349,1.813,350,1.813,351,1.813,353,1.925,355,1.355,356,1.813,357,3.263,359,2.576,372,1.813,375,1.813,378,1.243,379,1.813,380,0.828,381,1.896,382,2.796,383,2.997,384,1.813,385,1.633,386,1.497,387,3.226,388,2.108,389,1.355,390,2.452,391,1.813,392,1.355,393,1.813,394,2.108,395,1.813,396,1.813,397,2.576,398,2.576,399,3.263,400,2.576,401,3.263,402,2.576,403,1.813,404,1.633,405,1.813,406,1.053,407,1.705,408,1.813,409,0.972,410,2.576,411,1.813,412,1.813,413,1.483,414,1.813,415,1.483,416,2.108,417,1.813,418,1.813,419,1.633,420,1.633,421,1.813,422,1.633,423,1.813,424,1.813,425,1.813,426,2.32,427,1.813,428,2.32,429,1.813,430,1.355,431,1.633,432,1.633,433,1.813,434,1.813,435,1.633,436,1.813,437,2.576,438,1.813,439,1.053,440,1.813,441,1.813,442,1.813,443,1.633,444,1.813,445,1.633,446,1.813,447,1.813,448,1.813,449,1.813,450,1.813,451,1.813,452,1.813,453,1.813,454,1.813,455,1.813,456,1.813,457,1.813,458,2.576,459,2.32,460,2.576,461,1.813,462,1.813,463,1.813,464,2.576,465,2.32,466,1.813,467,1.813,468,1.813,469,1.813,470,1.813,471,1.633,472,1.813,473,1.813,474,1.813,475,1.813,476,1.813,477,1.143,478,1.813,479,1.813,480,1.813,481,1.813,482,1.813,483,2.108,484,1.813,485,2.576,486,2.576,487,2.576,488,2.576,489,1.813,490,2.576,491,1.813,492,1.813,493,1.813,494,1.813,495,1.813,496,1.813,497,1.813,498,1.483,499,2.576,500,1.813,501,1.813,502,2.997,558,1.813,686,1.633]],["title/injectables/CapteurDataService.html",[32,0.529,95,1.229]],["body/injectables/CapteurDataService.html",[3,0.346,4,0.346,5,0.299,7,0.255,8,0.864,10,0.668,14,0.995,16,1.109,17,0.032,18,0.835,19,0.47,20,1.013,26,2.43,27,0.954,28,2.836,31,0.496,32,0.786,33,0.299,35,1.532,37,1.202,38,1.11,39,0.346,40,0.346,42,0.869,43,1.144,49,0.865,53,0.023,54,0.023,68,1.685,78,0.642,82,1.666,84,1.666,95,1.826,102,1.049,104,1.412,114,0.798,115,0.798,119,2.099,133,0.673,135,0.712,136,1.325,137,0.642,138,1.532,143,1.436,147,0.608,151,0.551,160,2.43,180,1.202,183,2.155,185,2.525,194,2.43,205,1.666,208,0.668,236,1.202,245,1.024,249,1.532,255,3.534,259,1.975,264,2.572,341,3.014,352,2.43,353,2.753,355,2.349,378,1.666,380,1.11,381,1.412,389,1.816,407,1.202,413,3.014,477,1.532,600,3.143,612,1.532,687,4.531,688,2.732,689,3.917,690,4.057,691,2.732,692,2.831,693,1.988,694,4.057,695,3.136,696,3.136,697,3.136,698,3.136,699,3.136,700,4.755,701,3.136,702,4.755,703,3.136,704,3.136,705,3.534,706,3.136,707,4.057,708,3.136,709,3.136,710,2.732,711,4.057,712,3.136,713,3.136,714,3.136,715,4.851,716,4.851,717,4.851,718,4.851,719,3.75,720,3.75,721,3.75,722,3.75,723,3.75]],["title/injectables/CaptureService.html",[32,0.529,724,2.379]],["body/injectables/CaptureService.html",[3,0.408,4,0.408,5,0.353,7,0.301,8,0.959,10,1.033,14,0.94,17,0.032,19,0.353,27,0.718,28,2.576,31,0.535,32,0.873,33,0.353,35,1.808,37,1.419,38,1.31,39,0.408,40,0.408,43,1.234,49,0.65,53,0.026,54,0.026,78,0.712,133,0.524,135,0.852,136,1.47,137,0.712,147,0.718,179,1.114,221,1.209,236,1.419,259,1.537,266,1.209,275,1.209,392,2.144,406,1.666,588,2.868,596,3.921,612,1.808,669,3.386,674,1.808,692,3.142,724,3.921,725,3.702,726,4.226,727,6.034,728,5.383,729,4.426,730,3.225,731,3.702,732,3.225,733,3.225,734,2.583,735,3.921,736,4.426,737,3.702,738,4.426,739,3.702,740,1.966,741,3.702,742,3.225,743,3.225,744,3.225,745,4.426,746,3.702,747,4.426,748,3.225,749,2.868,750,4.426,751,4.426]],["title/injectables/CollecteService.html",[32,0.529,752,2.379]],["body/injectables/CollecteService.html",[3,0.27,4,0.27,5,0.234,7,0.199,8,0.732,10,0.845,14,0.969,16,0.925,17,0.032,18,0.697,19,0.379,20,0.845,27,0.953,29,3.359,31,0.437,32,0.666,33,0.234,37,0.94,38,0.868,39,0.27,40,0.27,44,1.251,49,0.878,53,0.02,54,0.02,68,1.019,102,1.094,114,0.624,115,0.624,119,1.799,133,0.641,135,0.864,136,1.653,137,0.81,143,1.74,146,2.453,147,0.834,151,0.431,154,1.193,157,0.68,158,2.453,165,1.428,166,1.939,180,1.318,188,2.399,203,2.043,206,1.198,208,1.065,210,2.214,221,1.776,222,1.848,223,1.74,224,2.169,241,3.001,266,1.122,275,0.801,382,1.826,407,1.521,416,2.179,419,2.77,430,1.421,445,3.363,477,1.679,508,2.137,509,2.137,596,2.137,612,1.198,636,2.516,637,1.712,638,1.421,639,1.901,640,2.399,664,3.81,668,1.555,674,1.939,740,1.303,752,3.457,753,2.453,754,4.214,755,5.142,756,4.11,757,5.142,758,4.11,759,4.11,760,5.142,761,5.142,762,5.142,763,2.933,764,2.933,765,4.11,766,3.457,767,2.933,768,4.11,769,2.933,770,4.11,771,2.933,772,3.457,773,4.11,774,2.933,775,2.933,776,2.933,777,2.933,778,2.933,779,3.81,780,3.81,781,2.933,782,2.933,783,1.901,784,3.81,785,2.933,786,3.438,787,2.453,788,4.745,789,2.933,790,2.453,791,2.994,792,2.399,793,2.453,794,2.933,795,2.933,796,2.933,797,2.933,798,2.453,799,2.933,800,2.453,801,1.901,802,2.933,803,1.555,804,2.933,805,2.453,806,2.933,807,2.933,808,2.933,809,4.11,810,2.933,811,4.11,812,1.901,813,2.933,814,2.933,815,2.137,816,2.453,817,2.933,818,4.11,819,2.933,820,2.453,821,2.933,822,2.933,823,4.11,824,2.933]],["title/components/FooterComponent.html",[55,0.261,312,0.966]],["body/components/FooterComponent.html",[3,0.357,4,0.357,5,0.309,7,0.263,8,0.882,10,0.973,14,0.885,17,0.032,18,0.727,19,0.309,27,0.628,31,0.457,33,0.309,39,0.357,40,0.357,41,1.353,48,0.975,50,0.882,53,0.024,54,0.024,55,0.436,56,1.147,57,1.588,58,1.346,59,1.147,60,1.346,64,1.751,65,1.346,66,1.783,67,1.513,69,1.353,70,1.491,71,1.148,72,2.066,74,1.353,78,0.655,86,0.755,90,1.845,100,1.247,114,0.824,115,0.824,119,1.588,130,1.242,133,0.586,135,0.802,137,0.513,151,0.569,195,1.865,296,1.346,297,1.721,298,1.721,299,1.346,300,1.999,301,1.346,308,1.721,309,1.721,310,1.147,311,1.346,312,1.703,313,1.346,314,1.147,315,1.346,316,1.242,317,1.346,318,1.147,319,1.346,320,1.147,321,1.346,322,1.147,323,1.346,324,1.147,325,1.346,326,1.147,327,1.147,328,1.058,329,1.346,330,1.346,331,1.721,335,1.721,439,1.459,516,1.876,519,1.876,520,1.876,522,2.261,529,2.054,530,2.51,536,1.876,540,2.054,825,3.24,826,4.567,827,5.46,828,4.953,829,3.978,830,5.947,831,4.953,832,3.874,833,4.953,834,3.24,835,3.24,836,4.953,837,3.874,838,4.143,839,4.953,840,4.143,841,4.953,842,2.822,843,2.822,844,3.24,845,2.51,846,2.261,847,3.24,848,3.609,849,4.143,850,2.51,851,2.51,852,2.822,853,3.874]],["title/components/HeaderComponent.html",[55,0.261,314,0.966]],["body/components/HeaderComponent.html",[3,0.124,4,0.124,5,0.271,7,0.153,8,0.401,10,0.401,11,0.652,12,1.776,14,0.961,16,0.795,17,0.032,18,0.667,19,0.459,20,0.726,23,0.98,27,0.874,30,1.854,31,0.399,33,0.18,36,0.652,39,0.124,40,0.207,41,0.614,43,1.147,44,1.064,46,0.713,48,0.339,49,0.198,50,0.771,52,1.512,53,0.011,54,0.011,55,0.232,56,0.398,57,0.722,58,0.467,59,0.666,60,0.467,64,0.93,65,0.467,66,1.472,67,1.249,68,0.467,69,0.614,70,0.614,71,0.521,72,1.007,73,1.288,74,0.614,78,0.298,86,0.795,90,1.087,100,1.507,102,0.949,110,2.444,114,0.966,115,0.921,120,1.42,128,0.919,130,0.431,133,0.655,135,0.426,137,0.848,140,1.693,145,1.405,147,0.611,151,0.875,154,0.975,157,0.874,160,0.872,166,0.919,179,0.339,195,0.507,202,1.09,203,0.467,206,0.55,208,0.604,215,0.98,221,1.239,222,0.431,226,1.458,229,0.652,244,1.313,245,1.114,259,1.007,261,2.469,266,0.614,271,1.978,275,1.182,279,1.458,296,0.467,297,0.782,298,0.782,299,0.467,300,1.177,301,0.467,308,0.782,309,0.782,310,0.398,311,0.467,312,0.398,313,0.467,314,1.003,315,0.467,316,0.431,317,0.467,318,0.398,319,0.467,320,0.398,321,0.467,322,0.398,323,0.467,324,0.398,325,0.467,326,0.398,327,0.398,328,0.367,329,0.467,330,0.467,331,1,335,0.782,368,0.785,382,1.675,386,0.847,388,0.713,389,0.652,392,0.652,406,0.507,407,0.93,409,1.007,428,1.313,430,0.652,439,0.847,465,1.313,471,0.785,511,2.406,512,1.458,513,1.693,514,2.964,515,1.538,516,2.097,519,2.647,520,3.047,522,1.978,523,2.295,524,2.201,526,0.872,527,2.196,529,2.162,532,1.313,533,0.785,534,3.316,536,2.198,537,1.693,538,0.872,539,2.842,540,2,542,2.201,543,0.98,545,1.639,546,3.154,547,1.639,548,0.872,554,0.98,607,0.98,620,2.469,623,1.693,643,1.882,653,4.342,654,1.458,655,1.639,668,0.713,674,1.541,675,1.639,692,1.313,693,0.713,733,0.98,734,1.313,742,0.98,743,0.98,792,0.785,803,1.193,815,1.639,816,1.882,826,1.882,829,2.113,843,1.639,845,2.444,846,2.38,848,0.98,850,0.872,851,1.458,854,1.125,855,3.39,856,2.9,857,2.9,858,2.25,859,2.9,860,2.9,861,2.9,862,2.9,863,2.9,864,2.9,865,2.9,866,2.9,867,3.39,868,2.25,869,3.39,870,2.25,871,3.39,872,3.39,873,2.25,874,2.25,875,3.39,876,3.39,877,3.39,878,3.39,879,2.25,880,2.426,881,2.835,882,2.9,883,3.39,884,2.9,885,3.772,886,2.25,887,1.346,888,2.25,889,1.346,890,1.346,891,1.346,892,1.346,893,1.346,894,1.882,895,1.346,896,1.346,897,1.346,898,2.25,899,1.346,900,2.25,901,1.346,902,1.346,903,1.346,904,1.346,905,1.346,906,2.25,907,1.346,908,4.723,909,2.9,910,1.346,911,1.346,912,1.346,913,1.346,914,1.346,915,1.346,916,2.426,917,1.346,918,2.25,919,2.25,920,1.346,921,1.346,922,1.346,923,2.25,924,1.125,925,1.346,926,0.785,927,0.872,928,0.713,929,1.346,930,1.346,931,1.346,932,4.329,933,2.835,934,2.426,935,1.346,936,1.125,937,1.346,938,1.346,939,1.346,940,1.346,941,1.346,942,2.9,943,2.9,944,3.154,945,1.346,946,1.346,947,1.346,948,1.346,949,2.835,950,1.346,951,3.772,952,2.25,953,2.25,954,0.98,955,1.346,956,1.346,957,1.346,958,1.346,959,2.25,960,2.25,961,1.346,962,2.25,963,1.346,964,2.9,965,1.346,966,1.346,967,3.39,968,2.25,969,2.426,970,2.25,971,1.639,972,1.125,973,1.346,974,1.346,975,2.9,976,2.9,977,1.125,978,1.882,979,1.125,980,1.346,981,1.125,982,1.346,983,1.346,984,1.346,985,1.346,986,1.346,987,4.539,988,2.196,989,0.872,990,1.879,991,1.346,992,1.346,993,2.9,994,1.125,995,1.882,996,4.84,997,1.346,998,1.346,999,1.346,1000,1.346,1001,1.346,1002,1.346,1003,1.346,1004,1.346,1005,1.346,1006,0.872,1007,1.125,1008,1.125,1009,1.346,1010,1.346,1011,1.346,1012,1.346,1013,1.346,1014,2.25,1015,1.346,1016,3.944,1017,1.346,1018,2.25,1019,2.25,1020,1.346,1021,1.346,1022,1.639,1023,1.346,1024,2.9,1025,1.346,1026,1.346,1027,1.346,1028,1.346,1029,1.346,1030,1.125,1031,1.346,1032,2.25,1033,1.125,1034,4.182,1035,1.346,1036,1.346,1037,3.772,1038,1.125,1039,1.346,1040,1.346,1041,1.346,1042,1.346,1043,1.346,1044,1.346,1045,2.835,1046,2.9,1047,2.25,1048,1.882,1049,1.639,1050,1.882,1051,1.882,1052,2.25,1053,2.25,1054,2.835,1055,3.154,1056,3.39,1057,2.25,1058,2.25,1059,1.882,1060,2.25,1061,2.25,1062,2.25,1063,2.25,1064,2.25,1065,2.25,1066,1.882,1067,1.639,1068,1.346,1069,1.125,1070,1.346,1071,2.426,1072,2.25,1073,2.25,1074,2.25,1075,1.882,1076,3.796,1077,3.62,1078,3.154,1079,4.078,1080,1.346,1081,1.346,1082,1.346,1083,2.25,1084,2.25,1085,2.9,1086,2.25,1087,2.9,1088,1.882,1089,2.9,1090,3.41,1091,2.835,1092,1.346,1093,1.346,1094,2.971,1095,4.329,1096,3.316,1097,3.155,1098,1.882,1099,1.346,1100,1.346,1101,1.346,1102,1.346,1103,2.25,1104,1.125,1105,2.25,1106,1.346,1107,1.882,1108,2.25,1109,3.39,1110,0.98,1111,1.125,1112,1.125,1113,1.346,1114,0.872,1115,2.113,1116,0.872,1117,0.872,1118,2.25,1119,1.346,1120,2.25,1121,1.125,1122,1.346,1123,1.346,1124,1.346,1125,2.9,1126,2.25,1127,1.346,1128,1.346,1129,2.25,1130,1.346,1131,3.056,1132,1.882,1133,4.279,1134,2.25,1135,2.25,1136,1.125,1137,2.642,1138,1.346,1139,1.125,1140,1.346,1141,1.346,1142,1.346,1143,1.346,1144,1.346,1145,1.346,1146,1.346,1147,1.346,1148,1.346,1149,1.346,1150,1.346,1151,4.539,1152,1.346,1153,2.25,1154,1.346,1155,1.346,1156,1.346,1157,1.346,1158,1.346,1159,1.346,1160,1.346,1161,0.98,1162,1.346,1163,1.346,1164,1.125,1165,1.125,1166,1.346,1167,2.25,1168,1.125,1169,0.98,1170,1.346,1171,2.444,1172,2.25,1173,2.25,1174,1.639,1175,1.639,1176,1.346,1177,1.125,1178,1.125,1179,1.346,1180,0.872,1181,2.25,1182,1.346,1183,1.346,1184,1.639,1185,1.346,1186,0.98,1187,2.25,1188,2.25,1189,1.346,1190,1.346,1191,1.346,1192,1.346,1193,1.346,1194,1.346,1195,1.346,1196,1.125,1197,1.346,1198,1.346,1199,1.346,1200,1.346,1201,1.346,1202,2.25,1203,1.346,1204,1.346,1205,2.25,1206,1.346,1207,1.639,1208,1.125,1209,1.346,1210,1.346,1211,1.346,1212,2.25,1213,2.25,1214,1.346,1215,1.346,1216,1.125,1217,1.346,1218,0.98]],["title/injectables/LogsApiService.html",[32,0.529,1219,2.116]],["body/injectables/LogsApiService.html",[3,0.305,4,0.305,5,0.265,7,0.225,8,0.796,10,0.901,14,0.944,16,0.986,17,0.032,18,0.743,19,0.432,20,0.901,27,0.878,29,3.21,31,0.412,32,0.725,33,0.265,37,1.062,38,0.98,39,0.305,40,0.305,43,1.076,44,1.152,49,0.795,53,0.021,54,0.021,78,0.591,102,1.237,114,0.705,115,0.705,133,0.641,135,0.919,137,0.828,143,1.792,151,0.486,154,1.056,157,1.172,166,1.826,180,1.736,203,1.881,208,0.901,210,2.038,221,1.721,222,1.736,223,1.602,224,2.038,231,3.944,235,3.256,244,2.609,264,3.21,409,1.552,600,2.896,612,1.353,636,2.369,637,1.934,638,1.604,640,1.934,664,3.508,689,3.685,740,1.985,754,4.084,772,3.256,779,3.508,780,3.508,783,2.147,784,3.508,1055,2.771,1091,2.771,1116,3.508,1219,2.896,1220,4.979,1221,2.413,1222,5.058,1223,5.414,1224,4.469,1225,4.469,1226,4.469,1227,4.469,1228,3.313,1229,3.277,1230,6.054,1231,4.469,1232,3.313,1233,4.469,1234,3.685,1235,4.469,1236,5.653,1237,3.313,1238,4.469,1239,4.469,1240,5.058,1241,4.469,1242,5.414,1243,4.469,1244,4.469,1245,3.313,1246,2.952,1247,3.256,1248,3.738,1249,2.771,1250,4.243,1251,3.313,1252,3.313,1253,3.313,1254,3.313,1255,4.528,1256,3.313,1257,3.313,1258,3.313,1259,3.313,1260,3.313]],["title/components/LogsComponent.html",[55,0.261,318,0.966]],["body/components/LogsComponent.html",[3,0.224,4,0.224,5,0.194,7,0.165,8,0.64,10,0.434,14,0.976,16,0.701,17,0.032,18,0.693,19,0.464,20,0.64,27,0.765,31,0.464,33,0.194,39,0.224,40,0.224,41,0.981,42,0.564,44,1.071,48,0.613,49,0.693,50,0.64,53,0.017,54,0.017,55,0.341,56,0.72,57,1.152,58,0.846,59,0.72,60,0.846,64,1.37,65,0.846,66,1.672,67,1.418,68,1.639,69,0.981,70,0.981,71,0.833,72,1.484,73,1.898,74,0.981,78,0.475,80,2.938,86,0.475,90,1.513,100,1.188,102,1.027,104,1.609,114,1.19,115,1.19,119,1.152,120,1.983,128,0.995,130,0.78,133,0.288,135,0.8,136,0.665,137,0.768,139,1.179,143,1.064,144,1.773,145,1.179,147,0.765,151,0.528,154,0.982,157,0.833,165,1.748,170,3.006,180,1.614,208,0.434,221,0.981,225,1.577,226,1.577,245,0.981,264,2.265,296,0.846,297,1.248,298,1.248,299,0.846,300,1.639,301,0.846,308,1.248,309,1.248,310,0.72,311,0.846,312,0.72,313,0.846,314,0.72,315,0.846,316,0.78,317,0.846,318,1.396,319,0.846,320,0.72,321,0.846,322,0.72,323,0.846,324,0.72,325,0.846,326,0.72,327,0.72,328,0.665,329,0.846,330,0.846,331,1.081,335,1.248,386,1.609,390,2.502,406,1.609,407,0.78,439,0.916,477,1.468,483,2.502,498,1.906,507,1.577,511,1.906,512,1.577,513,1.421,514,2.502,515,1.906,516,1.179,519,2.285,520,2.709,523,1.291,526,3.057,529,1.906,532,1.421,536,1.741,537,2.098,538,1.577,540,1.291,674,2.056,740,1.081,754,2.769,766,3.113,779,1.577,780,1.577,784,1.577,803,1.291,820,3.006,842,2.618,845,1.577,846,1.421,850,1.577,851,1.577,926,1.421,927,1.577,928,1.291,1006,1.577,1048,2.036,1076,2.036,1077,2.036,1078,2.036,1094,1.773,1096,1.577,1097,1.577,1110,2.618,1111,2.036,1114,2.329,1115,1.773,1117,1.577,1131,2.329,1132,2.036,1133,3.006,1137,1.577,1168,2.036,1169,1.773,1171,2.329,1174,1.773,1175,1.773,1177,3.006,1178,3.006,1180,2.329,1184,1.773,1186,1.773,1207,1.773,1219,3.057,1234,1.773,1246,2.098,1250,4.387,1255,2.036,1261,2.036,1262,3.574,1263,4.273,1264,3.594,1265,3.574,1266,4.273,1267,3.574,1268,3.574,1269,3.574,1270,4.718,1271,3.594,1272,3.946,1273,2.434,1274,3.594,1275,3.594,1276,2.434,1277,3.594,1278,5.033,1279,2.434,1280,3.006,1281,2.434,1282,3.594,1283,4.718,1284,3.574,1285,4.273,1286,3.594,1287,3.594,1288,2.434,1289,4.273,1290,4.273,1291,2.434,1292,2.434,1293,2.618,1294,2.434,1295,2.434,1296,2.434,1297,2.434,1298,4.678,1299,3.574,1300,2.434,1301,2.434,1302,2.036,1303,2.434,1304,2.434,1305,2.434,1306,2.434,1307,2.434,1308,2.434,1309,2.036,1310,2.434,1311,2.434,1312,2.434,1313,3.006,1314,2.036,1315,2.036,1316,2.618,1317,2.036,1318,2.434,1319,3.006,1320,2.036,1321,3.006,1322,3.006,1323,2.434,1324,2.434,1325,3.006,1326,3.946,1327,2.434,1328,3.006,1329,3.006,1330,3.006,1331,2.434,1332,2.434,1333,2.434,1334,2.434,1335,2.434,1336,2.434,1337,3.594,1338,3.594,1339,3.594,1340,3.594,1341,3.594,1342,3.594,1343,2.618,1344,3.006,1345,2.434,1346,2.434,1347,2.434,1348,2.434,1349,2.434,1350,5.449,1351,2.434,1352,3.113,1353,2.434,1354,2.434,1355,2.434,1356,2.434,1357,2.434,1358,2.036,1359,2.036,1360,2.036,1361,2.036,1362,2.434,1363,2.434,1364,2.434,1365,2.434,1366,2.434,1367,2.434,1368,2.434,1369,2.036,1370,2.036,1371,2.434,1372,2.434]],["title/components/MenuComponent.html",[55,0.261,320,0.966]],["body/components/MenuComponent.html",[3,0.277,4,0.277,5,0.24,7,0.204,8,0.744,10,0.535,11,1.453,12,2.183,14,0.94,16,0.585,17,0.032,18,0.705,19,0.436,20,0.535,27,0.779,30,2.485,31,0.479,33,0.24,34,1.591,36,1.453,39,0.277,40,0.277,41,1.14,42,0.695,48,1.209,49,0.613,50,0.744,52,1.812,53,0.02,54,0.02,55,0.384,56,0.888,57,1.339,58,1.042,59,0.888,60,1.042,64,1.54,65,1.042,66,1.727,67,1.465,69,1.14,70,1.14,71,0.968,72,1.669,74,1.14,78,0.552,86,0.937,90,1.665,100,1.051,114,1.022,115,1.022,120,1.809,130,0.962,133,0.615,135,0.802,137,0.635,145,2.023,147,0.885,151,0.763,154,0.585,157,0.695,206,1.226,208,0.856,223,0.888,244,1.752,245,0.819,259,1.042,266,1.14,275,1.14,296,1.042,297,1.451,298,1.451,299,1.042,300,1.804,301,1.042,308,1.451,309,1.451,310,0.888,311,1.042,312,0.888,313,1.042,314,0.888,315,1.042,316,0.962,317,1.042,318,0.888,319,1.042,320,1.537,321,1.042,322,0.888,323,1.042,324,0.888,325,1.042,326,0.888,327,0.888,328,1.312,329,1.042,330,1.042,331,1.333,335,1.451,409,1.451,511,2.214,514,2.214,515,1.591,516,1.453,517,2.186,518,2.186,519,2.023,520,2.644,522,2.438,523,1.591,524,2.804,529,1.591,530,1.945,532,1.752,533,1.752,536,2.326,537,2.438,539,1.752,555,2.186,618,3.5,619,3.5,674,1.706,683,1.945,733,2.186,734,1.752,740,1.855,783,1.945,812,1.945,842,2.186,843,2.186,844,4.344,845,2.706,846,2.438,847,2.51,848,3.784,849,3.493,850,1.945,851,1.945,852,2.186,954,2.186,1069,2.51,1094,3.043,1096,2.706,1097,1.945,1131,2.706,1137,3.365,1139,3.493,1161,2.186,1164,2.51,1169,2.186,1171,1.945,1174,2.186,1175,2.186,1180,1.945,1184,2.186,1196,2.51,1216,2.51,1250,3.043,1352,3.5,1358,2.51,1359,2.51,1360,2.51,1361,2.51,1369,2.51,1370,2.51,1373,2.51,1374,4.804,1375,4.804,1376,4.804,1377,4.177,1378,4.017,1379,5.194,1380,5.194,1381,4.177,1382,3.001,1383,3.001,1384,3.001,1385,3.001,1386,3.001,1387,3.001,1388,2.51,1389,1.945,1390,3.001,1391,3.001,1392,4.177,1393,3.001,1394,4.177,1395,3.001,1396,3.001,1397,3.001,1398,3.001,1399,5.46,1400,5.194,1401,5.653,1402,2.51,1403,3.001,1404,3.493,1405,3.001,1406,2.51,1407,3.001,1408,3.001,1409,3.493,1410,3.001,1411,4.177,1412,3.001,1413,3.001,1414,3.001,1415,2.51,1416,3.001,1417,3.001,1418,2.51,1419,3.001,1420,3.001,1421,3.001,1422,5.194,1423,3.001,1424,3.001,1425,2.51,1426,3.001]],["title/components/MyAccountComponent.html",[55,0.261,322,0.966]],["body/components/MyAccountComponent.html",[3,0.373,4,0.373,5,0.323,7,0.275,8,0.907,10,0.721,11,1.96,12,2.316,14,0.903,16,0.789,17,0.032,18,0.818,19,0.407,20,0.721,27,0.656,31,0.469,33,0.323,36,1.96,39,0.373,40,0.373,41,1.391,42,0.937,46,2.145,48,1.019,50,0.907,53,0.024,54,0.024,55,0.445,56,1.198,57,1.633,58,1.406,59,1.198,60,1.406,64,1.787,65,1.406,66,1.792,67,1.52,69,1.391,70,1.105,71,1.18,74,1.391,76,3.71,78,0.674,86,1.14,90,1.875,100,1.282,140,2.362,271,2.972,296,1.406,297,1.769,298,1.769,299,1.406,300,2.031,301,1.406,308,1.769,309,1.769,310,1.198,311,1.406,312,1.198,313,1.406,314,1.198,315,1.406,316,1.297,317,1.406,318,1.198,319,1.406,320,1.198,321,1.406,322,1.731,323,1.406,324,1.198,325,1.406,326,1.198,327,1.198,328,1.105,329,1.406,330,1.406,1343,3.71,1427,4.89,1428,4.89,1429,3.384,1430,5.848,1431,5.092,1432,5.092,1433,5.092,1434,4.047,1435,4.259,1436,5.092,1437,5.092,1438,5.092,1439,5.092]],["title/components/RegisterComponent.html",[55,0.261,324,0.966]],["body/components/RegisterComponent.html",[3,0.41,4,0.41,5,0.355,17,0.031,18,0.793,31,0.41,33,0.355,39,0.41,40,0.41,48,1.12,50,0.962,53,0.026,54,0.026,55,0.464,56,1.316,57,1.731,58,1.545,59,1.316,60,1.545,65,1.545,66,1.809,67,1.535,69,1.474,70,1.215,71,1.251,74,1.474,76,3.933,86,0.867,296,1.545,297,1.875,298,1.875,299,1.545,300,2.099,301,1.545,308,1.875,309,1.875,310,1.316,311,1.545,312,1.316,313,1.545,314,1.316,315,1.545,316,1.426,317,1.545,318,1.316,319,1.545,320,1.316,321,1.545,322,1.316,323,1.545,324,1.789,325,1.545,326,1.316,327,1.316,328,1.215,329,1.545,330,1.545,605,5.055,1440,3.72,1441,5.398,1442,5.398,1443,5.398]],["title/injectables/SocketService.html",[32,0.529,1444,2.379]],["body/injectables/SocketService.html",[3,0.365,4,0.365,5,0.316,7,0.269,8,0.895,10,0.706,14,0.971,16,1.076,17,0.032,18,0.81,19,0.463,20,0.983,27,0.895,28,2.451,31,0.552,32,0.815,33,0.401,35,1.619,37,1.271,38,1.173,39,0.365,40,0.365,42,0.918,43,1.174,49,0.582,52,1.271,53,0.024,54,0.024,78,0.665,100,1.461,102,1.193,110,3.256,133,0.653,137,0.524,147,0.895,151,0.582,154,0.773,157,1.164,179,0.997,236,1.271,259,1.917,392,1.919,394,2.101,404,2.313,420,2.313,607,2.887,612,1.619,645,3.661,683,2.568,726,4.625,730,2.887,731,3.314,732,2.887,735,3.661,737,4.203,741,3.314,744,2.887,746,3.314,803,3.244,1022,2.887,1067,2.887,1116,2.568,1444,3.661,1445,3.314,1446,5.803,1447,5.025,1448,5.025,1449,3.963,1450,5.803,1451,5.025,1452,5.025,1453,3.963,1454,5.025,1455,3.963,1456,5.025,1457,3.963,1458,3.963,1459,3.314,1460,3.963,1461,3.963,1462,3.963,1463,3.963,1464,3.314,1465,3.963,1466,3.963,1467,3.963,1468,3.963,1469,3.963,1470,3.963,1471,3.963,1472,3.963,1473,3.963,1474,3.314,1475,3.963,1476,3.963,1477,3.963,1478,3.963,1479,3.963,1480,3.963,1481,3.963,1482,3.963]],["title/interfaces/User.html",[86,0.637,380,0.966]],["body/interfaces/User.html",[3,0.177,4,0.177,5,0.383,7,0.251,10,0.341,17,0.032,18,0.762,19,0.457,20,0.657,30,1.85,31,0.462,33,0.239,39,0.177,40,0.177,41,0.523,43,0.785,44,1.234,49,0.817,50,0.894,52,1.75,53,0.014,54,0.014,55,0.239,64,0.961,66,0.523,67,0.444,69,0.523,70,0.523,72,1.041,73,1.331,74,0.523,78,0.396,80,1.119,86,1.064,90,0.615,96,1.397,97,2.183,100,1.459,102,1.244,114,0.408,115,0.638,119,0.961,120,0.722,128,0.783,130,0.615,133,0.536,135,0.665,136,1.008,137,0.813,145,1.452,147,0.778,151,0.841,154,1.171,165,1.573,166,1.508,168,1.603,179,0.929,180,1.711,206,0.783,208,0.807,221,0.818,222,1.452,223,1.579,224,1.128,225,3.457,236,0.615,245,1.008,259,0.666,266,0.818,271,1.749,275,1.236,327,0.567,328,1.139,335,0.666,368,1.749,380,0.887,382,2.575,385,1.749,386,2.244,394,1.016,406,1.128,407,0.961,409,1.853,415,1.016,430,0.928,439,1.389,477,1.224,483,1.589,498,1.589,507,1.942,577,1.603,588,1.242,623,3.03,628,2.391,629,2.183,668,1.016,673,2.507,674,1.224,679,1.603,680,2.507,681,1.397,684,2.507,686,1.119,693,1.589,734,1.119,749,1.242,766,1.397,791,1.397,792,2.436,801,3.111,812,1.942,815,1.397,835,1.603,880,1.603,881,2.507,894,1.603,916,2.507,924,1.603,926,1.749,927,1.942,928,1.589,977,1.603,988,3.457,989,3.536,990,1.942,994,1.603,995,3.49,1006,1.942,1022,2.183,1033,1.603,1034,4.341,1038,2.507,1049,3.887,1050,2.507,1051,2.507,1165,1.603,1218,3.04,1229,1.242,1246,2.928,1247,2.183,1262,2.507,1265,1.603,1267,1.603,1268,1.603,1269,1.603,1272,1.603,1280,1.603,1293,1.397,1298,4.015,1299,2.507,1302,1.603,1313,3.086,1319,2.507,1320,3.086,1321,3.086,1322,2.507,1325,2.507,1326,3.49,1328,2.507,1329,2.507,1330,2.507,1389,1.942,1418,1.603,1435,2.507,1483,1.603,1484,4.528,1485,4.528,1486,4.528,1487,4.528,1488,4.8,1489,4.528,1490,4.341,1491,2.391,1492,1.917,1493,1.917,1494,1.917,1495,1.917,1496,1.917,1497,2.997,1498,1.917,1499,1.917,1500,1.917,1501,1.917,1502,1.917,1503,1.917,1504,1.917,1505,1.917,1506,1.917,1507,1.917,1508,1.917,1509,2.997,1510,1.917,1511,1.917,1512,1.917,1513,1.917,1514,1.917,1515,1.917,1516,1.917,1517,1.917,1518,1.917,1519,1.917,1520,1.917,1521,1.917,1522,1.917,1523,2.997,1524,1.917,1525,1.917,1526,1.603,1527,1.917,1528,1.917,1529,1.917,1530,2.997,1531,1.603,1532,1.917,1533,1.917,1534,1.917,1535,1.917,1536,1.917,1537,1.917,1538,2.997,1539,2.507,1540,4.173,1541,4.173,1542,1.917,1543,4.173,1544,4.528,1545,3.04,1546,3.69,1547,1.917,1548,1.917,1549,1.917,1550,1.917,1551,1.917,1552,4.173,1553,2.997,1554,3.69,1555,2.997,1556,1.917,1557,1.917,1558,1.917,1559,1.917,1560,1.917,1561,2.997,1562,1.917,1563,1.917,1564,1.917,1565,2.997,1566,1.917,1567,2.997,1568,1.917,1569,2.997,1570,1.917,1571,1.917,1572,1.917,1573,2.688,1574,1.917,1575,3.69,1576,1.917,1577,1.917,1578,1.917,1579,1.917,1580,1.917,1581,1.917,1582,1.917,1583,1.917,1584,1.917,1585,2.997,1586,1.603,1587,1.917,1588,1.917,1589,1.603,1590,1.917,1591,2.507,1592,1.603,1593,1.917,1594,1.917,1595,1.917,1596,1.917,1597,1.917,1598,1.917,1599,1.917,1600,1.917,1601,1.917,1602,1.917,1603,1.917,1604,1.917,1605,1.917,1606,1.917,1607,1.917,1608,1.917,1609,1.917,1610,2.997,1611,1.917,1612,1.917,1613,1.917,1614,1.917,1615,3.69,1616,2.507,1617,3.086,1618,1.917,1619,2.997,1620,1.917,1621,1.917,1622,1.917,1623,2.997,1624,1.917,1625,1.917,1626,1.917,1627,1.917,1628,2.507,1629,1.917,1630,1.917,1631,1.603,1632,1.917,1633,1.917,1634,2.997,1635,1.917,1636,1.917,1637,1.917,1638,2.507,1639,1.917,1640,3.69,1641,1.917,1642,1.917,1643,4.173,1644,1.917,1645,1.917,1646,1.917,1647,1.917,1648,1.917,1649,1.917,1650,1.917,1651,1.917,1652,1.917,1653,1.603,1654,1.917,1655,1.917,1656,1.917,1657,1.917,1658,1.917,1659,1.917,1660,1.917,1661,1.917,1662,1.917,1663,1.917,1664,1.917,1665,1.917,1666,1.917,1667,1.917,1668,1.917,1669,1.917,1670,1.917,1671,1.917]],["title/injectables/UserApiService.html",[32,0.529,1491,2.116]],["body/injectables/UserApiService.html",[3,0.242,4,0.242,5,0.209,7,0.178,8,0.676,14,0.877,16,1.054,17,0.032,18,0.819,19,0.456,20,0.963,27,0.877,29,3.207,30,1.822,31,0.411,32,0.615,33,0.209,37,0.841,38,0.776,39,0.242,40,0.242,44,1.215,49,0.794,50,0.676,53,0.018,54,0.018,86,0.74,102,1.228,114,0.808,115,0.558,133,0.579,135,0.718,136,1.416,137,0.814,143,1.32,144,3.249,145,1.27,147,0.615,151,0.762,154,1.054,156,1.531,157,1.323,166,2.209,179,1.404,203,0.911,206,1.071,208,0.924,210,1.429,221,1.72,222,1.895,223,1.6,224,0.987,236,1.866,263,2.193,266,1.036,275,1.416,328,1.036,368,2.215,386,2.15,406,1.679,407,1.788,409,1.698,594,2.193,612,1.071,623,1.531,628,1.699,636,2.867,637,1.531,638,1.27,639,1.699,640,1.531,642,2.193,664,3.878,668,1.39,669,2.853,670,3.174,681,3.249,693,1.39,740,1.165,749,2.89,754,4.082,772,4.16,779,3.504,780,3.504,784,3.504,786,3.73,787,3.174,790,3.174,792,3.255,793,2.193,800,2.193,801,2.89,803,2.012,805,3.174,812,3.167,954,1.91,971,3.561,988,1.699,989,2.89,990,1.699,1006,1.699,1030,3.174,1049,1.91,1114,1.699,1218,1.91,1221,1.91,1229,1.699,1246,3.494,1249,2.193,1314,2.193,1315,2.193,1316,1.91,1317,2.193,1344,2.193,1389,2.89,1490,2.193,1491,2.459,1539,3.174,1545,3.249,1573,2.765,1586,2.193,1589,3.174,1591,2.193,1592,2.193,1628,3.174,1638,2.193,1653,3.174,1672,4.664,1673,3.795,1674,3.795,1675,3.795,1676,3.174,1677,3.795,1678,3.795,1679,2.622,1680,3.795,1681,2.622,1682,2.622,1683,2.622,1684,2.622,1685,3.795,1686,2.622,1687,3.795,1688,2.622,1689,3.73,1690,3.795,1691,2.622,1692,2.622,1693,2.622,1694,3.795,1695,2.622,1696,2.622,1697,2.622,1698,5.187,1699,2.622,1700,2.622,1701,3.249,1702,2.622,1703,2.622,1704,4.46,1705,2.622,1706,2.622,1707,2.193,1708,2.622,1709,2.622,1710,2.622,1711,4.46,1712,5.187,1713,2.622,1714,4.46,1715,2.622,1716,2.622,1717,4.46,1718,2.622,1719,2.622,1720,2.622,1721,2.622,1722,2.622,1723,2.193,1724,2.622,1725,2.622,1726,2.622,1727,2.622,1728,2.622,1729,2.622,1730,3.795,1731,2.622,1732,2.622,1733,2.622,1734,2.622,1735,2.622,1736,2.622,1737,2.622,1738,2.622,1739,2.622,1740,2.622,1741,2.622,1742,3.795,1743,3.795,1744,2.622,1745,2.622]],["title/guards/UserGuard.html",[0,2.379,1746,2.379]],["body/guards/UserGuard.html",[2,3.248,3,0.411,4,0.411,5,0.356,7,0.303,8,0.963,9,5.183,10,0.794,11,2.159,12,2.372,13,4.13,14,0.876,16,1.054,17,0.032,18,0.794,19,0.432,20,0.963,21,3.729,22,5.059,23,4.239,24,5.059,26,3.503,27,0.723,28,2.585,29,2.866,30,2.209,31,0.558,32,0.876,33,0.356,34,2.364,35,1.822,36,2.159,37,1.43,38,1.32,39,0.411,40,0.411,41,1.218,42,1.033,43,0.949,44,0.949,45,3.939,46,2.364,47,3.729,49,0.794,50,0.794,51,3.248,52,1.43,53,0.026,54,0.026,86,0.869,1746,3.939,1747,3.729,1748,4.459,1749,4.459]],["title/components/UserPageComponent.html",[55,0.261,326,0.966]],["body/components/UserPageComponent.html",[3,0.197,4,0.197,5,0.171,7,0.145,8,0.581,10,0.381,11,1.035,12,1.792,14,0.951,16,0.771,17,0.032,18,0.699,19,0.449,20,0.704,27,0.772,31,0.439,33,0.26,36,1.035,39,0.197,40,0.197,41,0.89,42,0.495,43,0.455,44,1.145,46,1.133,48,0.538,49,0.649,50,0.581,53,0.015,54,0.015,55,0.316,56,0.633,57,1.045,58,0.743,59,0.633,60,0.743,63,1.558,64,1.267,65,0.743,66,1.634,67,1.386,68,1.133,69,0.89,70,0.89,71,1.103,74,0.89,75,2.727,77,3.305,78,0.431,79,3.981,80,2.307,82,1.756,83,3.305,84,1.756,85,3.305,86,1.115,87,3.698,88,2.727,89,2.727,90,1.418,94,3.698,95,1.964,96,2.879,97,3.221,100,1.263,101,2.727,102,1.156,104,1.228,105,2.727,114,1.068,115,1.068,117,1.788,118,1.788,119,1.418,120,1.889,124,2.727,125,1.788,126,1.133,127,1.133,133,0.637,134,1.788,135,0.737,136,1.207,137,0.664,138,1.615,139,1.035,140,1.248,141,1.788,142,1.788,143,0.633,145,2.141,147,0.347,151,0.766,154,1.049,156,1.903,157,0.495,166,0.873,169,4.196,171,1.788,178,1.788,179,0.821,180,0.685,181,1.035,182,1.788,183,0.95,184,1.788,185,0.95,186,1.788,187,3.221,188,1.248,189,1.788,190,1.788,191,1.788,192,1.788,193,1.788,194,1.385,195,1.792,196,3.305,197,1.788,198,1.788,199,1.788,200,1.788,201,1.788,202,1.035,203,1.133,204,1.558,205,0.95,206,1.332,207,1.385,208,0.788,209,1.788,210,0.805,211,3.305,212,1.788,213,1.788,214,1.558,215,1.558,216,1.788,217,1.788,218,3.305,219,1.788,220,1.385,221,1.079,222,0.685,223,0.633,224,0.805,225,1.385,226,1.385,227,4.499,228,2.727,229,2.141,230,2.727,231,2.375,232,2.727,233,2.727,234,2.727,235,2.375,236,1.418,237,2.727,238,4.196,239,2.727,240,2.727,241,1.903,242,2.727,243,2.727,244,2.307,245,0.89,246,2.727,247,1.385,248,2.095,249,1.615,250,1.385,266,0.584,270,2.727,271,1.903,272,2.727,273,2.727,274,2.375,275,1.37,276,2.727,277,2.375,278,2.727,279,2.113,280,3.698,281,4.196,282,1.788,283,3.698,284,1.788,285,3.698,286,1.788,287,2.727,288,2.727,289,3.698,290,2.727,291,2.727,292,1.788,293,1.788,294,1.788,295,2.727,296,0.743,297,1.133,298,1.133,299,0.743,300,1.536,301,0.743,302,1.788,303,1.788,304,1.788,305,1.788,306,1.788,307,1.788,308,1.133,309,1.133,310,0.633,311,0.743,312,0.633,313,0.743,314,0.633,315,0.743,316,0.685,317,0.743,318,0.633,319,0.743,320,0.633,321,0.743,322,0.633,323,0.743,324,0.633,325,0.743,326,1.309,327,0.633,328,0.584,329,0.743,330,0.743,331,0.95,335,1.133,511,2.344,513,1.248,514,2.524,515,2.095,516,2.305,519,2.43,520,2.527,523,1.729,524,2.581,527,1.385,531,3.919,533,1.903,534,2.113,535,1.558,536,1.035,539,1.248,540,1.133,541,1.558,542,1.248,544,2.375,558,3.842,570,1.788,571,1.788,588,1.385,674,1.332,692,1.248,739,1.788,740,0.95,840,1.788,846,1.903,852,1.558,969,1.788,1071,2.727,1075,3.305,1088,1.788,1090,1.788,1096,3.085,1097,3.085,1104,1.788,1107,1.788,1110,1.558,1112,1.788,1115,1.558,1116,1.385,1117,3.085,1121,1.788,1131,2.113,1136,2.727,1137,2.561,1161,1.558,1171,2.113,1180,1.385,1207,2.375,1293,2.375,1316,1.558,1352,1.558,1409,3.305,1415,3.698,1425,1.788,1531,2.727,1750,4.959,1751,2.138,1752,2.138,1753,2.138,1754,2.138,1755,2.138,1756,2.138,1757,2.138,1758,2.138,1759,2.138,1760,2.138,1761,3.261,1762,3.261,1763,2.138,1764,2.138,1765,2.138,1766,1.788,1767,2.138,1768,2.138,1769,1.558,1770,2.138,1771,2.138,1772,2.138,1773,2.138,1774,2.138,1775,2.138,1776,2.138,1777,2.138,1778,2.138,1779,2.138,1780,3.261,1781,2.138,1782,2.138,1783,2.138,1784,2.138,1785,2.138,1786,2.138,1787,3.261,1788,2.138,1789,2.138,1790,2.138,1791,2.138,1792,2.138,1793,3.261,1794,2.138,1795,2.138,1796,2.138,1797,2.138,1798,2.138,1799,2.138]],["title/injectables/UserService.html",[12,1.229,32,0.529]],["body/injectables/UserService.html",[3,0.236,4,0.236,5,0.386,7,0.174,8,0.665,10,0.456,12,1.405,13,3.677,14,1.007,16,1.08,17,0.032,18,0.833,19,0.462,20,0.986,27,0.976,28,2.675,30,2.191,31,0.533,32,0.605,33,0.205,34,1.358,35,1.524,37,0.821,38,0.758,39,0.236,40,0.236,42,0.593,43,1.294,44,1.207,45,3.522,48,1.108,49,0.9,51,1.866,53,0.018,54,0.018,78,0.494,80,2.822,86,1.128,100,0.939,102,1.255,114,0.936,115,0.936,120,0.964,129,2.142,133,0.521,135,0.646,137,0.811,143,0.758,147,0.415,151,0.755,154,0.858,157,1.12,165,0.89,166,1.046,179,1.293,203,1.296,204,1.866,206,1.046,207,1.66,208,0.456,210,1.405,221,1.019,222,0.821,223,0.758,245,0.699,259,1.296,261,1.866,266,1.465,275,1.512,279,1.66,334,1.358,352,1.66,353,2.341,355,1.807,378,1.657,386,0.964,390,1.358,407,1.55,409,1.785,422,1.495,612,1.046,618,3.522,619,3.522,620,3.522,623,3.232,628,3.33,629,2.718,636,1.978,637,1.495,638,1.807,639,1.66,640,1.495,645,2.718,653,3.907,654,1.66,655,2.718,663,2.142,668,1.978,669,1.495,675,1.866,682,4.298,683,1.66,732,1.866,744,1.866,748,1.866,749,1.66,791,1.866,792,2.569,798,2.142,801,2.417,803,1.978,829,3.206,834,2.142,933,2.142,934,2.142,944,4.486,949,4.486,971,2.718,972,2.142,978,3.68,979,2.142,981,2.142,988,3.33,990,1.66,996,4.043,1007,3.12,1016,3.12,1045,3.12,1066,2.142,1067,1.866,1117,2.417,1186,1.866,1229,1.66,1247,1.866,1343,1.866,1378,4.043,1389,2.417,1402,2.142,1406,2.142,1459,3.12,1545,1.866,1616,3.12,1617,2.142,1631,2.142,1676,3.12,1701,1.866,1723,2.142,1769,1.866,1800,2.142,1801,4.401,1802,4.401,1803,4.835,1804,4.835,1805,3.731,1806,3.731,1807,3.731,1808,3.731,1809,3.731,1810,3.731,1811,5.139,1812,2.561,1813,2.561,1814,2.561,1815,3.731,1816,2.561,1817,2.561,1818,2.561,1819,2.561,1820,3.731,1821,2.561,1822,3.731,1823,2.561,1824,2.561,1825,3.731,1826,2.561,1827,3.731,1828,2.561,1829,3.731,1830,2.561,1831,3.731,1832,3.731,1833,2.561,1834,2.561,1835,2.561,1836,2.561,1837,2.561,1838,2.561,1839,2.561,1840,2.561,1841,2.561,1842,3.731,1843,4.401,1844,3.731,1845,2.561,1846,2.561,1847,3.731,1848,3.731,1849,3.731,1850,2.561,1851,4.835,1852,2.561,1853,2.561,1854,2.561,1855,3.731,1856,2.561,1857,2.561,1858,2.561,1859,2.561,1860,2.561,1861,2.561,1862,2.561,1863,2.561,1864,2.561,1865,2.561,1866,2.561,1867,2.561,1868,2.561,1869,2.561,1870,2.561,1871,2.561,1872,2.561,1873,2.561,1874,2.561,1875,2.561,1876,2.561,1877,2.561,1878,2.561,1879,2.561,1880,2.561,1881,2.561,1882,2.561]],["title/coverage.html",[1883,3.701]],["body/coverage.html",[0,3.633,1,2.853,5,0.313,6,3.275,12,1.474,17,0.032,19,0.313,32,1.017,53,0.024,54,0.024,55,0.518,56,1.159,61,3.556,62,3.275,63,3.633,67,0.907,71,1.155,86,0.764,95,1.474,120,2.527,179,0.986,310,1.159,312,1.159,314,1.159,316,1.256,318,1.159,320,1.159,322,1.159,324,1.159,326,1.159,327,1.159,332,3.372,380,1.71,381,2.066,558,3.556,572,3.275,611,2.853,613,3.275,638,2.415,687,3.633,688,3.633,724,2.853,725,3.275,752,2.853,753,3.275,825,3.275,854,3.275,928,2.076,936,5.102,1219,2.537,1220,3.275,1221,3.633,1261,3.275,1284,3.275,1373,3.275,1427,3.275,1428,3.275,1429,3.275,1440,3.275,1444,2.853,1445,3.275,1483,4.171,1491,2.537,1672,3.275,1746,2.853,1747,3.275,1750,3.275,1800,3.275,1883,3.275,1884,3.916,1885,3.916,1886,3.916,1887,4.171,1888,4.987,1889,6.336,1890,3.275,1891,5.778,1892,4.171,1893,3.275,1894,3.275,1895,3.275,1896,3.916,1897,3.916,1898,3.916,1899,4.987,1900,5.488,1901,5.488,1902,3.916,1903,3.916,1904,3.916,1905,3.916,1906,3.916,1907,3.275,1908,3.275,1909,3.275,1910,4.987,1911,4.987,1912,3.916,1913,3.916,1914,3.916,1915,3.916,1916,3.916,1917,3.275,1918,3.275,1919,3.916]],["title/dependencies.html",[1920,2.293,1921,3.277]],["body/dependencies.html",[17,0.032,33,0.363,34,2.408,35,1.856,53,0.026,54,0.026,128,1.856,130,1.456,431,2.651,636,2.408,726,3.309,730,3.309,926,2.651,927,2.943,928,2.899,1921,3.799,1922,4.542,1923,6.497,1924,4.542,1925,5.091,1926,4.542,1927,4.542,1928,4.542,1929,5.866,1930,5.468,1931,4.542,1932,4.542,1933,4.542,1934,4.542,1935,4.542,1936,4.542,1937,4.542,1938,4.542,1939,4.542,1940,5.468,1941,4.542,1942,4.542,1943,4.542,1944,4.542,1945,4.542,1946,4.542,1947,4.542,1948,5.468,1949,4.542,1950,4.542,1951,4.542,1952,4.573,1953,4.542,1954,3.799,1955,4.542,1956,5.866,1957,4.542,1958,4.542,1959,4.542,1960,4.542,1961,4.542,1962,4.542,1963,4.542,1964,4.542]],["title/miscellaneous/functions.html",[1965,1.777,1966,3.277]],["body/miscellaneous/functions.html",[7,0.347,17,0.03,27,0.949,53,0.028,54,0.028,67,1.426,100,1.285,1887,5.149,1890,5.149,1965,3.307,1966,4.268,1967,5.104]],["title/index.html",[7,0.186,1968,2.742,1969,2.742]],["body/index.html",[17,0.031,48,0.856,53,0.022,54,0.022,104,1.28,133,0.648,135,0.803,136,1.603,137,0.876,138,2.52,147,0.887,151,0.862,154,1.188,155,2.843,156,2.991,157,1.268,166,2.33,187,2.477,207,2.203,208,1.085,214,2.477,245,1.756,249,2.235,253,2.843,259,1.181,264,1.802,269,3.313,274,2.477,277,2.477,328,0.928,380,1.346,416,1.802,426,1.984,439,1.712,443,2.654,459,1.984,548,2.203,550,2.477,580,2.843,654,3.32,669,1.984,674,2.448,693,1.802,705,2.477,710,3.313,735,2.477,742,3.733,743,3.733,748,2.477,783,2.947,838,4.576,926,1.984,989,2.203,1054,2.843,1098,2.843,1114,2.947,1234,2.477,1246,2.654,1248,3.803,1309,2.843,1388,2.843,1464,2.843,1474,4.286,1526,3.803,1573,3.313,1689,3.803,1701,3.313,1707,2.843,1766,2.843,1769,2.477,1925,3.803,1954,2.843,1970,5.993,1971,3.4,1972,3.4,1973,5.471,1974,3.4,1975,3.4,1976,3.4,1977,5.471,1978,3.4,1979,4.548,1980,4.548,1981,3.4,1982,3.4,1983,4.548,1984,4.548,1985,4.548,1986,3.4,1987,3.4,1988,3.4,1989,3.4,1990,3.4,1991,3.4,1992,5.471,1993,4.548,1994,5.471,1995,3.4,1996,3.4,1997,3.4,1998,3.4,1999,3.4,2000,3.4,2001,3.4,2002,3.4,2003,3.4,2004,3.4,2005,4.548,2006,4.548,2007,4.548,2008,3.4,2009,3.4,2010,3.4,2011,3.4,2012,3.4,2013,3.4,2014,3.4,2015,5.124,2016,3.4,2017,3.4,2018,3.4,2019,3.4,2020,3.4,2021,3.4,2022,3.4,2023,4.548,2024,3.4,2025,3.4,2026,3.4,2027,4.548,2028,3.4,2029,3.4,2030,3.4,2031,3.4,2032,3.4,2033,3.4,2034,4.548,2035,4.548,2036,3.4,2037,3.4,2038,3.4,2039,3.4,2040,3.4,2041,3.4,2042,3.4,2043,3.4,2044,4.548,2045,3.4,2046,3.4,2047,3.4,2048,3.4,2049,3.4,2050,3.803,2051,3.4,2052,3.4,2053,3.4,2054,3.4,2055,3.4,2056,3.4,2057,3.4,2058,5.471,2059,3.4,2060,3.4,2061,3.4,2062,3.4,2063,3.4,2064,3.4,2065,3.4,2066,3.4,2067,3.4,2068,3.4,2069,3.4,2070,3.4,2071,3.4,2072,3.4,2073,3.4,2074,3.4,2075,4.548,2076,4.548,2077,3.4,2078,3.4,2079,3.4,2080,3.4,2081,3.4,2082,3.4,2083,3.4]],["title/modules.html",[2084,3.701]],["body/modules.html",[17,0.028,53,0.028,54,0.028,2084,4.373]],["title/overview.html",[2085,3.701]],["body/overview.html",[2,3.766,17,0.028,53,0.028,54,0.028,57,1.657,195,1.946,612,2.112,686,3.017,1008,4.323,1059,4.323,2085,4.323,2086,5.169]],["title/properties.html",[78,0.518,1920,2.293]],["body/properties.html",[17,0.029,53,0.028,54,0.028,78,0.689,2050,4.354,2087,5.206]],["title/miscellaneous/variables.html",[1965,1.777,2088,3.277]],["body/miscellaneous/variables.html",[7,0.299,17,0.032,19,0.462,37,1.412,38,1.304,50,0.785,53,0.025,54,0.025,114,1.337,115,1.337,133,0.521,137,0.71,151,0.788,154,0.859,179,1.109,181,2.599,208,0.956,387,2.571,388,2.335,542,2.571,638,2.991,671,3.684,691,3.209,734,3.132,740,2.676,908,3.684,928,2.845,1208,3.684,1404,4.841,1892,3.684,1893,4.841,1894,3.684,1895,4.488,1907,3.684,1908,4.488,1909,4.488,1917,3.684,1918,3.684,1952,4.841,1965,2.854,2088,3.684,2089,4.405,2090,4.405,2091,4.405,2092,4.405,2093,5.367,2094,5.367,2095,5.367,2096,4.405,2097,4.405,2098,4.405,2099,4.405,2100,4.405,2101,4.405,2102,4.405,2103,4.405,2104,4.405,2105,4.405,2106,5.367,2107,4.405,2108,4.405,2109,4.405,2110,4.405,2111,4.405,2112,4.405,2113,4.405]]],"invertedIndex":[["",{"_index":17,"title":{},"body":{"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/CapteurData.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"injectables/CapteurDataService.html":{},"injectables/CaptureService.html":{},"injectables/CollecteService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/LogsApiService.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"components/MyAccountComponent.html":{},"components/RegisterComponent.html":{},"injectables/SocketService.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"guards/UserGuard.html":{},"components/UserPageComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":120,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"interfaces/User.html":{},"components/UserPageComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["0.0.0",{"_index":2087,"title":{},"body":{"properties.html":{}}}],["0.0.1",{"_index":1957,"title":{},"body":{"dependencies.html":{}}}],["0.1",{"_index":1360,"title":{},"body":{"components/LogsComponent.html":{},"components/MenuComponent.html":{}}}],["0.14.10",{"_index":1964,"title":{},"body":{"dependencies.html":{}}}],["0.3em",{"_index":1154,"title":{},"body":{"components/HeaderComponent.html":{}}}],["0.3s",{"_index":1175,"title":{},"body":{"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{}}}],["0.425",{"_index":1776,"title":{},"body":{"components/UserPageComponent.html":{}}}],["0.5",{"_index":471,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"components/HeaderComponent.html":{}}}],["0.6",{"_index":1371,"title":{},"body":{"components/LogsComponent.html":{}}}],["0.875em",{"_index":1128,"title":{},"body":{"components/HeaderComponent.html":{}}}],["0.8rem",{"_index":1795,"title":{},"body":{"components/UserPageComponent.html":{}}}],["0.9rem",{"_index":1140,"title":{},"body":{"components/HeaderComponent.html":{}}}],["0/1",{"_index":1889,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1911,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1906,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":1904,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":1916,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":1900,"title":{},"body":{"coverage.html":{}}}],["0/27",{"_index":1896,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1910,"title":{},"body":{"coverage.html":{}}}],["0/38",{"_index":1905,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1891,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1901,"title":{},"body":{"coverage.html":{}}}],["0/54",{"_index":1898,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1914,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1915,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1899,"title":{},"body":{"coverage.html":{}}}],["000",{"_index":543,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/HeaderComponent.html":{}}}],["004d40",{"_index":1194,"title":{},"body":{"components/HeaderComponent.html":{}}}],["0056b3",{"_index":1124,"title":{},"body":{"components/HeaderComponent.html":{}}}],["00796b",{"_index":1151,"title":{},"body":{"components/HeaderComponent.html":{}}}],["007bff",{"_index":1122,"title":{},"body":{"components/HeaderComponent.html":{}}}],["00:00:00",{"_index":1865,"title":{},"body":{"injectables/UserService.html":{}}}],["00ff47",{"_index":1352,"title":{},"body":{"components/LogsComponent.html":{},"components/MenuComponent.html":{},"components/UserPageComponent.html":{}}}],["01",{"_index":1862,"title":{},"body":{"injectables/UserService.html":{}}}],["1",{"_index":165,"title":{"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{}},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"injectables/CollecteService.html":{},"components/LogsComponent.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["1.2rem",{"_index":1136,"title":{},"body":{"components/HeaderComponent.html":{},"components/UserPageComponent.html":{}}}],["1.7.7",{"_index":1945,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":530,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/FooterComponent.html":{},"components/MenuComponent.html":{}}}],["100px",{"_index":1072,"title":{},"body":{"components/HeaderComponent.html":{}}}],["105",{"_index":469,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["10:00",{"_index":280,"title":{},"body":{"components/AdminPageComponent.html":{},"components/UserPageComponent.html":{}}}],["10h",{"_index":2005,"title":{},"body":{"index.html":{}}}],["10px",{"_index":516,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"components/UserPageComponent.html":{}}}],["123",{"_index":1181,"title":{},"body":{"components/HeaderComponent.html":{}}}],["12692b",{"_index":466,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["12px",{"_index":1172,"title":{},"body":{"components/HeaderComponent.html":{}}}],["13",{"_index":2086,"title":{},"body":{"overview.html":{}}}],["132",{"_index":463,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["14:00",{"_index":283,"title":{},"body":{"components/AdminPageComponent.html":{},"components/UserPageComponent.html":{}}}],["14h",{"_index":2006,"title":{},"body":{"index.html":{}}}],["14px",{"_index":1173,"title":{},"body":{"components/HeaderComponent.html":{}}}],["15",{"_index":1293,"title":{},"body":{"components/LogsComponent.html":{},"interfaces/User.html":{},"components/UserPageComponent.html":{}}}],["155724",{"_index":1141,"title":{},"body":{"components/HeaderComponent.html":{}}}],["15px",{"_index":537,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{}}}],["16px",{"_index":1184,"title":{},"body":{"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{}}}],["17.0.1",{"_index":1937,"title":{},"body":{"dependencies.html":{}}}],["17:00",{"_index":285,"title":{},"body":{"components/AdminPageComponent.html":{},"components/UserPageComponent.html":{}}}],["17fc58",{"_index":1787,"title":{},"body":{"components/UserPageComponent.html":{}}}],["17h",{"_index":2007,"title":{},"body":{"index.html":{}}}],["18",{"_index":2051,"title":{},"body":{"index.html":{}}}],["18.0.0",{"_index":1958,"title":{},"body":{"dependencies.html":{}}}],["18.2.0",{"_index":1923,"title":{},"body":{"dependencies.html":{}}}],["18.2.12",{"_index":1925,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["1970",{"_index":1864,"title":{},"body":{"injectables/UserService.html":{}}}],["1e1e1e",{"_index":521,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{}}}],["1px",{"_index":1168,"title":{},"body":{"components/HeaderComponent.html":{},"components/LogsComponent.html":{}}}],["1rem",{"_index":1791,"title":{},"body":{"components/UserPageComponent.html":{}}}],["2",{"_index":195,"title":{"interfaces/CapteurData-2.html":{}},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/UserPageComponent.html":{},"overview.html":{}}}],["2.1.0",{"_index":1951,"title":{},"body":{"dependencies.html":{}}}],["2.11.8",{"_index":1939,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":1962,"title":{},"body":{"dependencies.html":{}}}],["20.1.0",{"_index":1944,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":1705,"title":{},"body":{"injectables/UserApiService.html":{}}}],["201",{"_index":1706,"title":{},"body":{"injectables/UserApiService.html":{}}}],["202121",{"_index":842,"title":{},"body":{"components/FooterComponent.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{}}}],["20px",{"_index":513,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"components/UserPageComponent.html":{}}}],["21",{"_index":1902,"title":{},"body":{"coverage.html":{}}}],["21.0.0",{"_index":1942,"title":{},"body":{"dependencies.html":{}}}],["22px",{"_index":1163,"title":{},"body":{"components/HeaderComponent.html":{}}}],["250px",{"_index":1354,"title":{},"body":{"components/LogsComponent.html":{}}}],["255",{"_index":1369,"title":{},"body":{"components/LogsComponent.html":{},"components/MenuComponent.html":{}}}],["25px",{"_index":1192,"title":{},"body":{"components/HeaderComponent.html":{}}}],["27",{"_index":289,"title":{},"body":{"components/AdminPageComponent.html":{},"components/UserPageComponent.html":{}}}],["27°c",{"_index":2023,"title":{},"body":{"index.html":{}}}],["28a745",{"_index":547,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/HeaderComponent.html":{}}}],["2b2b2b",{"_index":1761,"title":{},"body":{"components/UserPageComponent.html":{}}}],["2px",{"_index":1358,"title":{},"body":{"components/LogsComponent.html":{},"components/MenuComponent.html":{}}}],["2rem",{"_index":1153,"title":{},"body":{"components/HeaderComponent.html":{}}}],["3/14",{"_index":1903,"title":{},"body":{"coverage.html":{}}}],["300",{"_index":1040,"title":{},"body":{"components/HeaderComponent.html":{}}}],["300px",{"_index":1772,"title":{},"body":{"components/UserPageComponent.html":{}}}],["30px",{"_index":1355,"title":{},"body":{"components/LogsComponent.html":{}}}],["333",{"_index":1109,"title":{},"body":{"components/HeaderComponent.html":{}}}],["343a40",{"_index":1356,"title":{},"body":{"components/LogsComponent.html":{}}}],["35px",{"_index":1074,"title":{},"body":{"components/HeaderComponent.html":{}}}],["3adefnipa",{"_index":841,"title":{},"body":{"components/FooterComponent.html":{}}}],["3px",{"_index":1179,"title":{},"body":{"components/HeaderComponent.html":{}}}],["4",{"_index":1008,"title":{},"body":{"components/HeaderComponent.html":{},"overview.html":{}}}],["4.18.2",{"_index":1955,"title":{},"body":{"dependencies.html":{}}}],["4.4.6",{"_index":1947,"title":{},"body":{"dependencies.html":{}}}],["4.8.0",{"_index":1959,"title":{},"body":{"dependencies.html":{}}}],["4/7",{"_index":1913,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":1715,"title":{},"body":{"injectables/UserApiService.html":{}}}],["400px",{"_index":528,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{}}}],["403",{"_index":1718,"title":{},"body":{"injectables/UserApiService.html":{}}}],["404",{"_index":794,"title":{},"body":{"injectables/CollecteService.html":{}}}],["40px",{"_index":1108,"title":{},"body":{"components/HeaderComponent.html":{}}}],["43",{"_index":470,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["495057",{"_index":1365,"title":{},"body":{"components/LogsComponent.html":{}}}],["4px",{"_index":1359,"title":{},"body":{"components/LogsComponent.html":{},"components/MenuComponent.html":{}}}],["5",{"_index":229,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"components/HeaderComponent.html":{},"components/UserPageComponent.html":{}}}],["5.3.3",{"_index":1946,"title":{},"body":{"dependencies.html":{}}}],["5.5.1",{"_index":1953,"title":{},"body":{"dependencies.html":{}}}],["500",{"_index":1722,"title":{},"body":{"injectables/UserApiService.html":{}}}],["5000",{"_index":1020,"title":{},"body":{"components/HeaderComponent.html":{}}}],["500px",{"_index":1156,"title":{},"body":{"components/HeaderComponent.html":{}}}],["57",{"_index":1912,"title":{},"body":{"coverage.html":{}}}],["5px",{"_index":538,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/HeaderComponent.html":{},"components/LogsComponent.html":{}}}],["6",{"_index":768,"title":{},"body":{"injectables/CollecteService.html":{}}}],["6.7.0",{"_index":1936,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":1351,"title":{},"body":{"components/LogsComponent.html":{}}}],["600",{"_index":1162,"title":{},"body":{"components/HeaderComponent.html":{}}}],["6c757d",{"_index":554,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/HeaderComponent.html":{}}}],["7.8.0",{"_index":1960,"title":{},"body":{"dependencies.html":{}}}],["70|75|76|77|78)\\d{7",{"_index":1602,"title":{},"body":{"interfaces/User.html":{}}}],["71",{"_index":1370,"title":{},"body":{"components/LogsComponent.html":{},"components/MenuComponent.html":{}}}],["721c24",{"_index":1144,"title":{},"body":{"components/HeaderComponent.html":{}}}],["8",{"_index":1059,"title":{},"body":{"components/HeaderComponent.html":{},"overview.html":{}}}],["8px",{"_index":1171,"title":{},"body":{"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"components/UserPageComponent.html":{}}}],["9",{"_index":948,"title":{},"body":{"components/HeaderComponent.html":{}}}],["99",{"_index":462,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["_id",{"_index":1484,"title":{},"body":{"interfaces/User.html":{}}}],["a.active",{"_index":1423,"title":{},"body":{"components/MenuComponent.html":{}}}],["a.date",{"_index":499,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["a:hover",{"_index":1419,"title":{},"body":{"components/MenuComponent.html":{}}}],["ababacar",{"_index":2062,"title":{},"body":{"index.html":{}}}],["abrégée",{"_index":191,"title":{},"body":{"components/AdminPageComponent.html":{},"components/UserPageComponent.html":{}}}],["absolute",{"_index":1129,"title":{},"body":{"components/HeaderComponent.html":{}}}],["account",{"_index":1430,"title":{},"body":{"components/MyAccountComponent.html":{}}}],["account'},{'name",{"_index":323,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"components/MyAccountComponent.html":{},"components/RegisterComponent.html":{},"components/UserPageComponent.html":{}}}],["account.component.css",{"_index":1432,"title":{},"body":{"components/MyAccountComponent.html":{}}}],["account.component.html",{"_index":1431,"title":{},"body":{"components/MyAccountComponent.html":{}}}],["account.component.ts",{"_index":1429,"title":{},"body":{"components/MyAccountComponent.html":{},"coverage.html":{}}}],["account.component.ts:12",{"_index":1433,"title":{},"body":{"components/MyAccountComponent.html":{}}}],["account.component.ts:17",{"_index":1434,"title":{},"body":{"components/MyAccountComponent.html":{}}}],["account/my",{"_index":1428,"title":{},"body":{"components/MyAccountComponent.html":{},"coverage.html":{}}}],["accès",{"_index":1720,"title":{},"body":{"injectables/UserApiService.html":{}}}],["accéder",{"_index":1397,"title":{},"body":{"components/MenuComponent.html":{}}}],["actif",{"_index":1422,"title":{},"body":{"components/MenuComponent.html":{}}}],["actifs",{"_index":1691,"title":{},"body":{"injectables/UserApiService.html":{}}}],["action",{"_index":264,"title":{},"body":{"components/AdminPageComponent.html":{},"interfaces/CapteurData.html":{},"injectables/CapteurDataService.html":{},"injectables/LogsApiService.html":{},"components/LogsComponent.html":{},"index.html":{}}}],["activatedroutesnapshot",{"_index":22,"title":{},"body":{"guards/AdminGuard.html":{},"guards/UserGuard.html":{}}}],["activeonly",{"_index":1683,"title":{},"body":{"injectables/UserApiService.html":{}}}],["activeuserscount",{"_index":1668,"title":{},"body":{"interfaces/User.html":{}}}],["actual_component",{"_index":330,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"components/MyAccountComponent.html":{},"components/RegisterComponent.html":{},"components/UserPageComponent.html":{}}}],["actuel",{"_index":279,"title":{},"body":{"components/AdminPageComponent.html":{},"components/HeaderComponent.html":{},"components/UserPageComponent.html":{},"injectables/UserService.html":{}}}],["actuel?page=${page}&pagesize=${pagesize",{"_index":814,"title":{},"body":{"injectables/CollecteService.html":{}}}],["actuelle",{"_index":170,"title":{},"body":{"components/AdminPageComponent.html":{},"components/LogsComponent.html":{}}}],["actuelles",{"_index":291,"title":{},"body":{"components/AdminPageComponent.html":{},"components/UserPageComponent.html":{}}}],["adapt",{"_index":1726,"title":{},"body":{"injectables/UserApiService.html":{}}}],["adapter",{"_index":1003,"title":{},"body":{"components/HeaderComponent.html":{}}}],["adaptée",{"_index":1493,"title":{},"body":{"interfaces/User.html":{}}}],["adjust",{"_index":1513,"title":{},"body":{"interfaces/User.html":{}}}],["admin",{"_index":48,"title":{},"body":{"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"components/MyAccountComponent.html":{},"components/RegisterComponent.html":{},"components/UserPageComponent.html":{},"injectables/UserService.html":{},"index.html":{}}}],["adminguard",{"_index":1,"title":{"guards/AdminGuard.html":{}},"body":{"guards/AdminGuard.html":{},"coverage.html":{}}}],["adminpagecomponent",{"_index":56,"title":{"components/AdminPageComponent.html":{}},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"components/MyAccountComponent.html":{},"components/RegisterComponent.html":{},"components/UserPageComponent.html":{},"coverage.html":{}}}],["adminuserscount",{"_index":1670,"title":{},"body":{"interfaces/User.html":{}}}],["adresse",{"_index":1049,"title":{},"body":{"components/HeaderComponent.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{}}}],["affichage",{"_index":1568,"title":{},"body":{"interfaces/User.html":{}}}],["affiche",{"_index":187,"title":{},"body":{"components/AdminPageComponent.html":{},"components/UserPageComponent.html":{},"index.html":{}}}],["afficher",{"_index":430,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"injectables/CollecteService.html":{},"components/HeaderComponent.html":{},"interfaces/User.html":{}}}],["afficher/masquer",{"_index":1206,"title":{},"body":{"components/HeaderComponent.html":{}}}],["affichées",{"_index":2009,"title":{},"body":{"index.html":{}}}],["afterviewinit",{"_index":377,"title":{},"body":{"components/AnalyseComponent.html":{},"interfaces/CapteurData-1.html":{}}}],["agile",{"_index":2040,"title":{},"body":{"index.html":{}}}],["ajout",{"_index":586,"title":{},"body":{"components/AppComponent.html":{}}}],["ajoute",{"_index":1777,"title":{},"body":{"components/UserPageComponent.html":{}}}],["ajouter",{"_index":835,"title":{},"body":{"components/FooterComponent.html":{},"interfaces/User.html":{}}}],["ajuster",{"_index":1041,"title":{},"body":{"components/HeaderComponent.html":{}}}],["ajustez",{"_index":1799,"title":{},"body":{"components/UserPageComponent.html":{}}}],["alert",{"_index":987,"title":{},"body":{"components/HeaderComponent.html":{}}}],["alert('une",{"_index":1623,"title":{},"body":{"interfaces/User.html":{}}}],["alertes",{"_index":1987,"title":{},"body":{"index.html":{}}}],["align",{"_index":1078,"title":{},"body":{"components/HeaderComponent.html":{},"components/LogsComponent.html":{}}}],["aligne",{"_index":1405,"title":{},"body":{"components/MenuComponent.html":{}}}],["aligned",{"_index":1086,"title":{},"body":{"components/HeaderComponent.html":{}}}],["alignement",{"_index":1102,"title":{},"body":{"components/HeaderComponent.html":{}}}],["aligner",{"_index":847,"title":{},"body":{"components/FooterComponent.html":{},"components/MenuComponent.html":{}}}],["allowed",{"_index":1191,"title":{},"body":{"components/HeaderComponent.html":{}}}],["allum",{"_index":253,"title":{},"body":{"components/AdminPageComponent.html":{},"index.html":{}}}],["allumer/éteindre",{"_index":2016,"title":{},"body":{"index.html":{}}}],["allumée",{"_index":2026,"title":{},"body":{"index.html":{}}}],["amont",{"_index":808,"title":{},"body":{"injectables/CollecteService.html":{}}}],["amélior",{"_index":1700,"title":{},"body":{"injectables/UserApiService.html":{}}}],["analyse",{"_index":333,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["analyse'},{'name",{"_index":309,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"components/MyAccountComponent.html":{},"components/RegisterComponent.html":{},"components/UserPageComponent.html":{}}}],["analyse.component.css",{"_index":336,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["analyse.component.html",{"_index":337,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["analyse/analyse.component",{"_index":125,"title":{},"body":{"components/AdminPageComponent.html":{},"components/UserPageComponent.html":{}}}],["analysecomponent",{"_index":71,"title":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{}},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/AppComponent.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"components/MyAccountComponent.html":{},"components/RegisterComponent.html":{},"components/UserPageComponent.html":{},"coverage.html":{}}}],["angular",{"_index":1689,"title":{},"body":{"injectables/UserApiService.html":{},"index.html":{}}}],["angular/animations",{"_index":1922,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1924,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":130,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/AppComponent.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"interfaces/User.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":378,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/AppComponent.html":{},"interfaces/CapteurData.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"injectables/CapteurDataService.html":{},"injectables/UserService.html":{}}}],["angular/compiler",{"_index":1926,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":33,"title":{},"body":{"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/CapteurData.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"injectables/CapteurDataService.html":{},"injectables/CaptureService.html":{},"injectables/CollecteService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/LogsApiService.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"components/MyAccountComponent.html":{},"components/RegisterComponent.html":{},"injectables/SocketService.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"guards/UserGuard.html":{},"components/UserPageComponent.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":128,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"interfaces/User.html":{},"dependencies.html":{}}}],["angular/localize",{"_index":1927,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":1928,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":1929,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":34,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"components/MenuComponent.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/ssr",{"_index":1933,"title":{},"body":{"dependencies.html":{}}}],["animation",{"_index":1196,"title":{},"body":{"components/HeaderComponent.html":{},"components/MenuComponent.html":{}}}],["année",{"_index":505,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{}}}],["any)[key",{"_index":1329,"title":{},"body":{"components/LogsComponent.html":{},"interfaces/User.html":{}}}],["api",{"_index":205,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"injectables/CapteurDataService.html":{},"components/UserPageComponent.html":{}}}],["api.service",{"_index":1302,"title":{},"body":{"components/LogsComponent.html":{},"interfaces/User.html":{}}}],["api.service.ts",{"_index":1221,"title":{},"body":{"injectables/LogsApiService.html":{},"injectables/UserApiService.html":{},"coverage.html":{}}}],["api.service.ts:10",{"_index":1682,"title":{},"body":{"injectables/UserApiService.html":{}}}],["api.service.ts:116",{"_index":1679,"title":{},"body":{"injectables/UserApiService.html":{}}}],["api.service.ts:128",{"_index":1686,"title":{},"body":{"injectables/UserApiService.html":{}}}],["api.service.ts:15",{"_index":1228,"title":{},"body":{"injectables/LogsApiService.html":{}}}],["api.service.ts:30",{"_index":1684,"title":{},"body":{"injectables/UserApiService.html":{}}}],["api.service.ts:31",{"_index":1237,"title":{},"body":{"injectables/LogsApiService.html":{}}}],["api.service.ts:47",{"_index":1232,"title":{},"body":{"injectables/LogsApiService.html":{}}}],["api.service.ts:63",{"_index":1245,"title":{},"body":{"injectables/LogsApiService.html":{}}}],["api.service.ts:8",{"_index":1227,"title":{},"body":{"injectables/LogsApiService.html":{}}}],["api.service.ts:84",{"_index":1681,"title":{},"body":{"injectables/UserApiService.html":{}}}],["api.service.ts:97",{"_index":1688,"title":{},"body":{"injectables/UserApiService.html":{}}}],["apiurl",{"_index":1801,"title":{},"body":{"injectables/UserService.html":{}}}],["app",{"_index":67,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/AppComponent.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"components/MyAccountComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserPageComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["app.component.css",{"_index":574,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":575,"title":{},"body":{"components/AppComponent.html":{}}}],["app.config.server",{"_index":1834,"title":{},"body":{"injectables/UserService.html":{}}}],["appcomponent",{"_index":310,"title":{"components/AppComponent.html":{}},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"components/MyAccountComponent.html":{},"components/RegisterComponent.html":{},"components/UserPageComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":1895,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["appel",{"_index":1006,"title":{},"body":{"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{}}}],["appeler",{"_index":1744,"title":{},"body":{"injectables/UserApiService.html":{}}}],["appelle",{"_index":677,"title":{},"body":{"injectables/AuthService.html":{}}}],["appelée",{"_index":260,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["applicable",{"_index":1515,"title":{},"body":{"interfaces/User.html":{}}}],["applicationconfig",{"_index":2094,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applicationref",{"_index":1450,"title":{},"body":{"injectables/SocketService.html":{}}}],["appliquer",{"_index":1282,"title":{},"body":{"components/LogsComponent.html":{}}}],["appref",{"_index":1452,"title":{},"body":{"injectables/SocketService.html":{}}}],["après",{"_index":1022,"title":{},"body":{"components/HeaderComponent.html":{},"injectables/SocketService.html":{},"interfaces/User.html":{}}}],["arduino",{"_index":2037,"title":{},"body":{"index.html":{}}}],["arguments",{"_index":1009,"title":{},"body":{"components/HeaderComponent.html":{}}}],["arial",{"_index":1159,"title":{},"body":{"components/HeaderComponent.html":{}}}],["arialabelledby",{"_index":1663,"title":{},"body":{"interfaces/User.html":{}}}],["arrondis",{"_index":518,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/MenuComponent.html":{}}}],["asc",{"_index":1298,"title":{},"body":{"components/LogsComponent.html":{},"interfaces/User.html":{}}}],["assigned",{"_index":1503,"title":{},"body":{"interfaces/User.html":{}}}],["assurez",{"_index":733,"title":{},"body":{"injectables/CaptureService.html":{},"components/HeaderComponent.html":{},"components/MenuComponent.html":{}}}],["async",{"_index":754,"title":{},"body":{"injectables/CollecteService.html":{},"injectables/LogsApiService.html":{},"components/LogsComponent.html":{},"injectables/UserApiService.html":{}}}],["attendre",{"_index":1463,"title":{},"body":{"injectables/SocketService.html":{}}}],["au",{"_index":145,"title":{},"body":{"components/AdminPageComponent.html":{},"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"components/UserPageComponent.html":{}}}],["aucun",{"_index":1342,"title":{},"body":{"components/LogsComponent.html":{}}}],["aucune",{"_index":508,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"injectables/CollecteService.html":{}}}],["aussi",{"_index":2108,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authentication",{"_index":1485,"title":{},"body":{"interfaces/User.html":{}}}],["authservice",{"_index":611,"title":{"injectables/AuthService.html":{}},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["auto",{"_index":1089,"title":{},"body":{"components/HeaderComponent.html":{}}}],["autoconnect",{"_index":1462,"title":{},"body":{"injectables/SocketService.html":{}}}],["automatique",{"_index":2030,"title":{},"body":{"index.html":{}}}],["autoris",{"_index":1396,"title":{},"body":{"components/MenuComponent.html":{}}}],["autour",{"_index":1416,"title":{},"body":{"components/MenuComponent.html":{}}}],["autre",{"_index":158,"title":{},"body":{"components/AdminPageComponent.html":{},"injectables/CollecteService.html":{}}}],["avalue",{"_index":1328,"title":{},"body":{"components/LogsComponent.html":{},"interfaces/User.html":{}}}],["avant",{"_index":394,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"injectables/SocketService.html":{},"interfaces/User.html":{}}}],["avatar",{"_index":1073,"title":{},"body":{"components/HeaderComponent.html":{}}}],["avec",{"_index":407,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"injectables/CapteurDataService.html":{},"injectables/CollecteService.html":{},"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"injectables/UserService.html":{}}}],["average",{"_index":419,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"injectables/CollecteService.html":{}}}],["averages",{"_index":696,"title":{},"body":{"interfaces/CapteurData.html":{},"injectables/CapteurDataService.html":{}}}],["avghumidites",{"_index":357,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["avgtemperatures",{"_index":359,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["avoir",{"_index":1002,"title":{},"body":{"components/HeaderComponent.html":{}}}],["await",{"_index":780,"title":{},"body":{"injectables/CollecteService.html":{},"injectables/LogsApiService.html":{},"components/LogsComponent.html":{},"injectables/UserApiService.html":{}}}],["axios",{"_index":636,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CollecteService.html":{},"injectables/LogsApiService.html":{},"injectables/UserApiService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["axios.delete(`/users/users/${id",{"_index":1741,"title":{},"body":{"injectables/UserApiService.html":{}}}],["axios.get('/historique/historique",{"_index":1251,"title":{},"body":{"injectables/LogsApiService.html":{}}}],["axios.get('collecte/donnees",{"_index":781,"title":{},"body":{"injectables/CollecteService.html":{}}}],["axios.get('collecte/donnees/daily",{"_index":789,"title":{},"body":{"injectables/CollecteService.html":{}}}],["axios.get('collecte/donnees/monthly",{"_index":810,"title":{},"body":{"injectables/CollecteService.html":{}}}],["axios.get('collecte/donnees/weekly",{"_index":819,"title":{},"body":{"injectables/CollecteService.html":{}}}],["axios.get(`${this.baseurl}/action",{"_index":1259,"title":{},"body":{"injectables/LogsApiService.html":{}}}],["axios.get(`${this.baseurl}/date",{"_index":1256,"title":{},"body":{"injectables/LogsApiService.html":{}}}],["axios.get(`${this.baseurl}/user/${userid",{"_index":1260,"title":{},"body":{"injectables/LogsApiService.html":{}}}],["axios.get(`/users/users/${id",{"_index":1734,"title":{},"body":{"injectables/UserApiService.html":{}}}],["axios.get(`/users/users?active=${activeonly",{"_index":1692,"title":{},"body":{"injectables/UserApiService.html":{}}}],["axios.get(`collecte/donnees/${id",{"_index":785,"title":{},"body":{"injectables/CollecteService.html":{}}}],["axios.get(`collecte/donnees/mois",{"_index":813,"title":{},"body":{"injectables/CollecteService.html":{}}}],["axios.get(`collecte/donnees/week/${date",{"_index":821,"title":{},"body":{"injectables/CollecteService.html":{}}}],["axios.isaxioserror(error",{"_index":790,"title":{},"body":{"injectables/CollecteService.html":{},"injectables/UserApiService.html":{}}}],["axios.patch(`/users/users/${id}/role",{"_index":1745,"title":{},"body":{"injectables/UserApiService.html":{}}}],["axios.post('/auth/check",{"_index":644,"title":{},"body":{"injectables/AuthService.html":{}}}],["axios.post('/auth/login",{"_index":656,"title":{},"body":{"injectables/AuthService.html":{}}}],["axios.post('/auth/logout",{"_index":676,"title":{},"body":{"injectables/AuthService.html":{}}}],["axios.post('/users/register",{"_index":1702,"title":{},"body":{"injectables/UserApiService.html":{}}}],["axios.post('collecte/donnees/capture",{"_index":824,"title":{},"body":{"injectables/CollecteService.html":{}}}],["axios.post(`${this.apiurl}/change",{"_index":1874,"title":{},"body":{"injectables/UserService.html":{}}}],["axios.put(`/users/users/${id",{"_index":1736,"title":{},"body":{"injectables/UserApiService.html":{}}}],["b",{"_index":498,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"components/LogsComponent.html":{},"interfaces/User.html":{}}}],["b.date",{"_index":500,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["b.heure",{"_index":501,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["backend",{"_index":693,"title":{},"body":{"interfaces/CapteurData.html":{},"injectables/CapteurDataService.html":{},"components/HeaderComponent.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"index.html":{}}}],["background",{"_index":519,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"components/UserPageComponent.html":{}}}],["background.jpg",{"_index":1764,"title":{},"body":{"components/UserPageComponent.html":{}}}],["backgroundcolor",{"_index":467,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["barrée",{"_index":1217,"title":{},"body":{"components/HeaderComponent.html":{}}}],["bas",{"_index":1424,"title":{},"body":{"components/MenuComponent.html":{}}}],["bascule",{"_index":1106,"title":{},"body":{"components/HeaderComponent.html":{}}}],["basculement",{"_index":1622,"title":{},"body":{"interfaces/User.html":{}}}],["basculer",{"_index":1030,"title":{},"body":{"components/HeaderComponent.html":{},"injectables/UserApiService.html":{}}}],["base",{"_index":783,"title":{},"body":{"injectables/CollecteService.html":{},"injectables/LogsApiService.html":{},"components/MenuComponent.html":{},"index.html":{}}}],["base64",{"_index":1561,"title":{},"body":{"interfaces/User.html":{}}}],["base_url",{"_index":1909,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["based",{"_index":1510,"title":{},"body":{"interfaces/User.html":{}}}],["baseurl",{"_index":689,"title":{},"body":{"interfaces/CapteurData.html":{},"injectables/CapteurDataService.html":{},"injectables/LogsApiService.html":{}}}],["bash",{"_index":2075,"title":{},"body":{"index.html":{}}}],["basic",{"_index":1664,"title":{},"body":{"interfaces/User.html":{}}}],["bbb",{"_index":1797,"title":{},"body":{"components/UserPageComponent.html":{}}}],["beginatzero",{"_index":475,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["behaviorsubject",{"_index":1835,"title":{},"body":{"injectables/UserService.html":{}}}],["behaviorsubject(null",{"_index":1832,"title":{},"body":{"injectables/UserService.html":{}}}],["besoin",{"_index":1999,"title":{},"body":{"index.html":{}}}],["besoins",{"_index":162,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["bg",{"_index":541,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/UserPageComponent.html":{}}}],["bi",{"_index":967,"title":{},"body":{"components/HeaderComponent.html":{}}}],["bibliothèque",{"_index":2110,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bien",{"_index":215,"title":{},"body":{"components/AdminPageComponent.html":{},"components/HeaderComponent.html":{},"components/UserPageComponent.html":{}}}],["bienvenue",{"_index":272,"title":{},"body":{"components/AdminPageComponent.html":{},"components/UserPageComponent.html":{}}}],["black",{"_index":1100,"title":{},"body":{"components/HeaderComponent.html":{}}}],["blanc",{"_index":525,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{}}}],["body",{"_index":1117,"title":{},"body":{"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"components/UserPageComponent.html":{},"injectables/UserService.html":{}}}],["bold",{"_index":1425,"title":{},"body":{"components/MenuComponent.html":{},"components/UserPageComponent.html":{}}}],["boolean",{"_index":30,"title":{},"body":{"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/MenuComponent.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["bootstrap",{"_index":928,"title":{},"body":{"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"interfaces/User.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["bootstrap/ng",{"_index":927,"title":{},"body":{"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"interfaces/User.html":{},"dependencies.html":{}}}],["bootstrapapplication(appcomponent",{"_index":2103,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bord",{"_index":1998,"title":{},"body":{"index.html":{}}}],["border",{"_index":514,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"components/UserPageComponent.html":{}}}],["bordercolor",{"_index":460,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["borderwidth",{"_index":464,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["bordure",{"_index":555,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/MenuComponent.html":{}}}],["bottom",{"_index":532,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{}}}],["bouton",{"_index":1105,"title":{},"body":{"components/HeaderComponent.html":{}}}],["box",{"_index":1177,"title":{},"body":{"components/HeaderComponent.html":{},"components/LogsComponent.html":{}}}],["break",{"_index":1717,"title":{},"body":{"injectables/UserApiService.html":{}}}],["browser",{"_index":1930,"title":{},"body":{"dependencies.html":{}}}],["btn",{"_index":1134,"title":{},"body":{"components/HeaderComponent.html":{}}}],["btn:hover",{"_index":1138,"title":{},"body":{"components/HeaderComponent.html":{}}}],["button",{"_index":1085,"title":{},"body":{"components/HeaderComponent.html":{}}}],["button:disabled",{"_index":1189,"title":{},"body":{"components/HeaderComponent.html":{}}}],["button:focus",{"_index":1195,"title":{},"body":{"components/HeaderComponent.html":{}}}],["button:hover",{"_index":1123,"title":{},"body":{"components/HeaderComponent.html":{}}}],["button:hover:enabled",{"_index":1193,"title":{},"body":{"components/HeaderComponent.html":{}}}],["button[type=\"submit\"]:hover",{"_index":1198,"title":{},"body":{"components/HeaderComponent.html":{}}}],["buzzer",{"_index":2025,"title":{},"body":{"index.html":{}}}],["bvalue",{"_index":1330,"title":{},"body":{"components/LogsComponent.html":{},"interfaces/User.html":{}}}],["c",{"_index":248,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"components/UserPageComponent.html":{}}}],["c3e6cb",{"_index":1143,"title":{},"body":{"components/HeaderComponent.html":{}}}],["canaccessadmin",{"_index":1379,"title":{},"body":{"components/MenuComponent.html":{}}}],["canaccessuser",{"_index":1380,"title":{},"body":{"components/MenuComponent.html":{}}}],["canactivate",{"_index":9,"title":{},"body":{"guards/AdminGuard.html":{},"guards/UserGuard.html":{}}}],["canactivate(route",{"_index":21,"title":{},"body":{"guards/AdminGuard.html":{},"guards/UserGuard.html":{}}}],["canvas",{"_index":398,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["capteurdata",{"_index":381,"title":{"interfaces/CapteurData.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"injectables/CapteurDataService.html":{},"coverage.html":{}}}],["capteurdatalist",{"_index":338,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["capteurdataservice",{"_index":95,"title":{"injectables/CapteurDataService.html":{}},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"injectables/CapteurDataService.html":{},"components/UserPageComponent.html":{},"coverage.html":{}}}],["capteurs",{"_index":710,"title":{},"body":{"interfaces/CapteurData.html":{},"injectables/CapteurDataService.html":{},"index.html":{}}}],["capture",{"_index":823,"title":{},"body":{"injectables/CollecteService.html":{}}}],["captureservice",{"_index":724,"title":{"injectables/CaptureService.html":{}},"body":{"injectables/CaptureService.html":{},"coverage.html":{}}}],["caractère",{"_index":1063,"title":{},"body":{"components/HeaderComponent.html":{}}}],["caractères",{"_index":1060,"title":{},"body":{"components/HeaderComponent.html":{}}}],["card",{"_index":531,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/UserPageComponent.html":{}}}],["cas",{"_index":1309,"title":{},"body":{"components/LogsComponent.html":{},"index.html":{}}}],["case",{"_index":1714,"title":{},"body":{"injectables/UserApiService.html":{}}}],["catch",{"_index":784,"title":{},"body":{"injectables/CollecteService.html":{},"injectables/LogsApiService.html":{},"components/LogsComponent.html":{},"injectables/UserApiService.html":{}}}],["catch((error",{"_index":1544,"title":{},"body":{"interfaces/User.html":{}}}],["catch(error",{"_index":662,"title":{},"body":{"injectables/AuthService.html":{}}}],["catcherror",{"_index":1838,"title":{},"body":{"injectables/UserService.html":{}}}],["catcherror((error",{"_index":1879,"title":{},"body":{"injectables/UserService.html":{}}}],["ccc",{"_index":1190,"title":{},"body":{"components/HeaderComponent.html":{}}}],["cd",{"_index":2072,"title":{},"body":{"index.html":{}}}],["cdr",{"_index":96,"title":{},"body":{"components/AdminPageComponent.html":{},"interfaces/User.html":{},"components/UserPageComponent.html":{}}}],["ce",{"_index":1054,"title":{},"body":{"components/HeaderComponent.html":{},"index.html":{}}}],["celui",{"_index":1036,"title":{},"body":{"components/HeaderComponent.html":{}}}],["center",{"_index":540,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"components/UserPageComponent.html":{}}}],["centered",{"_index":1536,"title":{},"body":{"interfaces/User.html":{}}}],["centralisée",{"_index":1868,"title":{},"body":{"injectables/UserService.html":{}}}],["centrer",{"_index":852,"title":{},"body":{"components/FooterComponent.html":{},"components/MenuComponent.html":{},"components/UserPageComponent.html":{}}}],["certain",{"_index":1398,"title":{},"body":{"components/MenuComponent.html":{}}}],["ces",{"_index":2008,"title":{},"body":{"index.html":{}}}],["cet",{"_index":1629,"title":{},"body":{"interfaces/User.html":{}}}],["cette",{"_index":389,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"injectables/CapteurDataService.html":{},"components/HeaderComponent.html":{}}}],["champ",{"_index":1055,"title":{},"body":{"components/HeaderComponent.html":{},"injectables/LogsApiService.html":{}}}],["champs",{"_index":1165,"title":{},"body":{"components/HeaderComponent.html":{},"interfaces/User.html":{}}}],["chang",{"_index":1013,"title":{},"body":{"components/HeaderComponent.html":{}}}],["changedetectorref",{"_index":97,"title":{},"body":{"components/AdminPageComponent.html":{},"interfaces/User.html":{},"components/UserPageComponent.html":{}}}],["changement",{"_index":261,"title":{},"body":{"components/AdminPageComponent.html":{},"components/HeaderComponent.html":{},"injectables/UserService.html":{}}}],["changements",{"_index":1418,"title":{},"body":{"components/MenuComponent.html":{},"interfaces/User.html":{}}}],["changepassword",{"_index":1007,"title":{},"body":{"components/HeaderComponent.html":{},"injectables/UserService.html":{}}}],["changepassword(email",{"_index":1810,"title":{},"body":{"injectables/UserService.html":{}}}],["changepasswordform",{"_index":859,"title":{},"body":{"components/HeaderComponent.html":{}}}],["changepasswordmessage",{"_index":860,"title":{},"body":{"components/HeaderComponent.html":{}}}],["changepasswordmessage.text",{"_index":1047,"title":{},"body":{"components/HeaderComponent.html":{}}}],["changer",{"_index":1016,"title":{},"body":{"components/HeaderComponent.html":{},"injectables/UserService.html":{}}}],["changez",{"_index":704,"title":{},"body":{"interfaces/CapteurData.html":{},"injectables/CapteurDataService.html":{}}}],["chaque",{"_index":550,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"index.html":{}}}],["chargement",{"_index":388,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"components/HeaderComponent.html":{},"miscellaneous/variables.html":{}}}],["charger",{"_index":476,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["chart",{"_index":339,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["chart(ctx",{"_index":446,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["chart.js",{"_index":431,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"dependencies.html":{}}}],["chart.js/auto",{"_index":379,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["chartjs",{"_index":1948,"title":{},"body":{"dependencies.html":{}}}],["charts",{"_index":1941,"title":{},"body":{"dependencies.html":{}}}],["chaîne",{"_index":1524,"title":{},"body":{"interfaces/User.html":{}}}],["checkemailexistence",{"_index":616,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkemailexistence(email",{"_index":621,"title":{},"body":{"injectables/AuthService.html":{}}}],["chemin",{"_index":1765,"title":{},"body":{"components/UserPageComponent.html":{}}}],["chiffre",{"_index":1062,"title":{},"body":{"components/HeaderComponent.html":{}}}],["choisissez",{"_index":503,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{}}}],["choue",{"_index":1587,"title":{},"body":{"interfaces/User.html":{}}}],["chéant",{"_index":1310,"title":{},"body":{"components/LogsComponent.html":{}}}],["cl",{"_index":1285,"title":{},"body":{"components/LogsComponent.html":{}}}],["clair",{"_index":1115,"title":{},"body":{"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"components/UserPageComponent.html":{}}}],["claire",{"_index":1367,"title":{},"body":{"components/LogsComponent.html":{}}}],["class",{"_index":40,"title":{},"body":{"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/CapteurData.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"injectables/CapteurDataService.html":{},"injectables/CaptureService.html":{},"injectables/CollecteService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/LogsApiService.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"components/MyAccountComponent.html":{},"components/RegisterComponent.html":{},"injectables/SocketService.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"guards/UserGuard.html":{},"components/UserPageComponent.html":{},"injectables/UserService.html":{}}}],["cleanurl",{"_index":601,"title":{},"body":{"components/AppComponent.html":{}}}],["cli",{"_index":2053,"title":{},"body":{"index.html":{}}}],["client",{"_index":732,"title":{},"body":{"injectables/CaptureService.html":{},"injectables/SocketService.html":{},"injectables/UserService.html":{}}}],["clone",{"_index":2068,"title":{},"body":{"index.html":{}}}],["cloner",{"_index":2066,"title":{},"body":{"index.html":{}}}],["closemodal",{"_index":1537,"title":{},"body":{"interfaces/User.html":{}}}],["closemodalupdate",{"_index":1665,"title":{},"body":{"interfaces/User.html":{}}}],["closepasswordmodalandshowprofilemodal",{"_index":867,"title":{},"body":{"components/HeaderComponent.html":{}}}],["code",{"_index":654,"title":{},"body":{"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"injectables/UserService.html":{},"index.html":{}}}],["coins",{"_index":517,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/MenuComponent.html":{}}}],["collaboration",{"_index":2043,"title":{},"body":{"index.html":{}}}],["collecte",{"_index":1994,"title":{},"body":{"index.html":{}}}],["collecteservice",{"_index":752,"title":{"injectables/CollecteService.html":{}},"body":{"injectables/CollecteService.html":{},"coverage.html":{}}}],["color",{"_index":520,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"components/UserPageComponent.html":{}}}],["column",{"_index":1150,"title":{},"body":{"components/HeaderComponent.html":{}}}],["comme",{"_index":1208,"title":{},"body":{"components/HeaderComponent.html":{},"miscellaneous/variables.html":{}}}],["commonmodule",{"_index":72,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/AppComponent.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"interfaces/User.html":{}}}],["commonmodule,formsmodule",{"_index":132,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["communication",{"_index":1724,"title":{},"body":{"injectables/UserApiService.html":{}}}],["comparaison",{"_index":242,"title":{},"body":{"components/AdminPageComponent.html":{},"components/UserPageComponent.html":{}}}],["compare",{"_index":246,"title":{},"body":{"components/AdminPageComponent.html":{},"components/UserPageComponent.html":{}}}],["complète",{"_index":1303,"title":{},"body":{"components/LogsComponent.html":{}}}],["component",{"_index":55,"title":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"components/MyAccountComponent.html":{},"components/RegisterComponent.html":{},"components/UserPageComponent.html":{}},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/AppComponent.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"components/MyAccountComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserPageComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":301,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"components/MyAccountComponent.html":{},"components/RegisterComponent.html":{},"components/UserPageComponent.html":{}}}],["components",{"_index":57,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"components/MyAccountComponent.html":{},"components/RegisterComponent.html":{},"components/UserPageComponent.html":{},"overview.html":{}}}],["components/footer/footer.component",{"_index":584,"title":{},"body":{"components/AppComponent.html":{}}}],["components/header/header.component",{"_index":583,"title":{},"body":{"components/AppComponent.html":{}}}],["components/menu/menu.component",{"_index":585,"title":{},"body":{"components/AppComponent.html":{}}}],["comportement",{"_index":2022,"title":{},"body":{"index.html":{}}}],["composant",{"_index":148,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["composants",{"_index":591,"title":{},"body":{"components/AppComponent.html":{}}}],["comptes",{"_index":2021,"title":{},"body":{"index.html":{}}}],["conditions",{"_index":290,"title":{},"body":{"components/AdminPageComponent.html":{},"components/UserPageComponent.html":{}}}],["config",{"_index":638,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CollecteService.html":{},"injectables/LogsApiService.html":{},"injectables/UserApiService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["config.ts",{"_index":1908,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["config/axios",{"_index":637,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CollecteService.html":{},"injectables/LogsApiService.html":{},"injectables/UserApiService.html":{},"injectables/UserService.html":{}}}],["configuration",{"_index":671,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["configurer",{"_index":2109,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configurée",{"_index":640,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CollecteService.html":{},"injectables/LogsApiService.html":{},"injectables/UserApiService.html":{},"injectables/UserService.html":{}}}],["confirm('êtes",{"_index":1625,"title":{},"body":{"interfaces/User.html":{}}}],["confirmez",{"_index":1065,"title":{},"body":{"components/HeaderComponent.html":{}}}],["confirmpassword",{"_index":949,"title":{},"body":{"components/HeaderComponent.html":{},"injectables/UserService.html":{}}}],["confirmpassword).subscribe",{"_index":1011,"title":{},"body":{"components/HeaderComponent.html":{}}}],["conflits",{"_index":597,"title":{},"body":{"components/AppComponent.html":{}}}],["connect",{"_index":683,"title":{},"body":{"injectables/AuthService.html":{},"components/MenuComponent.html":{},"injectables/SocketService.html":{},"injectables/UserService.html":{}}}],["connecter",{"_index":1467,"title":{},"body":{"injectables/SocketService.html":{}}}],["connexion",{"_index":645,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SocketService.html":{},"injectables/UserService.html":{}}}],["conserver",{"_index":1214,"title":{},"body":{"components/HeaderComponent.html":{}}}],["console.error('erreur",{"_index":222,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"injectables/CollecteService.html":{},"components/HeaderComponent.html":{},"injectables/LogsApiService.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"components/UserPageComponent.html":{},"injectables/UserService.html":{}}}],["console.error('socket",{"_index":1477,"title":{},"body":{"injectables/SocketService.html":{}}}],["console.error(`erreur",{"_index":786,"title":{},"body":{"injectables/CollecteService.html":{},"injectables/UserApiService.html":{}}}],["console.error(this.errormessage",{"_index":1318,"title":{},"body":{"components/LogsComponent.html":{}}}],["console.log('comparaison",{"_index":243,"title":{},"body":{"components/AdminPageComponent.html":{},"components/UserPageComponent.html":{}}}],["console.log('données",{"_index":421,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["console.log('formdata",{"_index":982,"title":{},"body":{"components/HeaderComponent.html":{}}}],["console.log('heure",{"_index":218,"title":{},"body":{"components/AdminPageComponent.html":{},"components/UserPageComponent.html":{}}}],["console.log('mot",{"_index":1875,"title":{},"body":{"injectables/UserService.html":{}}}],["console.log('réponse",{"_index":204,"title":{},"body":{"components/AdminPageComponent.html":{},"components/UserPageComponent.html":{},"injectables/UserService.html":{}}}],["console.log('user",{"_index":1645,"title":{},"body":{"interfaces/User.html":{}}}],["console.log('utilisateur",{"_index":1591,"title":{},"body":{"interfaces/User.html":{},"injectables/UserApiService.html":{}}}],["console.log('ventilateur",{"_index":252,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["console.log(`rôle",{"_index":1621,"title":{},"body":{"interfaces/User.html":{}}}],["console.log(`ventilateur",{"_index":268,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["console.warn('aucune",{"_index":795,"title":{},"body":{"injectables/CollecteService.html":{}}}],["const",{"_index":44,"title":{},"body":{"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"injectables/CollecteService.html":{},"components/HeaderComponent.html":{},"injectables/LogsApiService.html":{},"components/LogsComponent.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"guards/UserGuard.html":{},"components/UserPageComponent.html":{},"injectables/UserService.html":{}}}],["constructor",{"_index":10,"title":{},"body":{"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/AppComponent.html":{},"injectables/CapteurDataService.html":{},"injectables/CaptureService.html":{},"injectables/CollecteService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/LogsApiService.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"components/MyAccountComponent.html":{},"injectables/SocketService.html":{},"interfaces/User.html":{},"guards/UserGuard.html":{},"components/UserPageComponent.html":{},"injectables/UserService.html":{}}}],["constructor(appref",{"_index":1449,"title":{},"body":{"injectables/SocketService.html":{}}}],["constructor(http",{"_index":352,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"injectables/CapteurDataService.html":{},"injectables/UserService.html":{}}}],["constructor(logsservice",{"_index":1273,"title":{},"body":{"components/LogsComponent.html":{}}}],["constructor(private",{"_index":42,"title":{},"body":{"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/AppComponent.html":{},"interfaces/CapteurData.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"injectables/CapteurDataService.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"components/MyAccountComponent.html":{},"injectables/SocketService.html":{},"guards/UserGuard.html":{},"components/UserPageComponent.html":{},"injectables/UserService.html":{}}}],["constructor(router",{"_index":578,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(userservice",{"_index":11,"title":{},"body":{"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/HeaderComponent.html":{},"components/MenuComponent.html":{},"components/MyAccountComponent.html":{},"guards/UserGuard.html":{},"components/UserPageComponent.html":{}}}],["container",{"_index":526,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/HeaderComponent.html":{},"components/LogsComponent.html":{}}}],["conteneur",{"_index":1770,"title":{},"body":{"components/UserPageComponent.html":{}}}],["contenir",{"_index":816,"title":{},"body":{"injectables/CollecteService.html":{},"components/HeaderComponent.html":{}}}],["content",{"_index":851,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{}}}],["contributeurs",{"_index":2054,"title":{},"body":{"index.html":{}}}],["control",{"_index":1024,"title":{},"body":{"components/HeaderComponent.html":{}}}],["control.dirty",{"_index":1028,"title":{},"body":{"components/HeaderComponent.html":{}}}],["control.invalid",{"_index":1026,"title":{},"body":{"components/HeaderComponent.html":{}}}],["control.touched",{"_index":1027,"title":{},"body":{"components/HeaderComponent.html":{}}}],["control:focus",{"_index":1176,"title":{},"body":{"components/HeaderComponent.html":{}}}],["controlfan",{"_index":715,"title":{},"body":{"injectables/CapteurDataService.html":{}}}],["controlfan(action",{"_index":707,"title":{},"body":{"interfaces/CapteurData.html":{},"injectables/CapteurDataService.html":{}}}],["controlname",{"_index":890,"title":{},"body":{"components/HeaderComponent.html":{}}}],["contrôle",{"_index":269,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"index.html":{}}}],["contrôler",{"_index":705,"title":{},"body":{"interfaces/CapteurData.html":{},"injectables/CapteurDataService.html":{},"index.html":{}}}],["conversion",{"_index":673,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["cookie",{"_index":1859,"title":{},"body":{"injectables/UserService.html":{}}}],["cookie.substr(0",{"_index":1857,"title":{},"body":{"injectables/UserService.html":{}}}],["cookies",{"_index":1855,"title":{},"body":{"injectables/UserService.html":{}}}],["copie",{"_index":1644,"title":{},"body":{"interfaces/User.html":{}}}],["copier",{"_index":2076,"title":{},"body":{"index.html":{}}}],["copyright",{"_index":836,"title":{},"body":{"components/FooterComponent.html":{}}}],["correct",{"_index":1878,"title":{},"body":{"injectables/UserService.html":{}}}],["correcte",{"_index":736,"title":{},"body":{"injectables/CaptureService.html":{}}}],["correspondant",{"_index":1233,"title":{},"body":{"injectables/LogsApiService.html":{}}}],["correspondants",{"_index":955,"title":{},"body":{"components/HeaderComponent.html":{}}}],["correspondent",{"_index":934,"title":{},"body":{"components/HeaderComponent.html":{},"injectables/UserService.html":{}}}],["couleur",{"_index":1137,"title":{},"body":{"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"components/UserPageComponent.html":{}}}],["courante",{"_index":1304,"title":{},"body":{"components/LogsComponent.html":{}}}],["cours",{"_index":811,"title":{},"body":{"injectables/CollecteService.html":{}}}],["couter",{"_index":741,"title":{},"body":{"injectables/CaptureService.html":{},"injectables/SocketService.html":{}}}],["couvre",{"_index":1768,"title":{},"body":{"components/UserPageComponent.html":{}}}],["cover",{"_index":1767,"title":{},"body":{"components/UserPageComponent.html":{}}}],["coverage",{"_index":1883,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["cran",{"_index":1984,"title":{},"body":{"index.html":{}}}],["createchart",{"_index":345,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{}}}],["createchart(avgtemperatures",{"_index":356,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["createdat",{"_index":1486,"title":{},"body":{"interfaces/User.html":{}}}],["critiques",{"_index":1990,"title":{},"body":{"index.html":{}}}],["critère",{"_index":159,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["création",{"_index":426,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"index.html":{}}}],["créer",{"_index":429,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["css",{"_index":1068,"title":{},"body":{"components/HeaderComponent.html":{}}}],["ctx",{"_index":440,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["current",{"_index":1512,"title":{},"body":{"interfaces/User.html":{}}}],["currentdatetime",{"_index":79,"title":{},"body":{"components/AdminPageComponent.html":{},"components/UserPageComponent.html":{}}}],["currentmonthdata",{"_index":817,"title":{},"body":{"injectables/CollecteService.html":{}}}],["currentpage",{"_index":1265,"title":{},"body":{"components/LogsComponent.html":{},"interfaces/User.html":{}}}],["currentpassword",{"_index":942,"title":{},"body":{"components/HeaderComponent.html":{}}}],["currentuser",{"_index":45,"title":{},"body":{"guards/AdminGuard.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["currentuser.id",{"_index":1881,"title":{},"body":{"injectables/UserService.html":{}}}],["currentuser.role",{"_index":47,"title":{},"body":{"guards/AdminGuard.html":{},"guards/UserGuard.html":{}}}],["currentusersubject",{"_index":1802,"title":{},"body":{"injectables/UserService.html":{}}}],["cursor",{"_index":1076,"title":{},"body":{"components/HeaderComponent.html":{},"components/LogsComponent.html":{}}}],["custom_elements_schema",{"_index":923,"title":{},"body":{"components/HeaderComponent.html":{}}}],["côt",{"_index":1723,"title":{},"body":{"injectables/UserApiService.html":{},"injectables/UserService.html":{}}}],["d",{"_index":1780,"title":{},"body":{"components/UserPageComponent.html":{}}}],["d'accéder",{"_index":396,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["d'affichage/massage",{"_index":1183,"title":{},"body":{"components/HeaderComponent.html":{}}}],["d'envoyer",{"_index":1583,"title":{},"body":{"interfaces/User.html":{}}}],["d'erreur",{"_index":1186,"title":{},"body":{"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"injectables/UserService.html":{}}}],["d'error",{"_index":1740,"title":{},"body":{"injectables/UserApiService.html":{}}}],["d'humidit",{"_index":2039,"title":{},"body":{"index.html":{}}}],["d'importer",{"_index":1387,"title":{},"body":{"components/MenuComponent.html":{}}}],["d'inscription",{"_index":1572,"title":{},"body":{"interfaces/User.html":{}}}],["d'ombre",{"_index":1779,"title":{},"body":{"components/UserPageComponent.html":{}}}],["d'un",{"_index":1573,"title":{},"body":{"interfaces/User.html":{},"injectables/UserApiService.html":{},"index.html":{}}}],["d'utilisateur",{"_index":1336,"title":{},"body":{"components/LogsComponent.html":{}}}],["d'édition",{"_index":1641,"title":{},"body":{"interfaces/User.html":{}}}],["d'éléments",{"_index":1306,"title":{},"body":{"components/LogsComponent.html":{}}}],["d'état",{"_index":262,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["d.heure.slice(0",{"_index":239,"title":{},"body":{"components/AdminPageComponent.html":{},"components/UserPageComponent.html":{}}}],["d4edda",{"_index":1142,"title":{},"body":{"components/HeaderComponent.html":{}}}],["d\\'authentification",{"_index":1719,"title":{},"body":{"injectables/UserApiService.html":{}}}],["danger",{"_index":1187,"title":{},"body":{"components/HeaderComponent.html":{}}}],["dans",{"_index":439,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"injectables/AuthService.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"interfaces/User.html":{},"index.html":{}}}],["dark",{"_index":542,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/HeaderComponent.html":{},"components/UserPageComponent.html":{},"miscellaneous/variables.html":{}}}],["dashboard",{"_index":1400,"title":{},"body":{"components/MenuComponent.html":{}}}],["data",{"_index":236,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"injectables/CapteurDataService.html":{},"injectables/CaptureService.html":{},"injectables/SocketService.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"components/UserPageComponent.html":{}}}],["data.avghumidites",{"_index":425,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["data.avgtemperatures",{"_index":424,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["data.date",{"_index":510,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{}}}],["data.heure",{"_index":220,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/UserPageComponent.html":{}}}],["data.humidite",{"_index":250,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/UserPageComponent.html":{}}}],["data.service",{"_index":127,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"components/UserPageComponent.html":{}}}],["data.service.ts",{"_index":688,"title":{},"body":{"interfaces/CapteurData.html":{},"injectables/CapteurDataService.html":{},"coverage.html":{}}}],["data.service.ts:16",{"_index":718,"title":{},"body":{"injectables/CapteurDataService.html":{}}}],["data.service.ts:20",{"_index":723,"title":{},"body":{"injectables/CapteurDataService.html":{}}}],["data.service.ts:26",{"_index":722,"title":{},"body":{"injectables/CapteurDataService.html":{}}}],["data.service.ts:31",{"_index":720,"title":{},"body":{"injectables/CapteurDataService.html":{}}}],["data.service.ts:37",{"_index":719,"title":{},"body":{"injectables/CapteurDataService.html":{}}}],["data.service.ts:42",{"_index":721,"title":{},"body":{"injectables/CapteurDataService.html":{}}}],["data.temperature",{"_index":247,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/UserPageComponent.html":{}}}],["data.user",{"_index":1735,"title":{},"body":{"injectables/UserApiService.html":{}}}],["data.users",{"_index":1694,"title":{},"body":{"injectables/UserApiService.html":{}}}],["data[data.length",{"_index":164,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["datasets",{"_index":457,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["datatable",{"_index":1943,"title":{},"body":{"dependencies.html":{}}}],["date",{"_index":180,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"injectables/CapteurDataService.html":{},"injectables/CollecteService.html":{},"injectables/LogsApiService.html":{},"components/LogsComponent.html":{},"interfaces/User.html":{},"components/UserPageComponent.html":{}}}],["date().getfullyear",{"_index":375,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["date().getmonth",{"_index":372,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["date.now",{"_index":833,"title":{},"body":{"components/FooterComponent.html":{}}}],["date:'y",{"_index":837,"title":{},"body":{"components/FooterComponent.html":{}}}],["date:\\'y",{"_index":853,"title":{},"body":{"components/FooterComponent.html":{}}}],["date_modification",{"_index":1487,"title":{},"body":{"interfaces/User.html":{}}}],["dates",{"_index":1239,"title":{},"body":{"injectables/LogsApiService.html":{}}}],["day",{"_index":194,"title":{},"body":{"components/AdminPageComponent.html":{},"interfaces/CapteurData.html":{},"injectables/CapteurDataService.html":{},"components/UserPageComponent.html":{}}}],["dc3545",{"_index":1126,"title":{},"body":{"components/HeaderComponent.html":{}}}],["dd/mm/yyyy",{"_index":1338,"title":{},"body":{"components/LogsComponent.html":{}}}],["ddd",{"_index":1170,"title":{},"body":{"components/HeaderComponent.html":{}}}],["de",{"_index":137,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"injectables/AuthService.html":{},"interfaces/CapteurData.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"injectables/CapteurDataService.html":{},"injectables/CaptureService.html":{},"injectables/CollecteService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/LogsApiService.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"injectables/SocketService.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"components/UserPageComponent.html":{},"injectables/UserService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["debug",{"_index":1647,"title":{},"body":{"interfaces/User.html":{}}}],["debugging",{"_index":423,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["decoration",{"_index":1412,"title":{},"body":{"components/MenuComponent.html":{}}}],["decorators",{"_index":917,"title":{},"body":{"components/HeaderComponent.html":{}}}],["default",{"_index":114,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CapteurDataService.html":{},"injectables/CollecteService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/LogsApiService.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"components/UserPageComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":930,"title":{},"body":{"components/HeaderComponent.html":{}}}],["defined",{"_index":14,"title":{},"body":{"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CapteurDataService.html":{},"injectables/CaptureService.html":{},"injectables/CollecteService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/LogsApiService.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"components/MyAccountComponent.html":{},"injectables/SocketService.html":{},"injectables/UserApiService.html":{},"guards/UserGuard.html":{},"components/UserPageComponent.html":{},"injectables/UserService.html":{}}}],["deleteallcookies",{"_index":1803,"title":{},"body":{"injectables/UserService.html":{}}}],["deleteuser(userid",{"_index":1639,"title":{},"body":{"interfaces/User.html":{}}}],["dependencies",{"_index":1921,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["depuis",{"_index":1618,"title":{},"body":{"interfaces/User.html":{}}}],["dernier",{"_index":152,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["des",{"_index":208,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/AppComponent.html":{},"interfaces/CapteurData.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"injectables/CapteurDataService.html":{},"injectables/CollecteService.html":{},"components/HeaderComponent.html":{},"injectables/LogsApiService.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"components/UserPageComponent.html":{},"injectables/UserService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["desc",{"_index":1299,"title":{},"body":{"components/LogsComponent.html":{},"interfaces/User.html":{}}}],["description",{"_index":1234,"title":{},"body":{"injectables/LogsApiService.html":{},"components/LogsComponent.html":{},"index.html":{}}}],["deux",{"_index":1238,"title":{},"body":{"injectables/LogsApiService.html":{}}}],["digit",{"_index":196,"title":{},"body":{"components/AdminPageComponent.html":{},"components/UserPageComponent.html":{}}}],["dimanche",{"_index":455,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["diop",{"_index":2060,"title":{},"body":{"index.html":{}}}],["direction",{"_index":1149,"title":{},"body":{"components/HeaderComponent.html":{}}}],["directive",{"_index":299,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"components/MyAccountComponent.html":{},"components/RegisterComponent.html":{},"components/UserPageComponent.html":{}}}],["directives",{"_index":329,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"components/MyAccountComponent.html":{},"components/RegisterComponent.html":{},"components/UserPageComponent.html":{}}}],["disableuser",{"_index":1673,"title":{},"body":{"injectables/UserApiService.html":{}}}],["disableuser(id",{"_index":1678,"title":{},"body":{"injectables/UserApiService.html":{}}}],["disableuser(userid",{"_index":1630,"title":{},"body":{"interfaces/User.html":{}}}],["disconnect",{"_index":1446,"title":{},"body":{"injectables/SocketService.html":{}}}],["display",{"_index":845,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{}}}],["disponible",{"_index":509,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"injectables/CollecteService.html":{}}}],["distance",{"_index":2014,"title":{},"body":{"index.html":{}}}],["diéye",{"_index":2065,"title":{},"body":{"index.html":{}}}],["document",{"_index":402,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["document.cookie",{"_index":1860,"title":{},"body":{"injectables/UserService.html":{}}}],["document.cookie.split",{"_index":1856,"title":{},"body":{"injectables/UserService.html":{}}}],["document.getelementbyid('chartcanvas",{"_index":441,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["document.getelementbyid('themeicon",{"_index":965,"title":{},"body":{"components/HeaderComponent.html":{}}}],["documentation",{"_index":1884,"title":{},"body":{"coverage.html":{}}}],["doit",{"_index":815,"title":{},"body":{"injectables/CollecteService.html":{},"components/HeaderComponent.html":{},"interfaces/User.html":{}}}],["doivent",{"_index":1606,"title":{},"body":{"interfaces/User.html":{}}}],["dom",{"_index":59,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/AppComponent.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"components/MyAccountComponent.html":{},"components/RegisterComponent.html":{},"components/UserPageComponent.html":{}}}],["donnée",{"_index":241,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"injectables/CollecteService.html":{},"components/UserPageComponent.html":{}}}],["données",{"_index":136,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"injectables/CapteurDataService.html":{},"injectables/CaptureService.html":{},"injectables/CollecteService.html":{},"components/LogsComponent.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"components/UserPageComponent.html":{},"index.html":{}}}],["doublons",{"_index":436,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["droite",{"_index":1104,"title":{},"body":{"components/HeaderComponent.html":{},"components/UserPageComponent.html":{}}}],["du",{"_index":147,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/CapteurData.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"injectables/CapteurDataService.html":{},"injectables/CaptureService.html":{},"injectables/CollecteService.html":{},"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"injectables/SocketService.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"components/UserPageComponent.html":{},"injectables/UserService.html":{},"index.html":{}}}],["dummy",{"_index":1506,"title":{},"body":{"interfaces/User.html":{}}}],["durée",{"_index":1042,"title":{},"body":{"components/HeaderComponent.html":{}}}],["dynamic",{"_index":1931,"title":{},"body":{"dependencies.html":{}}}],["début",{"_index":1241,"title":{},"body":{"injectables/LogsApiService.html":{}}}],["déclaration",{"_index":641,"title":{},"body":{"injectables/AuthService.html":{}}}],["déclarez",{"_index":1520,"title":{},"body":{"interfaces/User.html":{}}}],["déclenchant",{"_index":1986,"title":{},"body":{"index.html":{}}}],["déclenchement",{"_index":2024,"title":{},"body":{"index.html":{}}}],["déconnecter",{"_index":1481,"title":{},"body":{"injectables/SocketService.html":{}}}],["déconnexion",{"_index":675,"title":{},"body":{"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"injectables/UserService.html":{}}}],["défaut",{"_index":1404,"title":{},"body":{"components/MenuComponent.html":{},"miscellaneous/variables.html":{}}}],["définir",{"_index":1017,"title":{},"body":{"components/HeaderComponent.html":{}}}],["définissez",{"_index":1773,"title":{},"body":{"components/UserPageComponent.html":{}}}],["déj",{"_index":433,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["délai",{"_index":1039,"title":{},"body":{"components/HeaderComponent.html":{}}}],["démarrage",{"_index":146,"title":{},"body":{"components/AdminPageComponent.html":{},"injectables/CollecteService.html":{}}}],["démarrer",{"_index":822,"title":{},"body":{"injectables/CollecteService.html":{}}}],["dépassement",{"_index":1988,"title":{},"body":{"index.html":{}}}],["dépendances",{"_index":2074,"title":{},"body":{"index.html":{}}}],["désactiv",{"_index":1637,"title":{},"body":{"interfaces/User.html":{}}}],["désactivation",{"_index":1638,"title":{},"body":{"interfaces/User.html":{},"injectables/UserApiService.html":{}}}],["désactiver",{"_index":1628,"title":{},"body":{"interfaces/User.html":{},"injectables/UserApiService.html":{}}}],["détection",{"_index":1651,"title":{},"body":{"interfaces/User.html":{}}}],["détruit",{"_index":434,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["développement",{"_index":2079,"title":{},"body":{"index.html":{}}}],["développer",{"_index":1975,"title":{},"body":{"index.html":{}}}],["développeur",{"_index":2058,"title":{},"body":{"index.html":{}}}],["e",{"_index":1565,"title":{},"body":{"interfaces/User.html":{}}}],["e.g",{"_index":192,"title":{},"body":{"components/AdminPageComponent.html":{},"components/UserPageComponent.html":{}}}],["e.target.result",{"_index":1567,"title":{},"body":{"interfaces/User.html":{}}}],["ease",{"_index":1361,"title":{},"body":{"components/LogsComponent.html":{},"components/MenuComponent.html":{}}}],["echarts",{"_index":1952,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["edit",{"_index":1646,"title":{},"body":{"interfaces/User.html":{}}}],["edituser(user",{"_index":1642,"title":{},"body":{"interfaces/User.html":{}}}],["efface",{"_index":1021,"title":{},"body":{"components/HeaderComponent.html":{}}}],["effet",{"_index":1778,"title":{},"body":{"components/UserPageComponent.html":{}}}],["element",{"_index":298,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"components/MyAccountComponent.html":{},"components/RegisterComponent.html":{},"components/UserPageComponent.html":{}}}],["elementref",{"_index":916,"title":{},"body":{"components/HeaderComponent.html":{},"interfaces/User.html":{}}}],["email",{"_index":623,"title":{},"body":{"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"injectables/UserService.html":{}}}],["email/mot",{"_index":652,"title":{},"body":{"injectables/AuthService.html":{}}}],["emailregex",{"_index":1599,"title":{},"body":{"interfaces/User.html":{}}}],["emailregex.test(user.email",{"_index":1608,"title":{},"body":{"interfaces/User.html":{}}}],["empêche",{"_index":1783,"title":{},"body":{"components/UserPageComponent.html":{}}}],["en",{"_index":674,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CaptureService.html":{},"injectables/CollecteService.html":{},"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"interfaces/User.html":{},"components/UserPageComponent.html":{},"index.html":{}}}],["end",{"_index":1080,"title":{},"body":{"components/HeaderComponent.html":{}}}],["enddate",{"_index":1236,"title":{},"body":{"injectables/LogsApiService.html":{}}}],["endindex",{"_index":1322,"title":{},"body":{"components/LogsComponent.html":{},"interfaces/User.html":{}}}],["enlève",{"_index":1413,"title":{},"body":{"components/MenuComponent.html":{}}}],["enregistrement",{"_index":153,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["ensure",{"_index":1083,"title":{},"body":{"components/HeaderComponent.html":{}}}],["entre",{"_index":244,"title":{},"body":{"components/AdminPageComponent.html":{},"components/HeaderComponent.html":{},"injectables/LogsApiService.html":{},"components/MenuComponent.html":{},"components/UserPageComponent.html":{}}}],["entry.humidite",{"_index":496,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["entry.temperature",{"_index":495,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["environnementales",{"_index":1995,"title":{},"body":{"index.html":{}}}],["envoi",{"_index":1737,"title":{},"body":{"injectables/UserApiService.html":{}}}],["envoie",{"_index":1693,"title":{},"body":{"injectables/UserApiService.html":{}}}],["envoyer",{"_index":1473,"title":{},"body":{"injectables/SocketService.html":{}}}],["eqpos",{"_index":1858,"title":{},"body":{"injectables/UserService.html":{}}}],["err",{"_index":428,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"components/HeaderComponent.html":{}}}],["err.error.message",{"_index":993,"title":{},"body":{"components/HeaderComponent.html":{}}}],["erreur",{"_index":792,"title":{},"body":{"injectables/CollecteService.html":{},"components/HeaderComponent.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"injectables/UserService.html":{}}}],["erreurs",{"_index":749,"title":{},"body":{"injectables/CaptureService.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"injectables/UserService.html":{}}}],["error",{"_index":221,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"injectables/CaptureService.html":{},"injectables/CollecteService.html":{},"components/HeaderComponent.html":{},"injectables/LogsApiService.html":{},"components/LogsComponent.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"components/UserPageComponent.html":{},"injectables/UserService.html":{}}}],["error('aucun",{"_index":1695,"title":{},"body":{"injectables/UserApiService.html":{}}}],["error('aucune",{"_index":667,"title":{},"body":{"injectables/AuthService.html":{}}}],["error('erreur",{"_index":670,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserApiService.html":{}}}],["error('une",{"_index":1732,"title":{},"body":{"injectables/UserApiService.html":{}}}],["error(`erreur",{"_index":1709,"title":{},"body":{"injectables/UserApiService.html":{}}}],["error(error.response?.data?.message",{"_index":1696,"title":{},"body":{"injectables/UserApiService.html":{}}}],["error(servermessage",{"_index":1727,"title":{},"body":{"injectables/UserApiService.html":{}}}],["error.message",{"_index":801,"title":{},"body":{"injectables/CollecteService.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"injectables/UserService.html":{}}}],["error.request",{"_index":666,"title":{},"body":{"injectables/AuthService.html":{}}}],["error.response",{"_index":663,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["error.response.data",{"_index":665,"title":{},"body":{"injectables/AuthService.html":{}}}],["error.response.data.message",{"_index":1869,"title":{},"body":{"injectables/UserService.html":{}}}],["error.response?.data",{"_index":800,"title":{},"body":{"injectables/CollecteService.html":{},"injectables/UserApiService.html":{}}}],["error.response?.data?.message",{"_index":1713,"title":{},"body":{"injectables/UserApiService.html":{}}}],["error.response?.status",{"_index":793,"title":{},"body":{"injectables/CollecteService.html":{},"injectables/UserApiService.html":{}}}],["errormessage",{"_index":80,"title":{},"body":{"components/AdminPageComponent.html":{},"components/LogsComponent.html":{},"interfaces/User.html":{},"components/UserPageComponent.html":{},"injectables/UserService.html":{}}}],["esp32",{"_index":2038,"title":{},"body":{"index.html":{}}}],["espace",{"_index":1098,"title":{},"body":{"components/HeaderComponent.html":{},"index.html":{}}}],["espacement",{"_index":1409,"title":{},"body":{"components/MenuComponent.html":{},"components/UserPageComponent.html":{}}}],["est",{"_index":275,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"injectables/AuthService.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"injectables/CaptureService.html":{},"injectables/CollecteService.html":{},"components/HeaderComponent.html":{},"components/MenuComponent.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"components/UserPageComponent.html":{},"injectables/UserService.html":{}}}],["et",{"_index":245,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"injectables/CapteurDataService.html":{},"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"interfaces/User.html":{},"components/UserPageComponent.html":{},"injectables/UserService.html":{},"index.html":{}}}],["event",{"_index":110,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AppComponent.html":{},"components/HeaderComponent.html":{},"injectables/SocketService.html":{}}}],["event.preventdefault",{"_index":974,"title":{},"body":{"components/HeaderComponent.html":{}}}],["event.target.files[0",{"_index":977,"title":{},"body":{"components/HeaderComponent.html":{},"interfaces/User.html":{}}}],["event.urlafterredirects.split('?')[0",{"_index":602,"title":{},"body":{"components/AppComponent.html":{}}}],["eventcoalescing",{"_index":2097,"title":{},"body":{"miscellaneous/variables.html":{}}}],["example",{"_index":2067,"title":{},"body":{"index.html":{}}}],["exemple",{"_index":2105,"title":{},"body":{"miscellaneous/variables.html":{}}}],["existe",{"_index":432,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"injectables/AuthService.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["expires=thu",{"_index":1861,"title":{},"body":{"injectables/UserService.html":{}}}],["explicite",{"_index":1703,"title":{},"body":{"injectables/UserApiService.html":{}}}],["export",{"_index":39,"title":{},"body":{"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/CapteurData.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"injectables/CapteurDataService.html":{},"injectables/CaptureService.html":{},"injectables/CollecteService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/LogsApiService.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"components/MyAccountComponent.html":{},"components/RegisterComponent.html":{},"injectables/SocketService.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"guards/UserGuard.html":{},"components/UserPageComponent.html":{},"injectables/UserService.html":{}}}],["express",{"_index":1954,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["express.express",{"_index":1967,"title":{},"body":{"miscellaneous/functions.html":{}}}],["eye",{"_index":1212,"title":{},"body":{"components/HeaderComponent.html":{}}}],["f1f1f1",{"_index":1082,"title":{},"body":{"components/HeaderComponent.html":{}}}],["f44336",{"_index":1188,"title":{},"body":{"components/HeaderComponent.html":{}}}],["f5c6cb",{"_index":1146,"title":{},"body":{"components/HeaderComponent.html":{}}}],["f8d7da",{"_index":1145,"title":{},"body":{"components/HeaderComponent.html":{}}}],["f8f9fa",{"_index":1118,"title":{},"body":{"components/HeaderComponent.html":{}}}],["fa",{"_index":2057,"title":{},"body":{"index.html":{}}}],["factory",{"_index":2101,"title":{},"body":{"miscellaneous/variables.html":{}}}],["facultatif",{"_index":1788,"title":{},"body":{"components/UserPageComponent.html":{}}}],["false",{"_index":52,"title":{},"body":{"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"injectables/AuthService.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"components/HeaderComponent.html":{},"components/MenuComponent.html":{},"injectables/SocketService.html":{},"interfaces/User.html":{},"guards/UserGuard.html":{}}}],["family",{"_index":1158,"title":{},"body":{"components/HeaderComponent.html":{}}}],["fan",{"_index":709,"title":{},"body":{"interfaces/CapteurData.html":{},"injectables/CapteurDataService.html":{}}}],["fanstatus",{"_index":81,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["fatou",{"_index":2064,"title":{},"body":{"index.html":{}}}],["fb",{"_index":882,"title":{},"body":{"components/HeaderComponent.html":{}}}],["feedback",{"_index":1127,"title":{},"body":{"components/HeaderComponent.html":{}}}],["ferme",{"_index":1033,"title":{},"body":{"components/HeaderComponent.html":{},"interfaces/User.html":{}}}],["fermer",{"_index":1038,"title":{},"body":{"components/HeaderComponent.html":{},"interfaces/User.html":{}}}],["fetchlastdaydata",{"_index":87,"title":{},"body":{"components/AdminPageComponent.html":{},"components/UserPageComponent.html":{}}}],["fetchuserbyid",{"_index":1674,"title":{},"body":{"injectables/UserApiService.html":{}}}],["fetchuserbyid(id",{"_index":1680,"title":{},"body":{"injectables/UserApiService.html":{}}}],["fetchusers",{"_index":1675,"title":{},"body":{"injectables/UserApiService.html":{}}}],["fetchusers(activeonly",{"_index":1539,"title":{},"body":{"interfaces/User.html":{},"injectables/UserApiService.html":{}}}],["fff",{"_index":1121,"title":{},"body":{"components/HeaderComponent.html":{},"components/UserPageComponent.html":{}}}],["ffffff",{"_index":1345,"title":{},"body":{"components/LogsComponent.html":{}}}],["fichier",{"_index":1528,"title":{},"body":{"interfaces/User.html":{}}}],["file",{"_index":5,"title":{},"body":{"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/CapteurData.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"injectables/CapteurDataService.html":{},"injectables/CaptureService.html":{},"injectables/CollecteService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/LogsApiService.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"components/MyAccountComponent.html":{},"components/RegisterComponent.html":{},"injectables/SocketService.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"guards/UserGuard.html":{},"components/UserPageComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["file).subscribe",{"_index":986,"title":{},"body":{"components/HeaderComponent.html":{}}}],["filereader",{"_index":1563,"title":{},"body":{"interfaces/User.html":{}}}],["fill",{"_index":465,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"components/HeaderComponent.html":{}}}],["filter((entry",{"_index":494,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["filteredlogs",{"_index":1270,"title":{},"body":{"components/LogsComponent.html":{}}}],["filteredusers",{"_index":1551,"title":{},"body":{"interfaces/User.html":{}}}],["filtrage",{"_index":168,"title":{},"body":{"components/AdminPageComponent.html":{},"interfaces/User.html":{}}}],["filtre",{"_index":1290,"title":{},"body":{"components/LogsComponent.html":{}}}],["filtrer",{"_index":820,"title":{},"body":{"injectables/CollecteService.html":{},"components/LogsComponent.html":{}}}],["fin",{"_index":1243,"title":{},"body":{"injectables/LogsApiService.html":{}}}],["finally",{"_index":1546,"title":{},"body":{"interfaces/User.html":{}}}],["first",{"_index":1458,"title":{},"body":{"injectables/SocketService.html":{}}}],["flex",{"_index":846,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"components/UserPageComponent.html":{}}}],["fluide",{"_index":1417,"title":{},"body":{"components/MenuComponent.html":{}}}],["focus",{"_index":1368,"title":{},"body":{"components/LogsComponent.html":{}}}],["fonc",{"_index":1111,"title":{},"body":{"components/HeaderComponent.html":{},"components/LogsComponent.html":{}}}],["fonction",{"_index":390,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"components/LogsComponent.html":{},"injectables/UserService.html":{}}}],["fonctionnalités",{"_index":2011,"title":{},"body":{"index.html":{}}}],["fond",{"_index":522,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/MenuComponent.html":{}}}],["font",{"_index":1096,"title":{},"body":{"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"components/UserPageComponent.html":{}}}],["footer",{"_index":826,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{}}}],["footer'},{'name",{"_index":313,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"components/MyAccountComponent.html":{},"components/RegisterComponent.html":{},"components/UserPageComponent.html":{}}}],["footer.component.css",{"_index":827,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.html",{"_index":828,"title":{},"body":{"components/FooterComponent.html":{}}}],["footercomponent",{"_index":312,"title":{"components/FooterComponent.html":{}},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"components/MyAccountComponent.html":{},"components/RegisterComponent.html":{},"components/UserPageComponent.html":{},"coverage.html":{}}}],["force",{"_index":1650,"title":{},"body":{"interfaces/User.html":{}}}],["format",{"_index":231,"title":{},"body":{"components/AdminPageComponent.html":{},"injectables/LogsApiService.html":{},"components/UserPageComponent.html":{}}}],["formate",{"_index":240,"title":{},"body":{"components/AdminPageComponent.html":{},"components/UserPageComponent.html":{}}}],["formatteddataheure",{"_index":238,"title":{},"body":{"components/AdminPageComponent.html":{},"components/UserPageComponent.html":{}}}],["formattedheure",{"_index":227,"title":{},"body":{"components/AdminPageComponent.html":{},"components/UserPageComponent.html":{}}}],["formatée",{"_index":233,"title":{},"body":{"components/AdminPageComponent.html":{},"components/UserPageComponent.html":{}}}],["formatées",{"_index":216,"title":{},"body":{"components/AdminPageComponent.html":{},"components/UserPageComponent.html":{}}}],["formbuilder",{"_index":883,"title":{},"body":{"components/HeaderComponent.html":{}}}],["formdata",{"_index":978,"title":{},"body":{"components/HeaderComponent.html":{},"injectables/UserService.html":{}}}],["formdata.append('photo",{"_index":981,"title":{},"body":{"components/HeaderComponent.html":{},"injectables/UserService.html":{}}}],["formdata.append('userid",{"_index":979,"title":{},"body":{"components/HeaderComponent.html":{},"injectables/UserService.html":{}}}],["formdata.get('photo",{"_index":984,"title":{},"body":{"components/HeaderComponent.html":{}}}],["formdata.get('userid",{"_index":983,"title":{},"body":{"components/HeaderComponent.html":{}}}],["forme",{"_index":190,"title":{},"body":{"components/AdminPageComponent.html":{},"components/UserPageComponent.html":{}}}],["formgroup",{"_index":909,"title":{},"body":{"components/HeaderComponent.html":{}}}],["formsmodule",{"_index":73,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"interfaces/User.html":{}}}],["formulaire",{"_index":995,"title":{},"body":{"components/HeaderComponent.html":{},"interfaces/User.html":{}}}],["fortawesome/fontawesome",{"_index":1934,"title":{},"body":{"dependencies.html":{}}}],["fournir",{"_index":651,"title":{},"body":{"injectables/AuthService.html":{}}}],["free",{"_index":1935,"title":{},"body":{"dependencies.html":{}}}],["from(promise",{"_index":672,"title":{},"body":{"injectables/AuthService.html":{}}}],["from(promise.reject('veuillez",{"_index":650,"title":{},"body":{"injectables/AuthService.html":{}}}],["frontend",{"_index":2033,"title":{},"body":{"index.html":{}}}],["full",{"_index":1971,"title":{},"body":{"index.html":{}}}],["function",{"_index":1888,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":1966,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gal",{"_index":288,"title":{},"body":{"components/AdminPageComponent.html":{},"components/UserPageComponent.html":{}}}],["garantit",{"_index":391,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["gauche",{"_index":1798,"title":{},"body":{"components/UserPageComponent.html":{}}}],["gaye",{"_index":2063,"title":{},"body":{"index.html":{}}}],["gestion",{"_index":1701,"title":{},"body":{"injectables/UserApiService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["getalldata",{"_index":755,"title":{},"body":{"injectables/CollecteService.html":{}}}],["getalllogs",{"_index":1223,"title":{},"body":{"injectables/LogsApiService.html":{}}}],["getcapteurdata",{"_index":702,"title":{},"body":{"interfaces/CapteurData.html":{},"injectables/CapteurDataService.html":{}}}],["getcapteurdatas",{"_index":716,"title":{},"body":{"injectables/CapteurDataService.html":{}}}],["getcapteurdatas(page",{"_index":711,"title":{},"body":{"interfaces/CapteurData.html":{},"injectables/CapteurDataService.html":{}}}],["getcurrentmonthdata",{"_index":756,"title":{},"body":{"injectables/CollecteService.html":{}}}],["getcurrentmonthdata(page",{"_index":765,"title":{},"body":{"injectables/CollecteService.html":{}}}],["getcurrentuser",{"_index":1804,"title":{},"body":{"injectables/UserService.html":{}}}],["getdailyaverage",{"_index":757,"title":{},"body":{"injectables/CollecteService.html":{}}}],["getdatabyid",{"_index":758,"title":{},"body":{"injectables/CollecteService.html":{}}}],["getdatabyid(id",{"_index":770,"title":{},"body":{"injectables/CollecteService.html":{}}}],["getdataforweek",{"_index":759,"title":{},"body":{"injectables/CollecteService.html":{}}}],["getdataforweek(date",{"_index":773,"title":{},"body":{"injectables/CollecteService.html":{}}}],["gethumiditeat",{"_index":88,"title":{},"body":{"components/AdminPageComponent.html":{},"components/UserPageComponent.html":{}}}],["gethumiditeat('10:00",{"_index":282,"title":{},"body":{"components/AdminPageComponent.html":{},"components/UserPageComponent.html":{}}}],["gethumiditeat('14:00",{"_index":284,"title":{},"body":{"components/AdminPageComponent.html":{},"components/UserPageComponent.html":{}}}],["gethumiditeat('17:00",{"_index":286,"title":{},"body":{"components/AdminPageComponent.html":{},"components/UserPageComponent.html":{}}}],["gethumiditeat(\\'10:00",{"_index":302,"title":{},"body":{"components/AdminPageComponent.html":{},"components/UserPageComponent.html":{}}}],["gethumiditeat(\\'14:00",{"_index":303,"title":{},"body":{"components/AdminPageComponent.html":{},"components/UserPageComponent.html":{}}}],["gethumiditeat(\\'17:00",{"_index":304,"title":{},"body":{"components/AdminPageComponent.html":{},"components/UserPageComponent.html":{}}}],["gethumiditeat(heure",{"_index":101,"title":{},"body":{"components/AdminPageComponent.html":{},"components/UserPageComponent.html":{}}}],["getlastdaydata",{"_index":700,"title":{},"body":{"interfaces/CapteurData.html":{},"injectables/CapteurDataService.html":{}}}],["getlogsbyaction",{"_index":1224,"title":{},"body":{"injectables/LogsApiService.html":{}}}],["getlogsbyaction(action",{"_index":1231,"title":{},"body":{"injectables/LogsApiService.html":{}}}],["getlogsbydaterange",{"_index":1225,"title":{},"body":{"injectables/LogsApiService.html":{}}}],["getlogsbydaterange(startdate",{"_index":1235,"title":{},"body":{"injectables/LogsApiService.html":{}}}],["getlogsbyuser",{"_index":1226,"title":{},"body":{"injectables/LogsApiService.html":{}}}],["getlogsbyuser(userid",{"_index":1244,"title":{},"body":{"injectables/LogsApiService.html":{}}}],["getmonthlyaverage",{"_index":760,"title":{},"body":{"injectables/CollecteService.html":{}}}],["gettemperatureat",{"_index":89,"title":{},"body":{"components/AdminPageComponent.html":{},"components/UserPageComponent.html":{}}}],["gettemperatureat('10:00",{"_index":292,"title":{},"body":{"components/AdminPageComponent.html":{},"components/UserPageComponent.html":{}}}],["gettemperatureat('14:00",{"_index":293,"title":{},"body":{"components/AdminPageComponent.html":{},"components/UserPageComponent.html":{}}}],["gettemperatureat('17:00",{"_index":294,"title":{},"body":{"components/AdminPageComponent.html":{},"components/UserPageComponent.html":{}}}],["gettemperatureat(\\'10:00",{"_index":305,"title":{},"body":{"components/AdminPageComponent.html":{},"components/UserPageComponent.html":{}}}],["gettemperatureat(\\'14:00",{"_index":306,"title":{},"body":{"components/AdminPageComponent.html":{},"components/UserPageComponent.html":{}}}],["gettemperatureat(\\'17:00",{"_index":307,"title":{},"body":{"components/AdminPageComponent.html":{},"components/UserPageComponent.html":{}}}],["gettemperatureat(heure",{"_index":105,"title":{},"body":{"components/AdminPageComponent.html":{},"components/UserPageComponent.html":{}}}],["getting",{"_index":1968,"title":{"index.html":{}},"body":{}}],["getuser",{"_index":617,"title":{},"body":{"injectables/AuthService.html":{}}}],["getweeklyaverage",{"_index":761,"title":{},"body":{"injectables/CollecteService.html":{}}}],["getweeklyaverages",{"_index":717,"title":{},"body":{"injectables/CapteurDataService.html":{}}}],["getweeklyaverages(year",{"_index":694,"title":{},"body":{"interfaces/CapteurData.html":{},"injectables/CapteurDataService.html":{}}}],["git",{"_index":2044,"title":{},"body":{"index.html":{}}}],["github",{"_index":2045,"title":{},"body":{"index.html":{}}}],["globaux",{"_index":592,"title":{},"body":{"components/AppComponent.html":{}}}],["graph",{"_index":557,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{}}}],["graphique",{"_index":387,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"miscellaneous/variables.html":{}}}],["gras",{"_index":1426,"title":{},"body":{"components/MenuComponent.html":{}}}],["green",{"_index":571,"title":{},"body":{"components/AnalyseComponent-1.html":{},"components/UserPageComponent.html":{}}}],["gris",{"_index":1110,"title":{},"body":{"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"components/UserPageComponent.html":{}}}],["grise",{"_index":556,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{}}}],["group",{"_index":534,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/HeaderComponent.html":{},"components/UserPageComponent.html":{}}}],["groupbydateandhour",{"_index":346,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["groupe",{"_index":839,"title":{},"body":{"components/FooterComponent.html":{}}}],["grouped",{"_index":482,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["grouped[key",{"_index":487,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["grouped[key].humidite",{"_index":491,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["grouped[key].temperature",{"_index":489,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["groupeddata",{"_index":340,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["guard",{"_index":0,"title":{"guards/AdminGuard.html":{},"guards/UserGuard.html":{}},"body":{"coverage.html":{}}}],["guards",{"_index":2,"title":{},"body":{"guards/AdminGuard.html":{},"guards/UserGuard.html":{},"overview.html":{}}}],["général",{"_index":1103,"title":{},"body":{"components/HeaderComponent.html":{}}}],["générales",{"_index":1729,"title":{},"body":{"injectables/UserApiService.html":{}}}],["génération",{"_index":1560,"title":{},"body":{"interfaces/User.html":{}}}],["générique",{"_index":804,"title":{},"body":{"injectables/CollecteService.html":{}}}],["gérer",{"_index":748,"title":{},"body":{"injectables/CaptureService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["gérée",{"_index":1731,"title":{},"body":{"injectables/UserApiService.html":{}}}],["h2",{"_index":1157,"title":{},"body":{"components/HeaderComponent.html":{}}}],["h4",{"_index":570,"title":{},"body":{"components/AnalyseComponent-1.html":{},"components/UserPageComponent.html":{}}}],["h6",{"_index":1790,"title":{},"body":{"components/UserPageComponent.html":{}}}],["handleerror",{"_index":1805,"title":{},"body":{"injectables/UserService.html":{}}}],["handleerror(error",{"_index":1815,"title":{},"body":{"injectables/UserService.html":{}}}],["hauteur",{"_index":1774,"title":{},"body":{"components/UserPageComponent.html":{}}}],["header",{"_index":855,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header'},{'name",{"_index":315,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"components/MyAccountComponent.html":{},"components/RegisterComponent.html":{},"components/UserPageComponent.html":{}}}],["header.component.css",{"_index":857,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.html",{"_index":858,"title":{},"body":{"components/HeaderComponent.html":{}}}],["headercomponent",{"_index":314,"title":{"components/HeaderComponent.html":{}},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"components/MyAccountComponent.html":{},"components/RegisterComponent.html":{},"components/UserPageComponent.html":{},"coverage.html":{}}}],["hebdomadaires",{"_index":818,"title":{},"body":{"injectables/CollecteService.html":{}}}],["height",{"_index":527,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/HeaderComponent.html":{},"components/UserPageComponent.html":{}}}],["heure",{"_index":104,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"injectables/CapteurDataService.html":{},"components/LogsComponent.html":{},"components/UserPageComponent.html":{},"index.html":{}}}],["heure.slice(0",{"_index":228,"title":{},"body":{"components/AdminPageComponent.html":{},"components/UserPageComponent.html":{}}}],["heures",{"_index":211,"title":{},"body":{"components/AdminPageComponent.html":{},"components/UserPageComponent.html":{}}}],["hh:mm",{"_index":232,"title":{},"body":{"components/AdminPageComponent.html":{},"components/UserPageComponent.html":{}}}],["highlight",{"_index":1786,"title":{},"body":{"components/UserPageComponent.html":{}}}],["historique",{"_index":1248,"title":{},"body":{"injectables/LogsApiService.html":{},"index.html":{}}}],["historiques",{"_index":1230,"title":{},"body":{"injectables/LogsApiService.html":{}}}],["horizontal",{"_index":1410,"title":{},"body":{"components/MenuComponent.html":{}}}],["horizontale",{"_index":1407,"title":{},"body":{"components/MenuComponent.html":{}}}],["horizontalement",{"_index":849,"title":{},"body":{"components/FooterComponent.html":{},"components/MenuComponent.html":{}}}],["hour",{"_index":197,"title":{},"body":{"components/AdminPageComponent.html":{},"components/UserPageComponent.html":{}}}],["html",{"_index":297,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"components/MyAccountComponent.html":{},"components/RegisterComponent.html":{},"components/UserPageComponent.html":{}}}],["htmlcanvaselement",{"_index":442,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["http",{"_index":355,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"injectables/CapteurDataService.html":{},"injectables/UserService.html":{}}}],["http://localhost:4200",{"_index":2082,"title":{},"body":{"index.html":{}}}],["http://localhost:5000/api",{"_index":2102,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:5001/api/auth",{"_index":1829,"title":{},"body":{"injectables/UserService.html":{}}}],["http://localhost:5001/api/capteurs",{"_index":690,"title":{},"body":{"interfaces/CapteurData.html":{},"injectables/CapteurDataService.html":{}}}],["httpclient",{"_index":353,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"injectables/CapteurDataService.html":{},"injectables/UserService.html":{}}}],["httpclientmodule",{"_index":334,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/AppComponent.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"injectables/UserService.html":{}}}],["https://github.com/ton",{"_index":2069,"title":{},"body":{"index.html":{}}}],["humide",{"_index":276,"title":{},"body":{"components/AdminPageComponent.html":{},"components/UserPageComponent.html":{}}}],["humidit",{"_index":249,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"injectables/CapteurDataService.html":{},"components/UserPageComponent.html":{},"index.html":{}}}],["humidite",{"_index":82,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"injectables/CapteurDataService.html":{},"components/UserPageComponent.html":{}}}],["humiditedata",{"_index":83,"title":{},"body":{"components/AdminPageComponent.html":{},"components/UserPageComponent.html":{}}}],["humidités",{"_index":444,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["i.fas.fa",{"_index":1215,"title":{},"body":{"components/HeaderComponent.html":{}}}],["ici",{"_index":2111,"title":{},"body":{"miscellaneous/variables.html":{}}}],["icon",{"_index":969,"title":{},"body":{"components/HeaderComponent.html":{},"components/UserPageComponent.html":{}}}],["icon.moon",{"_index":1101,"title":{},"body":{"components/HeaderComponent.html":{}}}],["icon.sun",{"_index":1099,"title":{},"body":{"components/HeaderComponent.html":{}}}],["icones",{"_index":1182,"title":{},"body":{"components/HeaderComponent.html":{}}}],["icône",{"_index":1204,"title":{},"body":{"components/HeaderComponent.html":{}}}],["icônes",{"_index":1793,"title":{},"body":{"components/UserPageComponent.html":{}}}],["id",{"_index":772,"title":{},"body":{"injectables/CollecteService.html":{},"injectables/LogsApiService.html":{},"injectables/UserApiService.html":{}}}],["id_users",{"_index":1307,"title":{},"body":{"components/LogsComponent.html":{}}}],["identifier",{"_index":1885,"title":{},"body":{"coverage.html":{}}}],["il",{"_index":274,"title":{},"body":{"components/AdminPageComponent.html":{},"components/UserPageComponent.html":{},"index.html":{}}}],["image",{"_index":1071,"title":{},"body":{"components/HeaderComponent.html":{},"components/UserPageComponent.html":{}}}],["immédiate",{"_index":1460,"title":{},"body":{"injectables/SocketService.html":{}}}],["implements",{"_index":41,"title":{},"body":{"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"components/MyAccountComponent.html":{},"interfaces/User.html":{},"guards/UserGuard.html":{},"components/UserPageComponent.html":{}}}],["implique",{"_index":2001,"title":{},"body":{"index.html":{}}}],["import",{"_index":31,"title":{},"body":{"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/CapteurData.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"injectables/CapteurDataService.html":{},"injectables/CaptureService.html":{},"injectables/CollecteService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/LogsApiService.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"components/MyAccountComponent.html":{},"components/RegisterComponent.html":{},"injectables/SocketService.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"guards/UserGuard.html":{},"components/UserPageComponent.html":{},"injectables/UserService.html":{}}}],["important",{"_index":544,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/UserPageComponent.html":{}}}],["importation",{"_index":834,"title":{},"body":{"components/FooterComponent.html":{},"injectables/UserService.html":{}}}],["importer",{"_index":1837,"title":{},"body":{"injectables/UserService.html":{}}}],["importez",{"_index":129,"title":{},"body":{"components/AdminPageComponent.html":{},"injectables/UserService.html":{}}}],["imports",{"_index":70,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/AppComponent.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"components/MyAccountComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserPageComponent.html":{}}}],["impossible",{"_index":226,"title":{},"body":{"components/AdminPageComponent.html":{},"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"components/UserPageComponent.html":{}}}],["imprévue",{"_index":1733,"title":{},"body":{"injectables/UserApiService.html":{}}}],["inattendu",{"_index":1708,"title":{},"body":{"injectables/UserApiService.html":{}}}],["inattendue",{"_index":805,"title":{},"body":{"injectables/CollecteService.html":{},"injectables/UserApiService.html":{}}}],["inbox",{"_index":1436,"title":{},"body":{"components/MyAccountComponent.html":{}}}],["incluent",{"_index":1252,"title":{},"body":{"injectables/LogsApiService.html":{}}}],["inconnue",{"_index":1698,"title":{},"body":{"injectables/UserApiService.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/CapteurData.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"injectables/CapteurDataService.html":{},"injectables/CaptureService.html":{},"injectables/CollecteService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/LogsApiService.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"components/MyAccountComponent.html":{},"injectables/SocketService.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"guards/UserGuard.html":{},"components/UserPageComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/CapteurData.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"injectables/CapteurDataService.html":{},"injectables/CaptureService.html":{},"injectables/CollecteService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/LogsApiService.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"components/MyAccountComponent.html":{},"components/RegisterComponent.html":{},"injectables/SocketService.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"guards/UserGuard.html":{},"components/UserPageComponent.html":{},"injectables/UserService.html":{}}}],["informations",{"_index":685,"title":{},"body":{"injectables/AuthService.html":{}}}],["inférieur",{"_index":287,"title":{},"body":{"components/AdminPageComponent.html":{},"components/UserPageComponent.html":{}}}],["initial",{"_index":931,"title":{},"body":{"components/HeaderComponent.html":{}}}],["initialisation",{"_index":404,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"injectables/SocketService.html":{}}}],["injectable",{"_index":32,"title":{"injectables/AuthService.html":{},"injectables/CapteurDataService.html":{},"injectables/CaptureService.html":{},"injectables/CollecteService.html":{},"injectables/LogsApiService.html":{},"injectables/SocketService.html":{},"injectables/UserApiService.html":{},"injectables/UserService.html":{}},"body":{"guards/AdminGuard.html":{},"injectables/AuthService.html":{},"interfaces/CapteurData.html":{},"injectables/CapteurDataService.html":{},"injectables/CaptureService.html":{},"injectables/CollecteService.html":{},"injectables/LogsApiService.html":{},"injectables/SocketService.html":{},"injectables/UserApiService.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":612,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CapteurDataService.html":{},"injectables/CaptureService.html":{},"injectables/CollecteService.html":{},"injectables/LogsApiService.html":{},"injectables/SocketService.html":{},"injectables/UserApiService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injectiontoken('baseurl",{"_index":2100,"title":{},"body":{"miscellaneous/variables.html":{}}}],["input",{"_index":1133,"title":{},"body":{"components/HeaderComponent.html":{},"components/LogsComponent.html":{}}}],["input.form",{"_index":1167,"title":{},"body":{"components/HeaderComponent.html":{}}}],["input.is",{"_index":1202,"title":{},"body":{"components/HeaderComponent.html":{}}}],["input::placeholder",{"_index":1362,"title":{},"body":{"components/LogsComponent.html":{}}}],["input:focus",{"_index":1364,"title":{},"body":{"components/LogsComponent.html":{}}}],["inscription",{"_index":1699,"title":{},"body":{"injectables/UserApiService.html":{}}}],["inscrire",{"_index":1588,"title":{},"body":{"interfaces/User.html":{}}}],["inscrit",{"_index":1592,"title":{},"body":{"interfaces/User.html":{},"injectables/UserApiService.html":{}}}],["inset",{"_index":1357,"title":{},"body":{"components/LogsComponent.html":{}}}],["inside",{"_index":1092,"title":{},"body":{"components/HeaderComponent.html":{}}}],["install",{"_index":2078,"title":{},"body":{"index.html":{}}}],["installation",{"_index":2048,"title":{},"body":{"index.html":{}}}],["installer",{"_index":2073,"title":{},"body":{"index.html":{}}}],["instance",{"_index":1249,"title":{},"body":{"injectables/LogsApiService.html":{},"injectables/UserApiService.html":{}}}],["instanceof",{"_index":594,"title":{},"body":{"components/AppComponent.html":{},"injectables/UserApiService.html":{}}}],["interface",{"_index":380,"title":{"interfaces/CapteurData.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"interfaces/User.html":{}},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"injectables/CapteurDataService.html":{},"interfaces/User.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":686,"title":{},"body":{"interfaces/CapteurData.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"interfaces/User.html":{},"overview.html":{}}}],["intervalles",{"_index":2003,"title":{},"body":{"index.html":{}}}],["intl.datetimeformat('en",{"_index":199,"title":{},"body":{"components/AdminPageComponent.html":{},"components/UserPageComponent.html":{}}}],["intl.datetimeformatoptions",{"_index":182,"title":{},"body":{"components/AdminPageComponent.html":{},"components/UserPageComponent.html":{}}}],["invalid",{"_index":1125,"title":{},"body":{"components/HeaderComponent.html":{}}}],["invalide",{"_index":1610,"title":{},"body":{"interfaces/User.html":{}}}],["invalides",{"_index":1716,"title":{},"body":{"injectables/UserApiService.html":{}}}],["io",{"_index":730,"title":{},"body":{"injectables/CaptureService.html":{},"injectables/SocketService.html":{},"dependencies.html":{}}}],["io('http://localhost:3000",{"_index":738,"title":{},"body":{"injectables/CaptureService.html":{}}}],["io('http://localhost:5001",{"_index":1461,"title":{},"body":{"injectables/SocketService.html":{}}}],["iot",{"_index":1973,"title":{},"body":{"index.html":{}}}],["iot.git",{"_index":2071,"title":{},"body":{"index.html":{}}}],["isadmin",{"_index":618,"title":{},"body":{"injectables/AuthService.html":{},"components/MenuComponent.html":{},"injectables/UserService.html":{}}}],["isadminuser",{"_index":614,"title":{},"body":{"injectables/AuthService.html":{}}}],["isdarkmode",{"_index":861,"title":{},"body":{"components/HeaderComponent.html":{}}}],["isinvalid",{"_index":868,"title":{},"body":{"components/HeaderComponent.html":{}}}],["isinvalid(controlname",{"_index":888,"title":{},"body":{"components/HeaderComponent.html":{}}}],["isloading",{"_index":1500,"title":{},"body":{"interfaces/User.html":{}}}],["isloggedin",{"_index":619,"title":{},"body":{"injectables/AuthService.html":{},"components/MenuComponent.html":{},"injectables/UserService.html":{}}}],["ismodalvisible",{"_index":862,"title":{},"body":{"components/HeaderComponent.html":{}}}],["iso",{"_index":1242,"title":{},"body":{"injectables/LogsApiService.html":{}}}],["ispasswordmodalvisible",{"_index":863,"title":{},"body":{"components/HeaderComponent.html":{}}}],["isstable",{"_index":1470,"title":{},"body":{"injectables/SocketService.html":{}}}],["issubmitting",{"_index":1532,"title":{},"body":{"interfaces/User.html":{}}}],["isuser",{"_index":1378,"title":{},"body":{"components/MenuComponent.html":{},"injectables/UserService.html":{}}}],["item",{"_index":535,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/UserPageComponent.html":{}}}],["item.bg",{"_index":549,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{}}}],["item.date",{"_index":485,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["item.heure",{"_index":486,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["item.humidite",{"_index":490,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["item.temperature",{"_index":488,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["item.text",{"_index":552,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{}}}],["items",{"_index":1079,"title":{},"body":{"components/HeaderComponent.html":{}}}],["jan",{"_index":1863,"title":{},"body":{"injectables/UserService.html":{}}}],["jeudi",{"_index":452,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["jour",{"_index":386,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"injectables/AuthService.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"injectables/UserService.html":{}}}],["journalière",{"_index":796,"title":{},"body":{"injectables/CollecteService.html":{}}}],["journalières",{"_index":788,"title":{},"body":{"injectables/CollecteService.html":{}}}],["journée",{"_index":155,"title":{},"body":{"components/AdminPageComponent.html":{},"index.html":{}}}],["jours",{"_index":456,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["json.parse(userdata",{"_index":973,"title":{},"body":{"components/HeaderComponent.html":{}}}],["json.stringify(response.user",{"_index":1846,"title":{},"body":{"injectables/UserService.html":{}}}],["justify",{"_index":850,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{}}}],["key",{"_index":483,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"components/LogsComponent.html":{},"interfaces/User.html":{}}}],["khalifa",{"_index":2061,"title":{},"body":{"index.html":{}}}],["l'affichage",{"_index":590,"title":{},"body":{"components/AppComponent.html":{}}}],["l'animation",{"_index":1043,"title":{},"body":{"components/HeaderComponent.html":{}}}],["l'api",{"_index":144,"title":{},"body":{"components/AdminPageComponent.html":{},"components/LogsComponent.html":{},"injectables/UserApiService.html":{}}}],["l'application",{"_index":1464,"title":{},"body":{"injectables/SocketService.html":{},"index.html":{}}}],["l'email",{"_index":643,"title":{},"body":{"injectables/AuthService.html":{},"components/HeaderComponent.html":{}}}],["l'endpoint",{"_index":678,"title":{},"body":{"injectables/AuthService.html":{}}}],["l'entête",{"_index":1119,"title":{},"body":{"components/HeaderComponent.html":{}}}],["l'envoi",{"_index":1570,"title":{},"body":{"interfaces/User.html":{}}}],["l'erreur",{"_index":791,"title":{},"body":{"injectables/CollecteService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["l'error",{"_index":1739,"title":{},"body":{"injectables/UserApiService.html":{}}}],["l'heure",{"_index":169,"title":{},"body":{"components/AdminPageComponent.html":{},"components/UserPageComponent.html":{}}}],["l'humidit",{"_index":1977,"title":{},"body":{"index.html":{}}}],["l'icône",{"_index":1095,"title":{},"body":{"components/HeaderComponent.html":{}}}],["l'id",{"_index":787,"title":{},"body":{"injectables/CollecteService.html":{},"injectables/UserApiService.html":{}}}],["l'image",{"_index":1531,"title":{},"body":{"interfaces/User.html":{},"components/UserPageComponent.html":{}}}],["l'input",{"_index":1353,"title":{},"body":{"components/LogsComponent.html":{}}}],["l'instance",{"_index":639,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CollecteService.html":{},"injectables/UserApiService.html":{},"injectables/UserService.html":{}}}],["l'interface",{"_index":2017,"title":{},"body":{"index.html":{}}}],["l'objet",{"_index":1648,"title":{},"body":{"interfaces/User.html":{}}}],["l'url",{"_index":596,"title":{},"body":{"components/AppComponent.html":{},"injectables/CaptureService.html":{},"injectables/CollecteService.html":{}}}],["l'utilisateur",{"_index":409,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"injectables/AuthService.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"components/HeaderComponent.html":{},"injectables/LogsApiService.html":{},"components/MenuComponent.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"injectables/UserService.html":{}}}],["l'élément",{"_index":397,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["l'état",{"_index":706,"title":{},"body":{"interfaces/CapteurData.html":{},"injectables/CapteurDataService.html":{}}}],["l'œil",{"_index":1205,"title":{},"body":{"components/HeaderComponent.html":{}}}],["l\\'allumage",{"_index":254,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["l\\'api",{"_index":422,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"injectables/UserService.html":{}}}],["l\\'extinction",{"_index":258,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["l\\'inscription",{"_index":1728,"title":{},"body":{"injectables/UserApiService.html":{}}}],["l\\'utilisateur",{"_index":1218,"title":{},"body":{"components/HeaderComponent.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{}}}],["la",{"_index":154,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"injectables/AuthService.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"injectables/CollecteService.html":{},"components/HeaderComponent.html":{},"injectables/LogsApiService.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"injectables/SocketService.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"components/UserPageComponent.html":{},"injectables/UserService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["label",{"_index":458,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["labels",{"_index":448,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["lancer",{"_index":1707,"title":{},"body":{"injectables/UserApiService.html":{},"index.html":{}}}],["laquelle",{"_index":1286,"title":{},"body":{"components/LogsComponent.html":{}}}],["later",{"_index":1504,"title":{},"body":{"interfaces/User.html":{}}}],["latestdata",{"_index":163,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["latestdata.date",{"_index":172,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["latestdata.heure",{"_index":173,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["latestdata.humidite",{"_index":177,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["latestdata.temperature",{"_index":175,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["layout",{"_index":608,"title":{},"body":{"components/AppComponent.html":{}}}],["lcd",{"_index":1985,"title":{},"body":{"index.html":{}}}],["le",{"_index":151,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"injectables/AuthService.html":{},"interfaces/CapteurData.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"injectables/CapteurDataService.html":{},"injectables/CollecteService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/LogsApiService.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"injectables/SocketService.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"components/UserPageComponent.html":{},"injectables/UserService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["left",{"_index":1107,"title":{},"body":{"components/HeaderComponent.html":{},"components/UserPageComponent.html":{}}}],["legend",{"_index":296,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"components/MyAccountComponent.html":{},"components/RegisterComponent.html":{},"components/UserPageComponent.html":{}}}],["les",{"_index":135,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/CapteurData.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"injectables/CapteurDataService.html":{},"injectables/CaptureService.html":{},"injectables/CollecteService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/LogsApiService.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"components/UserPageComponent.html":{},"injectables/UserService.html":{},"index.html":{}}}],["lever",{"_index":1725,"title":{},"body":{"injectables/UserApiService.html":{}}}],["li",{"_index":1408,"title":{},"body":{"components/MenuComponent.html":{}}}],["lien",{"_index":1399,"title":{},"body":{"components/MenuComponent.html":{}}}],["liens",{"_index":1411,"title":{},"body":{"components/MenuComponent.html":{}}}],["light",{"_index":960,"title":{},"body":{"components/HeaderComponent.html":{}}}],["ligne",{"_index":1785,"title":{},"body":{"components/UserPageComponent.html":{}}}],["limit",{"_index":341,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"injectables/CapteurDataService.html":{}}}],["limit.tostring",{"_index":714,"title":{},"body":{"interfaces/CapteurData.html":{},"injectables/CapteurDataService.html":{}}}],["line",{"_index":447,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["lisibilit",{"_index":1120,"title":{},"body":{"components/HeaderComponent.html":{}}}],["lisible",{"_index":1113,"title":{},"body":{"components/HeaderComponent.html":{}}}],["list",{"_index":533,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/HeaderComponent.html":{},"components/MenuComponent.html":{},"components/UserPageComponent.html":{}}}],["liste",{"_index":507,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/LogsComponent.html":{},"interfaces/User.html":{}}}],["listentorealtimedata",{"_index":727,"title":{},"body":{"injectables/CaptureService.html":{}}}],["literal",{"_index":368,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/HeaderComponent.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{}}}],["loaddata",{"_index":347,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["loading",{"_index":1148,"title":{},"body":{"components/HeaderComponent.html":{}}}],["loaduserdata",{"_index":869,"title":{},"body":{"components/HeaderComponent.html":{}}}],["locale",{"_index":1632,"title":{},"body":{"interfaces/User.html":{}}}],["localement",{"_index":680,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["localstorage.getitem('currentuser",{"_index":972,"title":{},"body":{"components/HeaderComponent.html":{},"injectables/UserService.html":{}}}],["localstorage.getitem('theme",{"_index":950,"title":{},"body":{"components/HeaderComponent.html":{}}}],["localstorage.removeitem('currentuser",{"_index":1852,"title":{},"body":{"injectables/UserService.html":{}}}],["localstorage.setitem('currentuser",{"_index":1845,"title":{},"body":{"injectables/UserService.html":{}}}],["localstorage.setitem('theme",{"_index":961,"title":{},"body":{"components/HeaderComponent.html":{}}}],["locaux",{"_index":1980,"title":{},"body":{"index.html":{}}}],["log",{"_index":1343,"title":{},"body":{"components/LogsComponent.html":{},"components/MyAccountComponent.html":{},"injectables/UserService.html":{}}}],["log.action",{"_index":1340,"title":{},"body":{"components/LogsComponent.html":{}}}],["log.action.tolowercase().includes(term",{"_index":1334,"title":{},"body":{"components/LogsComponent.html":{}}}],["log.date",{"_index":1337,"title":{},"body":{"components/LogsComponent.html":{}}}],["log.heure",{"_index":1339,"title":{},"body":{"components/LogsComponent.html":{}}}],["log.username",{"_index":1341,"title":{},"body":{"components/LogsComponent.html":{}}}],["log.username.tolowercase().includes(term",{"_index":1335,"title":{},"body":{"components/LogsComponent.html":{}}}],["loggedin",{"_index":615,"title":{},"body":{"injectables/AuthService.html":{}}}],["login",{"_index":604,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{}}}],["login'},{'name",{"_index":317,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"components/MyAccountComponent.html":{},"components/RegisterComponent.html":{},"components/UserPageComponent.html":{}}}],["login(email",{"_index":627,"title":{},"body":{"injectables/AuthService.html":{}}}],["logincomponent",{"_index":316,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"components/MyAccountComponent.html":{},"components/RegisterComponent.html":{},"components/UserPageComponent.html":{},"coverage.html":{}}}],["logindata",{"_index":646,"title":{},"body":{"injectables/AuthService.html":{}}}],["logindata.email",{"_index":647,"title":{},"body":{"injectables/AuthService.html":{}}}],["logindata.password",{"_index":648,"title":{},"body":{"injectables/AuthService.html":{}}}],["logindata.secretcode",{"_index":649,"title":{},"body":{"injectables/AuthService.html":{}}}],["loginwithemail",{"_index":1806,"title":{},"body":{"injectables/UserService.html":{}}}],["loginwithemail(email",{"_index":1820,"title":{},"body":{"injectables/UserService.html":{}}}],["loginwithsecretcode",{"_index":1807,"title":{},"body":{"injectables/UserService.html":{}}}],["loginwithsecretcode(secretcode",{"_index":1822,"title":{},"body":{"injectables/UserService.html":{}}}],["logique",{"_index":167,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["logo",{"_index":1070,"title":{},"body":{"components/HeaderComponent.html":{}}}],["logout",{"_index":620,"title":{},"body":{"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"injectables/UserService.html":{}}}],["logs",{"_index":1250,"title":{},"body":{"injectables/LogsApiService.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{}}}],["logs'},{'name",{"_index":319,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"components/MyAccountComponent.html":{},"components/RegisterComponent.html":{},"components/UserPageComponent.html":{}}}],["logs.component.css",{"_index":1263,"title":{},"body":{"components/LogsComponent.html":{}}}],["logs.component.html",{"_index":1264,"title":{},"body":{"components/LogsComponent.html":{}}}],["logsapiservice",{"_index":1219,"title":{"injectables/LogsApiService.html":{}},"body":{"injectables/LogsApiService.html":{},"components/LogsComponent.html":{},"coverage.html":{}}}],["logscomponent",{"_index":318,"title":{"components/LogsComponent.html":{}},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"components/MyAccountComponent.html":{},"components/RegisterComponent.html":{},"components/UserPageComponent.html":{},"coverage.html":{}}}],["logsservice",{"_index":1275,"title":{},"body":{"components/LogsComponent.html":{}}}],["lors",{"_index":223,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"injectables/AuthService.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"injectables/CollecteService.html":{},"injectables/LogsApiService.html":{},"components/MenuComponent.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"components/UserPageComponent.html":{},"injectables/UserService.html":{}}}],["lorsque",{"_index":1210,"title":{},"body":{"components/HeaderComponent.html":{}}}],["lumière",{"_index":1372,"title":{},"body":{"components/LogsComponent.html":{}}}],["lundi",{"_index":449,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["légère",{"_index":1420,"title":{},"body":{"components/MenuComponent.html":{}}}],["légèrement",{"_index":1366,"title":{},"body":{"components/LogsComponent.html":{}}}],["lément",{"_index":551,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{}}}],["léments",{"_index":848,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/MenuComponent.html":{}}}],["l’humidit",{"_index":506,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{}}}],["l’inscription",{"_index":1597,"title":{},"body":{"interfaces/User.html":{}}}],["magasin",{"_index":277,"title":{},"body":{"components/AdminPageComponent.html":{},"components/UserPageComponent.html":{},"index.html":{}}}],["mail",{"_index":1609,"title":{},"body":{"interfaces/User.html":{}}}],["main",{"_index":1762,"title":{},"body":{"components/UserPageComponent.html":{}}}],["maintenant",{"_index":1253,"title":{},"body":{"injectables/LogsApiService.html":{}}}],["maison",{"_index":273,"title":{},"body":{"components/AdminPageComponent.html":{},"components/UserPageComponent.html":{}}}],["majuscule",{"_index":1061,"title":{},"body":{"components/HeaderComponent.html":{}}}],["manipulations",{"_index":938,"title":{},"body":{"components/HeaderComponent.html":{}}}],["manière",{"_index":1406,"title":{},"body":{"components/MenuComponent.html":{},"injectables/UserService.html":{}}}],["map",{"_index":1839,"title":{},"body":{"injectables/UserService.html":{}}}],["map((response",{"_index":1876,"title":{},"body":{"injectables/UserService.html":{}}}],["mardi",{"_index":450,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["margin",{"_index":511,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"components/UserPageComponent.html":{}}}],["masqu",{"_index":1211,"title":{},"body":{"components/HeaderComponent.html":{}}}],["matchesrole",{"_index":1555,"title":{},"body":{"interfaces/User.html":{}}}],["matchessearch",{"_index":1553,"title":{},"body":{"interfaces/User.html":{}}}],["matching",{"_index":54,"title":{},"body":{"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/CapteurData.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"injectables/CapteurDataService.html":{},"injectables/CaptureService.html":{},"injectables/CollecteService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/LogsApiService.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"components/MyAccountComponent.html":{},"components/RegisterComponent.html":{},"injectables/SocketService.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"guards/UserGuard.html":{},"components/UserPageComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["math.ceil(this.users.length",{"_index":1548,"title":{},"body":{"interfaces/User.html":{}}}],["math.min",{"_index":1547,"title":{},"body":{"interfaces/User.html":{}}}],["max",{"_index":1155,"title":{},"body":{"components/HeaderComponent.html":{}}}],["mensuelles",{"_index":809,"title":{},"body":{"injectables/CollecteService.html":{}}}],["menu",{"_index":844,"title":{},"body":{"components/FooterComponent.html":{},"components/MenuComponent.html":{}}}],["menu'},{'name",{"_index":321,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"components/MyAccountComponent.html":{},"components/RegisterComponent.html":{},"components/UserPageComponent.html":{}}}],["menu.component.css",{"_index":1376,"title":{},"body":{"components/MenuComponent.html":{}}}],["menu.component.html",{"_index":1377,"title":{},"body":{"components/MenuComponent.html":{}}}],["menucomponent",{"_index":320,"title":{"components/MenuComponent.html":{}},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"components/MyAccountComponent.html":{},"components/RegisterComponent.html":{},"components/UserPageComponent.html":{},"coverage.html":{}}}],["mercredi",{"_index":451,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["mergeapplicationconfig(appconfig",{"_index":2112,"title":{},"body":{"miscellaneous/variables.html":{}}}],["message",{"_index":803,"title":{},"body":{"injectables/CollecteService.html":{},"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"injectables/SocketService.html":{},"injectables/UserApiService.html":{},"injectables/UserService.html":{}}}],["messages",{"_index":1185,"title":{},"body":{"components/HeaderComponent.html":{}}}],["met",{"_index":385,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"interfaces/User.html":{}}}],["metadata",{"_index":65,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"components/MyAccountComponent.html":{},"components/RegisterComponent.html":{},"components/UserPageComponent.html":{}}}],["methods",{"_index":8,"title":{},"body":{"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"injectables/AuthService.html":{},"injectables/CapteurDataService.html":{},"injectables/CaptureService.html":{},"injectables/CollecteService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/LogsApiService.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"components/MyAccountComponent.html":{},"injectables/SocketService.html":{},"injectables/UserApiService.html":{},"guards/UserGuard.html":{},"components/UserPageComponent.html":{},"injectables/UserService.html":{}}}],["mettre",{"_index":406,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"injectables/AuthService.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"injectables/CaptureService.html":{},"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{}}}],["microcontrôleur",{"_index":2036,"title":{},"body":{"index.html":{}}}],["middle",{"_index":1349,"title":{},"body":{"components/LogsComponent.html":{}}}],["min",{"_index":1771,"title":{},"body":{"components/UserPageComponent.html":{}}}],["minimale",{"_index":1775,"title":{},"body":{"components/UserPageComponent.html":{}}}],["minute",{"_index":198,"title":{},"body":{"components/AdminPageComponent.html":{},"components/UserPageComponent.html":{}}}],["mis",{"_index":1617,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["miscellaneous",{"_index":1965,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mise",{"_index":989,"title":{},"body":{"components/HeaderComponent.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"index.html":{}}}],["mises",{"_index":1743,"title":{},"body":{"injectables/UserApiService.html":{}}}],["modal",{"_index":1034,"title":{},"body":{"components/HeaderComponent.html":{},"interfaces/User.html":{}}}],["modalservice",{"_index":880,"title":{},"body":{"components/HeaderComponent.html":{},"interfaces/User.html":{}}}],["mode",{"_index":932,"title":{},"body":{"components/HeaderComponent.html":{}}}],["mode:hover",{"_index":1081,"title":{},"body":{"components/HeaderComponent.html":{}}}],["modification",{"_index":2019,"title":{},"body":{"index.html":{}}}],["modules",{"_index":2084,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["modèle",{"_index":1494,"title":{},"body":{"interfaces/User.html":{}}}],["moins",{"_index":1058,"title":{},"body":{"components/HeaderComponent.html":{}}}],["mois",{"_index":188,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"injectables/CollecteService.html":{},"components/UserPageComponent.html":{}}}],["mongodb",{"_index":2035,"title":{},"body":{"index.html":{}}}],["month",{"_index":185,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"injectables/CapteurDataService.html":{},"components/UserPageComponent.html":{}}}],["month.tostring",{"_index":698,"title":{},"body":{"interfaces/CapteurData.html":{},"injectables/CapteurDataService.html":{}}}],["moon",{"_index":968,"title":{},"body":{"components/HeaderComponent.html":{}}}],["mot",{"_index":996,"title":{},"body":{"components/HeaderComponent.html":{},"injectables/UserService.html":{}}}],["mots",{"_index":933,"title":{},"body":{"components/HeaderComponent.html":{},"injectables/UserService.html":{}}}],["mouhamadou",{"_index":2055,"title":{},"body":{"index.html":{}}}],["moustapha",{"_index":2056,"title":{},"body":{"index.html":{}}}],["moyenne",{"_index":459,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"index.html":{}}}],["moyennes",{"_index":445,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"injectables/CollecteService.html":{}}}],["ms",{"_index":1088,"title":{},"body":{"components/HeaderComponent.html":{},"components/UserPageComponent.html":{}}}],["myaccountcomponent",{"_index":322,"title":{"components/MyAccountComponent.html":{}},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"components/MyAccountComponent.html":{},"components/RegisterComponent.html":{},"components/UserPageComponent.html":{},"coverage.html":{}}}],["méthode",{"_index":259,"title":{},"body":{"components/AdminPageComponent.html":{},"injectables/AuthService.html":{},"interfaces/CapteurData.html":{},"injectables/CapteurDataService.html":{},"injectables/CaptureService.html":{},"components/HeaderComponent.html":{},"components/MenuComponent.html":{},"injectables/SocketService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"index.html":{}}}],["même",{"_index":1216,"title":{},"body":{"components/HeaderComponent.html":{},"components/MenuComponent.html":{}}}],["n'est",{"_index":799,"title":{},"body":{"injectables/CollecteService.html":{}}}],["n\\'est",{"_index":1478,"title":{},"body":{"injectables/SocketService.html":{}}}],["name",{"_index":18,"title":{},"body":{"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CapteurDataService.html":{},"injectables/CollecteService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/LogsApiService.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"components/MyAccountComponent.html":{},"components/RegisterComponent.html":{},"injectables/SocketService.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"guards/UserGuard.html":{},"components/UserPageComponent.html":{},"injectables/UserService.html":{}}}],["nav.menu",{"_index":1401,"title":{},"body":{"components/MenuComponent.html":{}}}],["navbar",{"_index":1087,"title":{},"body":{"components/HeaderComponent.html":{}}}],["navigationend",{"_index":582,"title":{},"body":{"components/AppComponent.html":{}}}],["naviguer",{"_index":2081,"title":{},"body":{"index.html":{}}}],["nbsp",{"_index":281,"title":{},"body":{"components/AdminPageComponent.html":{},"components/UserPageComponent.html":{}}}],["ndiawar",{"_index":2059,"title":{},"body":{"index.html":{}}}],["ne",{"_index":1066,"title":{},"body":{"components/HeaderComponent.html":{},"injectables/UserService.html":{}}}],["necessary",{"_index":1514,"title":{},"body":{"interfaces/User.html":{}}}],["needed",{"_index":1508,"title":{},"body":{"interfaces/User.html":{}}}],["nettoyer",{"_index":1594,"title":{},"body":{"interfaces/User.html":{}}}],["new",{"_index":179,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"injectables/AuthService.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"injectables/CaptureService.html":{},"components/HeaderComponent.html":{},"injectables/SocketService.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"components/UserPageComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newpassword",{"_index":944,"title":{},"body":{"components/HeaderComponent.html":{},"injectables/UserService.html":{}}}],["newuser",{"_index":1522,"title":{},"body":{"interfaces/User.html":{}}}],["next",{"_index":202,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"components/HeaderComponent.html":{},"components/UserPageComponent.html":{}}}],["nextpage",{"_index":348,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["ng",{"_index":926,"title":{},"body":{"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"interfaces/User.html":{},"dependencies.html":{},"index.html":{}}}],["ngafterviewinit",{"_index":349,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["ngbmodal",{"_index":881,"title":{},"body":{"components/HeaderComponent.html":{},"interfaces/User.html":{}}}],["ngbpaginationmodule",{"_index":1262,"title":{},"body":{"components/LogsComponent.html":{},"interfaces/User.html":{}}}],["ngif",{"_index":587,"title":{},"body":{"components/AppComponent.html":{}}}],["ngmodule",{"_index":131,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["ngoninit",{"_index":90,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"components/MyAccountComponent.html":{},"interfaces/User.html":{},"components/UserPageComponent.html":{}}}],["ngx",{"_index":1956,"title":{},"body":{"dependencies.html":{}}}],["niveau",{"_index":278,"title":{},"body":{"components/AdminPageComponent.html":{},"components/UserPageComponent.html":{}}}],["node.js",{"_index":2034,"title":{},"body":{"index.html":{}}}],["noir",{"_index":545,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/HeaderComponent.html":{}}}],["nolayoutroutes",{"_index":603,"title":{},"body":{"components/AppComponent.html":{}}}],["nolayoutroutes.includes(cleanurl",{"_index":610,"title":{},"body":{"components/AppComponent.html":{}}}],["nom",{"_index":1048,"title":{},"body":{"components/HeaderComponent.html":{},"components/LogsComponent.html":{}}}],["nombre",{"_index":1305,"title":{},"body":{"components/LogsComponent.html":{}}}],["non",{"_index":1730,"title":{},"body":{"injectables/UserApiService.html":{}}}],["none",{"_index":1131,"title":{},"body":{"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"components/UserPageComponent.html":{}}}],["normalisez",{"_index":595,"title":{},"body":{"components/AppComponent.html":{}}}],["nouveau",{"_index":1057,"title":{},"body":{"components/HeaderComponent.html":{}}}],["nouveaux",{"_index":1873,"title":{},"body":{"injectables/UserService.html":{}}}],["nouvelle",{"_index":935,"title":{},"body":{"components/HeaderComponent.html":{}}}],["nov",{"_index":193,"title":{},"body":{"components/AdminPageComponent.html":{},"components/UserPageComponent.html":{}}}],["now",{"_index":178,"title":{},"body":{"components/AdminPageComponent.html":{},"components/UserPageComponent.html":{}}}],["nowrap",{"_index":1782,"title":{},"body":{"components/UserPageComponent.html":{}}}],["npm",{"_index":2077,"title":{},"body":{"index.html":{}}}],["null",{"_index":382,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"injectables/AuthService.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"injectables/CollecteService.html":{},"components/HeaderComponent.html":{},"interfaces/User.html":{}}}],["number",{"_index":119,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"injectables/CapteurDataService.html":{},"injectables/CollecteService.html":{},"components/FooterComponent.html":{},"components/LogsComponent.html":{},"interfaces/User.html":{},"components/UserPageComponent.html":{}}}],["numeric",{"_index":184,"title":{},"body":{"components/AdminPageComponent.html":{},"components/UserPageComponent.html":{}}}],["numéro",{"_index":1612,"title":{},"body":{"interfaces/User.html":{}}}],["nécessaire",{"_index":588,"title":{},"body":{"components/AppComponent.html":{},"injectables/CaptureService.html":{},"interfaces/User.html":{},"components/UserPageComponent.html":{}}}],["object",{"_index":2104,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.values(grouped",{"_index":493,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["objectif",{"_index":1974,"title":{},"body":{"index.html":{}}}],["obligatoires",{"_index":1605,"title":{},"body":{"interfaces/User.html":{}}}],["observable",{"_index":28,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AuthService.html":{},"interfaces/CapteurData.html":{},"injectables/CapteurDataService.html":{},"injectables/CaptureService.html":{},"injectables/SocketService.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["observable((observer",{"_index":744,"title":{},"body":{"injectables/CaptureService.html":{},"injectables/SocketService.html":{},"injectables/UserService.html":{}}}],["observable(observer",{"_index":1870,"title":{},"body":{"injectables/UserService.html":{}}}],["observer.error",{"_index":1872,"title":{},"body":{"injectables/UserService.html":{}}}],["observer.error(error",{"_index":751,"title":{},"body":{"injectables/CaptureService.html":{}}}],["observer.error(errormessage",{"_index":1871,"title":{},"body":{"injectables/UserService.html":{}}}],["observer.next(data",{"_index":746,"title":{},"body":{"injectables/CaptureService.html":{},"injectables/SocketService.html":{}}}],["oldpassword",{"_index":1811,"title":{},"body":{"injectables/UserService.html":{}}}],["ondeleteuser(userid",{"_index":1624,"title":{},"body":{"interfaces/User.html":{}}}],["onfantoggle",{"_index":91,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["onfantoggle(event",{"_index":108,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["oninit",{"_index":64,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"components/MyAccountComponent.html":{},"interfaces/User.html":{},"components/UserPageComponent.html":{}}}],["onmessage",{"_index":1447,"title":{},"body":{"injectables/SocketService.html":{}}}],["onmessage(event",{"_index":1454,"title":{},"body":{"injectables/SocketService.html":{}}}],["onphotoselected",{"_index":870,"title":{},"body":{"components/HeaderComponent.html":{}}}],["onphotoselected(event",{"_index":894,"title":{},"body":{"components/HeaderComponent.html":{},"interfaces/User.html":{}}}],["onsubmit",{"_index":871,"title":{},"body":{"components/HeaderComponent.html":{}}}],["openfileselector",{"_index":872,"title":{},"body":{"components/HeaderComponent.html":{}}}],["openmodal",{"_index":1534,"title":{},"body":{"interfaces/User.html":{}}}],["openmodalupdate",{"_index":1661,"title":{},"body":{"interfaces/User.html":{}}}],["optional",{"_index":20,"title":{},"body":{"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CapteurDataService.html":{},"injectables/CollecteService.html":{},"components/HeaderComponent.html":{},"injectables/LogsApiService.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"components/MyAccountComponent.html":{},"injectables/SocketService.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"guards/UserGuard.html":{},"components/UserPageComponent.html":{},"injectables/UserService.html":{}}}],["options",{"_index":181,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"components/UserPageComponent.html":{},"miscellaneous/variables.html":{}}}],["options).format(now",{"_index":200,"title":{},"body":{"components/AdminPageComponent.html":{},"components/UserPageComponent.html":{}}}],["opérateurs",{"_index":1840,"title":{},"body":{"injectables/UserService.html":{}}}],["ordre",{"_index":1308,"title":{},"body":{"components/LogsComponent.html":{}}}],["ou",{"_index":156,"title":{},"body":{"components/AdminPageComponent.html":{},"injectables/AuthService.html":{},"injectables/UserApiService.html":{},"components/UserPageComponent.html":{},"index.html":{}}}],["out",{"_index":1439,"title":{},"body":{"components/MyAccountComponent.html":{}}}],["outils",{"_index":2042,"title":{},"body":{"index.html":{}}}],["outline",{"_index":1132,"title":{},"body":{"components/HeaderComponent.html":{},"components/LogsComponent.html":{}}}],["ouvre",{"_index":1035,"title":{},"body":{"components/HeaderComponent.html":{}}}],["ouvrir",{"_index":1640,"title":{},"body":{"interfaces/User.html":{}}}],["overview",{"_index":2085,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":840,"title":{},"body":{"components/FooterComponent.html":{},"components/UserPageComponent.html":{}}}],["package",{"_index":1920,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":536,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"components/UserPageComponent.html":{}}}],["page",{"_index":68,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"injectables/CapteurDataService.html":{},"injectables/CollecteService.html":{},"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"components/UserPageComponent.html":{}}}],["page'},{'name",{"_index":308,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"components/MyAccountComponent.html":{},"components/RegisterComponent.html":{},"components/UserPageComponent.html":{}}}],["page.component.css",{"_index":77,"title":{},"body":{"components/AdminPageComponent.html":{},"components/UserPageComponent.html":{}}}],["page.component.html",{"_index":75,"title":{},"body":{"components/AdminPageComponent.html":{},"components/UserPageComponent.html":{}}}],["page.component.ts",{"_index":63,"title":{},"body":{"components/AdminPageComponent.html":{},"components/UserPageComponent.html":{},"coverage.html":{}}}],["page.component.ts:106",{"_index":112,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["page.component.ts:117",{"_index":111,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["page.component.ts:131",{"_index":109,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["page.component.ts:15",{"_index":1759,"title":{},"body":{"components/UserPageComponent.html":{}}}],["page.component.ts:16",{"_index":1755,"title":{},"body":{"components/UserPageComponent.html":{}}}],["page.component.ts:17",{"_index":1758,"title":{},"body":{"components/UserPageComponent.html":{}}}],["page.component.ts:18",{"_index":1757,"title":{},"body":{"components/UserPageComponent.html":{}}}],["page.component.ts:19",{"_index":1756,"title":{},"body":{"components/UserPageComponent.html":{}}}],["page.component.ts:20",{"_index":118,"title":{},"body":{"components/AdminPageComponent.html":{},"components/UserPageComponent.html":{}}}],["page.component.ts:21",{"_index":124,"title":{},"body":{"components/AdminPageComponent.html":{},"components/UserPageComponent.html":{}}}],["page.component.ts:22",{"_index":116,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["page.component.ts:23",{"_index":123,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["page.component.ts:24",{"_index":121,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["page.component.ts:25",{"_index":117,"title":{},"body":{"components/AdminPageComponent.html":{},"components/UserPageComponent.html":{}}}],["page.component.ts:26",{"_index":122,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["page.component.ts:27",{"_index":98,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["page.component.ts:31",{"_index":1754,"title":{},"body":{"components/UserPageComponent.html":{}}}],["page.component.ts:32",{"_index":107,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["page.component.ts:43",{"_index":1751,"title":{},"body":{"components/UserPageComponent.html":{}}}],["page.component.ts:50",{"_index":113,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["page.component.ts:62",{"_index":99,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["page.component.ts:63",{"_index":1753,"title":{},"body":{"components/UserPageComponent.html":{}}}],["page.component.ts:76",{"_index":1752,"title":{},"body":{"components/UserPageComponent.html":{}}}],["page.component.ts:80",{"_index":106,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["page.component.ts:93",{"_index":103,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["page.tostring",{"_index":713,"title":{},"body":{"interfaces/CapteurData.html":{},"injectables/CapteurDataService.html":{}}}],["page/admin",{"_index":62,"title":{},"body":{"components/AdminPageComponent.html":{},"coverage.html":{}}}],["page/analyse/analyse.component.ts",{"_index":332,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"coverage.html":{}}}],["page/analyse/analyse.component.ts:119",{"_index":361,"title":{},"body":{"components/AnalyseComponent.html":{}}}],["page/analyse/analyse.component.ts:120",{"_index":562,"title":{},"body":{"components/AnalyseComponent-1.html":{}}}],["page/analyse/analyse.component.ts:131",{"_index":360,"title":{},"body":{"components/AnalyseComponent.html":{}}}],["page/analyse/analyse.component.ts:132",{"_index":561,"title":{},"body":{"components/AnalyseComponent-1.html":{}}}],["page/analyse/analyse.component.ts:151",{"_index":365,"title":{},"body":{"components/AnalyseComponent.html":{}}}],["page/analyse/analyse.component.ts:152",{"_index":566,"title":{},"body":{"components/AnalyseComponent-1.html":{}}}],["page/analyse/analyse.component.ts:158",{"_index":362,"title":{},"body":{"components/AnalyseComponent.html":{}}}],["page/analyse/analyse.component.ts:159",{"_index":563,"title":{},"body":{"components/AnalyseComponent-1.html":{}}}],["page/analyse/analyse.component.ts:23",{"_index":376,"title":{},"body":{"components/AnalyseComponent.html":{}}}],["page/analyse/analyse.component.ts:24",{"_index":373,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{}}}],["page/analyse/analyse.component.ts:25",{"_index":374,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{}}}],["page/analyse/analyse.component.ts:26",{"_index":367,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{}}}],["page/analyse/analyse.component.ts:27",{"_index":369,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{}}}],["page/analyse/analyse.component.ts:28",{"_index":371,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{}}}],["page/analyse/analyse.component.ts:29",{"_index":370,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{}}}],["page/analyse/analyse.component.ts:30",{"_index":568,"title":{},"body":{"components/AnalyseComponent-1.html":{}}}],["page/analyse/analyse.component.ts:31",{"_index":354,"title":{},"body":{"components/AnalyseComponent.html":{}}}],["page/analyse/analyse.component.ts:32",{"_index":559,"title":{},"body":{"components/AnalyseComponent-1.html":{}}}],["page/analyse/analyse.component.ts:35",{"_index":364,"title":{},"body":{"components/AnalyseComponent.html":{}}}],["page/analyse/analyse.component.ts:36",{"_index":565,"title":{},"body":{"components/AnalyseComponent-1.html":{}}}],["page/analyse/analyse.component.ts:40",{"_index":363,"title":{},"body":{"components/AnalyseComponent.html":{}}}],["page/analyse/analyse.component.ts:41",{"_index":564,"title":{},"body":{"components/AnalyseComponent-1.html":{}}}],["page/analyse/analyse.component.ts:48",{"_index":366,"title":{},"body":{"components/AnalyseComponent.html":{}}}],["page/analyse/analyse.component.ts:49",{"_index":567,"title":{},"body":{"components/AnalyseComponent-1.html":{}}}],["page/analyse/analyse.component.ts:75",{"_index":358,"title":{},"body":{"components/AnalyseComponent.html":{}}}],["page/analyse/analyse.component.ts:76",{"_index":560,"title":{},"body":{"components/AnalyseComponent-1.html":{}}}],["page/user",{"_index":1750,"title":{},"body":{"components/UserPageComponent.html":{},"coverage.html":{}}}],["pagesize",{"_index":766,"title":{},"body":{"injectables/CollecteService.html":{},"components/LogsComponent.html":{},"interfaces/User.html":{}}}],["paginatedlogs",{"_index":1266,"title":{},"body":{"components/LogsComponent.html":{}}}],["paginatedusers",{"_index":1498,"title":{},"body":{"interfaces/User.html":{}}}],["pagination",{"_index":477,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"injectables/CapteurDataService.html":{},"injectables/CollecteService.html":{},"components/LogsComponent.html":{},"interfaces/User.html":{}}}],["paginés",{"_index":1289,"title":{},"body":{"components/LogsComponent.html":{}}}],["par",{"_index":740,"title":{},"body":{"injectables/CaptureService.html":{},"injectables/CollecteService.html":{},"injectables/LogsApiService.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"injectables/UserApiService.html":{},"components/UserPageComponent.html":{},"miscellaneous/variables.html":{}}}],["param",{"_index":1255,"title":{},"body":{"injectables/LogsApiService.html":{},"components/LogsComponent.html":{}}}],["parameters",{"_index":16,"title":{},"body":{"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CapteurDataService.html":{},"injectables/CollecteService.html":{},"components/HeaderComponent.html":{},"injectables/LogsApiService.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"components/MyAccountComponent.html":{},"injectables/SocketService.html":{},"injectables/UserApiService.html":{},"guards/UserGuard.html":{},"components/UserPageComponent.html":{},"injectables/UserService.html":{}}}],["params",{"_index":600,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CapteurData.html":{},"injectables/CapteurDataService.html":{},"injectables/LogsApiService.html":{}}}],["paramètre",{"_index":1690,"title":{},"body":{"injectables/UserApiService.html":{}}}],["paramètres",{"_index":504,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{}}}],["partie",{"_index":1004,"title":{},"body":{"components/HeaderComponent.html":{}}}],["pas",{"_index":1067,"title":{},"body":{"components/HeaderComponent.html":{},"injectables/SocketService.html":{},"injectables/UserService.html":{}}}],["passe",{"_index":653,"title":{},"body":{"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"injectables/UserService.html":{}}}],["passer",{"_index":1784,"title":{},"body":{"components/UserPageComponent.html":{}}}],["password",{"_index":628,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"injectables/UserService.html":{}}}],["passwordsmatch",{"_index":864,"title":{},"body":{"components/HeaderComponent.html":{}}}],["path",{"_index":1867,"title":{},"body":{"injectables/UserService.html":{}}}],["payload",{"_index":410,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["permet",{"_index":1981,"title":{},"body":{"index.html":{}}}],["petit",{"_index":1796,"title":{},"body":{"components/UserPageComponent.html":{}}}],["phoneregex",{"_index":1601,"title":{},"body":{"interfaces/User.html":{}}}],["phoneregex.test(user.telephone",{"_index":1611,"title":{},"body":{"interfaces/User.html":{}}}],["photo",{"_index":988,"title":{},"body":{"components/HeaderComponent.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"injectables/UserService.html":{}}}],["photofile",{"_index":1525,"title":{},"body":{"interfaces/User.html":{}}}],["photoinput",{"_index":865,"title":{},"body":{"components/HeaderComponent.html":{}}}],["photopreview",{"_index":1529,"title":{},"body":{"interfaces/User.html":{}}}],["pipe",{"_index":1843,"title":{},"body":{"injectables/UserService.html":{}}}],["pipe(first((isstable",{"_index":1469,"title":{},"body":{"injectables/SocketService.html":{}}}],["place",{"_index":2002,"title":{},"body":{"index.html":{}}}],["placeholder",{"_index":1363,"title":{},"body":{"components/LogsComponent.html":{}}}],["plateforme",{"_index":1976,"title":{},"body":{"index.html":{}}}],["plugin",{"_index":1949,"title":{},"body":{"dependencies.html":{}}}],["plus",{"_index":1316,"title":{},"body":{"components/LogsComponent.html":{},"injectables/UserApiService.html":{},"components/UserPageComponent.html":{}}}],["pointer",{"_index":1077,"title":{},"body":{"components/HeaderComponent.html":{},"components/LogsComponent.html":{}}}],["popperjs/core",{"_index":1938,"title":{},"body":{"dependencies.html":{}}}],["position",{"_index":1090,"title":{},"body":{"components/HeaderComponent.html":{},"components/UserPageComponent.html":{}}}],["post('http://localhost:5001/api/capteurs/weekly",{"_index":418,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["pour",{"_index":133,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/CapteurData.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"injectables/CapteurDataService.html":{},"injectables/CaptureService.html":{},"injectables/CollecteService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/LogsApiService.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"injectables/SocketService.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"components/UserPageComponent.html":{},"injectables/UserService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["pourriez",{"_index":1001,"title":{},"body":{"components/HeaderComponent.html":{}}}],["pouvez",{"_index":2106,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prenez",{"_index":150,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["previouspage",{"_index":350,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["private",{"_index":43,"title":{},"body":{"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"injectables/AuthService.html":{},"interfaces/CapteurData.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"injectables/CapteurDataService.html":{},"injectables/CaptureService.html":{},"components/HeaderComponent.html":{},"injectables/LogsApiService.html":{},"injectables/SocketService.html":{},"interfaces/User.html":{},"guards/UserGuard.html":{},"components/UserPageComponent.html":{},"injectables/UserService.html":{}}}],["produits",{"_index":1979,"title":{},"body":{"index.html":{}}}],["profil",{"_index":1037,"title":{},"body":{"components/HeaderComponent.html":{}}}],["profile",{"_index":1046,"title":{},"body":{"components/HeaderComponent.html":{}}}],["projet",{"_index":1970,"title":{},"body":{"index.html":{}}}],["promise",{"_index":29,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AuthService.html":{},"injectables/CollecteService.html":{},"injectables/LogsApiService.html":{},"injectables/UserApiService.html":{},"guards/UserGuard.html":{}}}],["properly",{"_index":1093,"title":{},"body":{"components/HeaderComponent.html":{}}}],["properties",{"_index":78,"title":{"properties.html":{}},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/CapteurData.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"injectables/CapteurDataService.html":{},"injectables/CaptureService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/LogsApiService.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"components/MyAccountComponent.html":{},"injectables/SocketService.html":{},"interfaces/User.html":{},"components/UserPageComponent.html":{},"injectables/UserService.html":{},"properties.html":{}}}],["propriét",{"_index":642,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserApiService.html":{}}}],["provideclienthydration(),providehttpclient(withfetch",{"_index":2099,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provided",{"_index":1502,"title":{},"body":{"interfaces/User.html":{}}}],["providedin",{"_index":37,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AuthService.html":{},"interfaces/CapteurData.html":{},"injectables/CapteurDataService.html":{},"injectables/CaptureService.html":{},"injectables/CollecteService.html":{},"injectables/LogsApiService.html":{},"injectables/SocketService.html":{},"injectables/UserApiService.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["providerouter(routes",{"_index":2098,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":2095,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideserverrendering",{"_index":2113,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providezonechangedetection",{"_index":2096,"title":{},"body":{"miscellaneous/variables.html":{}}}],["préparer",{"_index":1576,"title":{},"body":{"interfaces/User.html":{}}}],["prérequis",{"_index":2049,"title":{},"body":{"index.html":{}}}],["présent",{"_index":1000,"title":{},"body":{"components/HeaderComponent.html":{}}}],["prévisualisation",{"_index":1530,"title":{},"body":{"interfaces/User.html":{}}}],["prêt",{"_index":393,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["public",{"_index":829,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/UserService.html":{}}}],["puces",{"_index":1403,"title":{},"body":{"components/MenuComponent.html":{}}}],["période",{"_index":1258,"title":{},"body":{"injectables/LogsApiService.html":{}}}],["qu'elles",{"_index":213,"title":{},"body":{"components/AdminPageComponent.html":{},"components/UserPageComponent.html":{}}}],["que",{"_index":392,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"injectables/CaptureService.html":{},"components/HeaderComponent.html":{},"injectables/SocketService.html":{}}}],["query",{"_index":599,"title":{},"body":{"components/AppComponent.html":{}}}],["qui",{"_index":1993,"title":{},"body":{"index.html":{}}}],["radius",{"_index":515,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"components/UserPageComponent.html":{}}}],["range",{"_index":1257,"title":{},"body":{"injectables/LogsApiService.html":{}}}],["reactiveformsmodule",{"_index":856,"title":{},"body":{"components/HeaderComponent.html":{}}}],["reader",{"_index":1562,"title":{},"body":{"interfaces/User.html":{}}}],["reader.onload",{"_index":1564,"title":{},"body":{"interfaces/User.html":{}}}],["reader.readasdataurl(file",{"_index":1571,"title":{},"body":{"interfaces/User.html":{}}}],["readonly",{"_index":1222,"title":{},"body":{"injectables/LogsApiService.html":{}}}],["recherche",{"_index":1278,"title":{},"body":{"components/LogsComponent.html":{}}}],["rechercher",{"_index":234,"title":{},"body":{"components/AdminPageComponent.html":{},"components/UserPageComponent.html":{}}}],["recherchée",{"_index":235,"title":{},"body":{"components/AdminPageComponent.html":{},"injectables/LogsApiService.html":{},"components/UserPageComponent.html":{}}}],["redirections",{"_index":598,"title":{},"body":{"components/AppComponent.html":{}}}],["refus",{"_index":1721,"title":{},"body":{"injectables/UserApiService.html":{}}}],["register",{"_index":605,"title":{},"body":{"components/AppComponent.html":{},"components/RegisterComponent.html":{}}}],["register'},{'name",{"_index":325,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"components/MyAccountComponent.html":{},"components/RegisterComponent.html":{},"components/UserPageComponent.html":{}}}],["register.component.css",{"_index":1442,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.html",{"_index":1441,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registercomponent",{"_index":324,"title":{"components/RegisterComponent.html":{}},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"components/MyAccountComponent.html":{},"components/RegisterComponent.html":{},"components/UserPageComponent.html":{},"coverage.html":{}}}],["registermodal",{"_index":1517,"title":{},"body":{"interfaces/User.html":{}}}],["registernewuser",{"_index":1574,"title":{},"body":{"interfaces/User.html":{}}}],["registeruser",{"_index":1676,"title":{},"body":{"injectables/UserApiService.html":{},"injectables/UserService.html":{}}}],["registeruser(user",{"_index":1589,"title":{},"body":{"interfaces/User.html":{},"injectables/UserApiService.html":{}}}],["registeruser(userdata",{"_index":1825,"title":{},"body":{"injectables/UserService.html":{}}}],["rejeter",{"_index":806,"title":{},"body":{"injectables/CollecteService.html":{}}}],["relative",{"_index":1091,"title":{},"body":{"components/HeaderComponent.html":{},"injectables/LogsApiService.html":{}}}],["remplacez",{"_index":739,"title":{},"body":{"injectables/CaptureService.html":{},"components/UserPageComponent.html":{}}}],["remplis",{"_index":1607,"title":{},"body":{"interfaces/User.html":{}}}],["renderer",{"_index":884,"title":{},"body":{"components/HeaderComponent.html":{}}}],["renderer2",{"_index":885,"title":{},"body":{"components/HeaderComponent.html":{}}}],["rendre",{"_index":1112,"title":{},"body":{"components/HeaderComponent.html":{},"components/UserPageComponent.html":{}}}],["renvoie",{"_index":1742,"title":{},"body":{"injectables/UserApiService.html":{}}}],["replace",{"_index":1507,"title":{},"body":{"interfaces/User.html":{}}}],["repose",{"_index":1991,"title":{},"body":{"index.html":{}}}],["requis",{"_index":1056,"title":{},"body":{"components/HeaderComponent.html":{}}}],["requête",{"_index":415,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"injectables/AuthService.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"interfaces/User.html":{}}}],["response",{"_index":203,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"injectables/CollecteService.html":{},"components/HeaderComponent.html":{},"injectables/LogsApiService.html":{},"injectables/UserApiService.html":{},"components/UserPageComponent.html":{},"injectables/UserService.html":{}}}],["response.data",{"_index":210,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"injectables/CollecteService.html":{},"injectables/LogsApiService.html":{},"injectables/UserApiService.html":{},"components/UserPageComponent.html":{},"injectables/UserService.html":{}}}],["response.data.user",{"_index":658,"title":{},"body":{"injectables/AuthService.html":{}}}],["response.photo",{"_index":992,"title":{},"body":{"components/HeaderComponent.html":{}}}],["response.status",{"_index":1704,"title":{},"body":{"injectables/UserApiService.html":{}}}],["response.user",{"_index":1616,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["responsive",{"_index":472,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["results",{"_index":53,"title":{},"body":{"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/CapteurData.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"injectables/CapteurDataService.html":{},"injectables/CaptureService.html":{},"injectables/CollecteService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/LogsApiService.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"components/MyAccountComponent.html":{},"components/RegisterComponent.html":{},"injectables/SocketService.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"guards/UserGuard.html":{},"components/UserPageComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retourne",{"_index":1877,"title":{},"body":{"injectables/UserService.html":{}}}],["retourner",{"_index":798,"title":{},"body":{"injectables/CollecteService.html":{},"injectables/UserService.html":{}}}],["retournée",{"_index":219,"title":{},"body":{"components/AdminPageComponent.html":{},"components/UserPageComponent.html":{}}}],["retournées",{"_index":212,"title":{},"body":{"components/AdminPageComponent.html":{},"components/UserPageComponent.html":{}}}],["return",{"_index":49,"title":{},"body":{"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"injectables/AuthService.html":{},"interfaces/CapteurData.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"injectables/CapteurDataService.html":{},"injectables/CaptureService.html":{},"injectables/CollecteService.html":{},"components/HeaderComponent.html":{},"injectables/LogsApiService.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"injectables/SocketService.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"guards/UserGuard.html":{},"components/UserPageComponent.html":{},"injectables/UserService.html":{}}}],["returns",{"_index":27,"title":{},"body":{"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"injectables/AuthService.html":{},"injectables/CapteurDataService.html":{},"injectables/CaptureService.html":{},"injectables/CollecteService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/LogsApiService.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"components/MyAccountComponent.html":{},"injectables/SocketService.html":{},"injectables/UserApiService.html":{},"guards/UserGuard.html":{},"components/UserPageComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["reçues",{"_index":747,"title":{},"body":{"injectables/CaptureService.html":{}}}],["rgba(0",{"_index":1180,"title":{},"body":{"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"components/UserPageComponent.html":{}}}],["rgba(18",{"_index":468,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["rgba(255",{"_index":461,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["right",{"_index":1075,"title":{},"body":{"components/HeaderComponent.html":{},"components/UserPageComponent.html":{}}}],["role",{"_index":1053,"title":{},"body":{"components/HeaderComponent.html":{}}}],["roles",{"_index":1488,"title":{},"body":{"interfaces/User.html":{}}}],["root",{"_index":38,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/CapteurData.html":{},"injectables/CapteurDataService.html":{},"injectables/CaptureService.html":{},"injectables/CollecteService.html":{},"injectables/LogsApiService.html":{},"injectables/SocketService.html":{},"injectables/UserApiService.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["root'},{'name",{"_index":311,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"components/MyAccountComponent.html":{},"components/RegisterComponent.html":{},"components/UserPageComponent.html":{}}}],["rouge",{"_index":2028,"title":{},"body":{"index.html":{}}}],["route",{"_index":26,"title":{},"body":{"guards/AdminGuard.html":{},"interfaces/CapteurData.html":{},"injectables/CapteurDataService.html":{},"guards/UserGuard.html":{}}}],["router",{"_index":13,"title":{},"body":{"guards/AdminGuard.html":{},"components/AppComponent.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["routerlink",{"_index":1374,"title":{},"body":{"components/MenuComponent.html":{}}}],["routerlinkactive",{"_index":1375,"title":{},"body":{"components/MenuComponent.html":{}}}],["routeroutlet",{"_index":573,"title":{},"body":{"components/AppComponent.html":{}}}],["routerstatesnapshot",{"_index":24,"title":{},"body":{"guards/AdminGuard.html":{},"guards/UserGuard.html":{}}}],["routes",{"_index":606,"title":{},"body":{"components/AppComponent.html":{}}}],["run",{"_index":1890,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["rxjs",{"_index":35,"title":{},"body":{"guards/AdminGuard.html":{},"injectables/AuthService.html":{},"interfaces/CapteurData.html":{},"injectables/CapteurDataService.html":{},"injectables/CaptureService.html":{},"injectables/SocketService.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":1459,"title":{},"body":{"injectables/SocketService.html":{},"injectables/UserService.html":{}}}],["réactiver",{"_index":1585,"title":{},"body":{"interfaces/User.html":{}}}],["récupère",{"_index":684,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["récupération",{"_index":224,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"injectables/CollecteService.html":{},"injectables/LogsApiService.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"components/UserPageComponent.html":{}}}],["récupérer",{"_index":143,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"injectables/CapteurDataService.html":{},"injectables/CollecteService.html":{},"injectables/LogsApiService.html":{},"components/LogsComponent.html":{},"injectables/UserApiService.html":{},"components/UserPageComponent.html":{},"injectables/UserService.html":{}}}],["récupérées",{"_index":139,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"components/LogsComponent.html":{},"components/UserPageComponent.html":{}}}],["réel",{"_index":743,"title":{},"body":{"injectables/CaptureService.html":{},"components/HeaderComponent.html":{},"index.html":{}}}],["réessayer",{"_index":1315,"title":{},"body":{"components/LogsComponent.html":{},"injectables/UserApiService.html":{}}}],["référence",{"_index":1521,"title":{},"body":{"interfaces/User.html":{}}}],["réguliers",{"_index":2004,"title":{},"body":{"index.html":{}}}],["réinitialiser",{"_index":679,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{}}}],["réponse",{"_index":668,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CollecteService.html":{},"components/HeaderComponent.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"injectables/UserService.html":{}}}],["réseau",{"_index":1697,"title":{},"body":{"injectables/UserApiService.html":{}}}],["rôle",{"_index":1389,"title":{},"body":{"components/MenuComponent.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"injectables/UserService.html":{}}}],["rôles",{"_index":1620,"title":{},"body":{"interfaces/User.html":{}}}],["s@]+@[^\\s@]+\\.[^\\s",{"_index":1600,"title":{},"body":{"interfaces/User.html":{}}}],["saisie",{"_index":1166,"title":{},"body":{"components/HeaderComponent.html":{}}}],["salut",{"_index":270,"title":{},"body":{"components/AdminPageComponent.html":{},"components/UserPageComponent.html":{}}}],["samedi",{"_index":454,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["sans",{"_index":607,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"injectables/SocketService.html":{}}}],["saveduser",{"_index":1849,"title":{},"body":{"injectables/UserService.html":{}}}],["scale(1.05",{"_index":1200,"title":{},"body":{"components/HeaderComponent.html":{}}}],["scales",{"_index":473,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["schemas",{"_index":929,"title":{},"body":{"components/HeaderComponent.html":{}}}],["se",{"_index":1480,"title":{},"body":{"injectables/SocketService.html":{}}}],["search",{"_index":1350,"title":{},"body":{"components/LogsComponent.html":{}}}],["searchterm",{"_index":1267,"title":{},"body":{"components/LogsComponent.html":{},"interfaces/User.html":{}}}],["secondary",{"_index":553,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{}}}],["secondes",{"_index":1023,"title":{},"body":{"components/HeaderComponent.html":{}}}],["secret",{"_index":655,"title":{},"body":{"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"injectables/UserService.html":{}}}],["secretcode",{"_index":629,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["selectedmonth",{"_index":342,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["selectedrole",{"_index":1499,"title":{},"body":{"interfaces/User.html":{}}}],["selectedweek",{"_index":343,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["selectedyear",{"_index":344,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["selector",{"_index":66,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/AppComponent.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"components/MyAccountComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserPageComponent.html":{}}}],["selon",{"_index":160,"title":{},"body":{"components/AdminPageComponent.html":{},"interfaces/CapteurData.html":{},"injectables/CapteurDataService.html":{},"components/HeaderComponent.html":{}}}],["semaine",{"_index":416,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"injectables/CollecteService.html":{},"index.html":{}}}],["sendmessage",{"_index":1448,"title":{},"body":{"injectables/SocketService.html":{}}}],["sendmessage(event",{"_index":1456,"title":{},"body":{"injectables/SocketService.html":{}}}],["serif",{"_index":1160,"title":{},"body":{"components/HeaderComponent.html":{}}}],["serve",{"_index":2080,"title":{},"body":{"index.html":{}}}],["server",{"_index":1932,"title":{},"body":{"dependencies.html":{}}}],["server.ts",{"_index":1887,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["serverconfig",{"_index":1893,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["servermessage",{"_index":1712,"title":{},"body":{"injectables/UserApiService.html":{}}}],["serveur",{"_index":669,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CaptureService.html":{},"injectables/UserApiService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["service",{"_index":812,"title":{},"body":{"injectables/CollecteService.html":{},"components/MenuComponent.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{}}}],["services/capteur",{"_index":126,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"components/UserPageComponent.html":{}}}],["services/logs",{"_index":1301,"title":{},"body":{"components/LogsComponent.html":{}}}],["services/user",{"_index":1492,"title":{},"body":{"interfaces/User.html":{}}}],["services/user.service",{"_index":36,"title":{},"body":{"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/HeaderComponent.html":{},"components/MenuComponent.html":{},"components/MyAccountComponent.html":{},"guards/UserGuard.html":{},"components/UserPageComponent.html":{}}}],["set",{"_index":1509,"title":{},"body":{"interfaces/User.html":{}}}],["set(this.users.flatmap((user",{"_index":1667,"title":{},"body":{"interfaces/User.html":{}}}],["setchangepasswordmessage",{"_index":873,"title":{},"body":{"components/HeaderComponent.html":{}}}],["setchangepasswordmessage(text",{"_index":898,"title":{},"body":{"components/HeaderComponent.html":{}}}],["settimeout",{"_index":1019,"title":{},"body":{"components/HeaderComponent.html":{}}}],["settings",{"_index":1438,"title":{},"body":{"components/MyAccountComponent.html":{}}}],["seuils",{"_index":1989,"title":{},"body":{"index.html":{}}}],["shadow",{"_index":1178,"title":{},"body":{"components/HeaderComponent.html":{},"components/LogsComponent.html":{}}}],["short",{"_index":186,"title":{},"body":{"components/AdminPageComponent.html":{},"components/UserPageComponent.html":{}}}],["showlayout",{"_index":576,"title":{},"body":{"components/AppComponent.html":{}}}],["shownewpassword",{"_index":866,"title":{},"body":{"components/HeaderComponent.html":{}}}],["si",{"_index":266,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"injectables/AuthService.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"injectables/CaptureService.html":{},"injectables/CollecteService.html":{},"components/HeaderComponent.html":{},"components/MenuComponent.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"components/UserPageComponent.html":{},"injectables/UserService.html":{}}}],["signal",{"_index":2027,"title":{},"body":{"index.html":{}}}],["simple",{"_index":2012,"title":{},"body":{"index.html":{}}}],["size",{"_index":1097,"title":{},"body":{"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"components/UserPageComponent.html":{}}}],["slash",{"_index":1213,"title":{},"body":{"components/HeaderComponent.html":{}}}],["small",{"_index":1794,"title":{},"body":{"components/UserPageComponent.html":{}}}],["socket",{"_index":726,"title":{},"body":{"injectables/CaptureService.html":{},"injectables/SocketService.html":{},"dependencies.html":{}}}],["socket.io",{"_index":731,"title":{},"body":{"injectables/CaptureService.html":{},"injectables/SocketService.html":{}}}],["socketservice",{"_index":1444,"title":{"injectables/SocketService.html":{}},"body":{"injectables/SocketService.html":{},"coverage.html":{}}}],["soit",{"_index":1465,"title":{},"body":{"injectables/SocketService.html":{}}}],["solid",{"_index":1169,"title":{},"body":{"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{}}}],["sombre",{"_index":843,"title":{},"body":{"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/MenuComponent.html":{}}}],["son",{"_index":1388,"title":{},"body":{"components/MenuComponent.html":{},"index.html":{}}}],["sont",{"_index":214,"title":{},"body":{"components/AdminPageComponent.html":{},"components/UserPageComponent.html":{},"index.html":{}}}],["sort((a",{"_index":497,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["sortkey",{"_index":1268,"title":{},"body":{"components/LogsComponent.html":{},"interfaces/User.html":{}}}],["sortorder",{"_index":1269,"title":{},"body":{"components/LogsComponent.html":{},"interfaces/User.html":{}}}],["sorttable",{"_index":1271,"title":{},"body":{"components/LogsComponent.html":{}}}],["sorttable(key",{"_index":1280,"title":{},"body":{"components/LogsComponent.html":{},"interfaces/User.html":{}}}],["soulignement",{"_index":1414,"title":{},"body":{"components/MenuComponent.html":{}}}],["soumettre",{"_index":994,"title":{},"body":{"components/HeaderComponent.html":{},"interfaces/User.html":{}}}],["soumission",{"_index":1197,"title":{},"body":{"components/HeaderComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/CapteurData.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"injectables/CapteurDataService.html":{},"injectables/CaptureService.html":{},"injectables/CollecteService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/LogsApiService.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"components/MyAccountComponent.html":{},"components/RegisterComponent.html":{},"injectables/SocketService.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"guards/UserGuard.html":{},"components/UserPageComponent.html":{},"injectables/UserService.html":{}}}],["sous",{"_index":189,"title":{},"body":{"components/AdminPageComponent.html":{},"components/UserPageComponent.html":{}}}],["space",{"_index":1781,"title":{},"body":{"components/UserPageComponent.html":{}}}],["spinner",{"_index":1152,"title":{},"body":{"components/HeaderComponent.html":{}}}],["spécial",{"_index":1064,"title":{},"body":{"components/HeaderComponent.html":{}}}],["spécifier",{"_index":2107,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spécifique",{"_index":1116,"title":{},"body":{"components/HeaderComponent.html":{},"injectables/LogsApiService.html":{},"injectables/SocketService.html":{},"components/UserPageComponent.html":{}}}],["spécifiques",{"_index":1710,"title":{},"body":{"injectables/UserApiService.html":{}}}],["src/.../app",{"_index":2090,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.config.server.ts",{"_index":2093,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.config.ts",{"_index":2089,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.server.ts",{"_index":2091,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":2092,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":572,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:26",{"_index":581,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:27",{"_index":579,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.server.ts",{"_index":1892,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.config.ts",{"_index":1894,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/footer/footer.component.ts",{"_index":825,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/components/footer/footer.component.ts:13",{"_index":831,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/components/footer/footer.component.ts:17",{"_index":832,"title":{},"body":{"components/FooterComponent.html":{}}}],["src/app/components/header/elements/my",{"_index":1427,"title":{},"body":{"components/MyAccountComponent.html":{},"coverage.html":{}}}],["src/app/components/header/header.component.ts",{"_index":854,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/app/components/header/header.component.ts:103",{"_index":903,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/components/header/header.component.ts:107",{"_index":895,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/components/header/header.component.ts:130",{"_index":896,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/components/header/header.component.ts:156",{"_index":899,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/components/header/header.component.ts:163",{"_index":889,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/components/header/header.component.ts:169",{"_index":897,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/components/header/header.component.ts:174",{"_index":902,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/components/header/header.component.ts:179",{"_index":887,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/components/header/header.component.ts:18",{"_index":911,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/components/header/header.component.ts:185",{"_index":892,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/components/header/header.component.ts:20",{"_index":912,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/components/header/header.component.ts:21",{"_index":921,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/components/header/header.component.ts:22",{"_index":913,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/components/header/header.component.ts:23",{"_index":914,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/components/header/header.component.ts:24",{"_index":910,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/components/header/header.component.ts:25",{"_index":915,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/components/header/header.component.ts:26",{"_index":920,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/components/header/header.component.ts:28",{"_index":886,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/components/header/header.component.ts:32",{"_index":922,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/components/header/header.component.ts:52",{"_index":893,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/components/header/header.component.ts:66",{"_index":904,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/components/header/header.component.ts:74",{"_index":907,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/components/header/header.component.ts:80",{"_index":905,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/components/header/header.component.ts:91",{"_index":891,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/components/header/header.component.ts:98",{"_index":901,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/app/components/login/login.component.ts",{"_index":1897,"title":{},"body":{"coverage.html":{}}}],["src/app/components/menu/menu.component.ts",{"_index":1373,"title":{},"body":{"components/MenuComponent.html":{},"coverage.html":{}}}],["src/app/components/menu/menu.component.ts:14",{"_index":1386,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/components/menu/menu.component.ts:15",{"_index":1385,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/components/menu/menu.component.ts:16",{"_index":1381,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/components/menu/menu.component.ts:20",{"_index":1384,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/components/menu/menu.component.ts:28",{"_index":1382,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/components/menu/menu.component.ts:32",{"_index":1383,"title":{},"body":{"components/MenuComponent.html":{}}}],["src/app/components/pages/admin",{"_index":61,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"interfaces/CapteurData-1.html":{},"coverage.html":{}}}],["src/app/components/pages/logs/logs.component.ts",{"_index":1261,"title":{},"body":{"components/LogsComponent.html":{},"coverage.html":{}}}],["src/app/components/pages/logs/logs.component.ts:15",{"_index":1292,"title":{},"body":{"components/LogsComponent.html":{}}}],["src/app/components/pages/logs/logs.component.ts:16",{"_index":1295,"title":{},"body":{"components/LogsComponent.html":{}}}],["src/app/components/pages/logs/logs.component.ts:17",{"_index":1291,"title":{},"body":{"components/LogsComponent.html":{}}}],["src/app/components/pages/logs/logs.component.ts:18",{"_index":1294,"title":{},"body":{"components/LogsComponent.html":{}}}],["src/app/components/pages/logs/logs.component.ts:19",{"_index":1296,"title":{},"body":{"components/LogsComponent.html":{}}}],["src/app/components/pages/logs/logs.component.ts:20",{"_index":1297,"title":{},"body":{"components/LogsComponent.html":{}}}],["src/app/components/pages/logs/logs.component.ts:21",{"_index":1300,"title":{},"body":{"components/LogsComponent.html":{}}}],["src/app/components/pages/logs/logs.component.ts:22",{"_index":1274,"title":{},"body":{"components/LogsComponent.html":{}}}],["src/app/components/pages/logs/logs.component.ts:26",{"_index":1279,"title":{},"body":{"components/LogsComponent.html":{}}}],["src/app/components/pages/logs/logs.component.ts:40",{"_index":1288,"title":{},"body":{"components/LogsComponent.html":{}}}],["src/app/components/pages/logs/logs.component.ts:50",{"_index":1281,"title":{},"body":{"components/LogsComponent.html":{}}}],["src/app/components/pages/logs/logs.component.ts:73",{"_index":1276,"title":{},"body":{"components/LogsComponent.html":{}}}],["src/app/components/pages/user",{"_index":558,"title":{},"body":{"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-2.html":{},"components/UserPageComponent.html":{},"coverage.html":{}}}],["src/app/components/pages/utilisateurs/utilisateurs.component.ts",{"_index":1483,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["src/app/components/register/register.component.ts",{"_index":1440,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{}}}],["src/app/config/app",{"_index":1907,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/guards/admin.guard.ts",{"_index":6,"title":{},"body":{"guards/AdminGuard.html":{},"coverage.html":{}}}],["src/app/guards/admin.guard.ts:13",{"_index":25,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/app/guards/admin.guard.ts:9",{"_index":15,"title":{},"body":{"guards/AdminGuard.html":{}}}],["src/app/guards/user.guard.ts",{"_index":1747,"title":{},"body":{"guards/UserGuard.html":{},"coverage.html":{}}}],["src/app/guards/user.guard.ts:13",{"_index":1749,"title":{},"body":{"guards/UserGuard.html":{}}}],["src/app/guards/user.guard.ts:9",{"_index":1748,"title":{},"body":{"guards/UserGuard.html":{}}}],["src/app/services/auth.service.ts",{"_index":613,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/services/auth.service.ts:10",{"_index":634,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:11",{"_index":633,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:14",{"_index":622,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:19",{"_index":630,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:52",{"_index":632,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:71",{"_index":626,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:76",{"_index":625,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:81",{"_index":624,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/auth.service.ts:9",{"_index":635,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/services/capteur",{"_index":687,"title":{},"body":{"interfaces/CapteurData.html":{},"injectables/CapteurDataService.html":{},"coverage.html":{}}}],["src/app/services/capture.service.ts",{"_index":725,"title":{},"body":{"injectables/CaptureService.html":{},"coverage.html":{}}}],["src/app/services/capture.service.ts:17",{"_index":729,"title":{},"body":{"injectables/CaptureService.html":{}}}],["src/app/services/capture.service.ts:9",{"_index":728,"title":{},"body":{"injectables/CaptureService.html":{}}}],["src/app/services/collecte.service.ts",{"_index":753,"title":{},"body":{"injectables/CollecteService.html":{},"coverage.html":{}}}],["src/app/services/collecte.service.ts:11",{"_index":764,"title":{},"body":{"injectables/CollecteService.html":{}}}],["src/app/services/collecte.service.ts:22",{"_index":771,"title":{},"body":{"injectables/CollecteService.html":{}}}],["src/app/services/collecte.service.ts:34",{"_index":769,"title":{},"body":{"injectables/CollecteService.html":{}}}],["src/app/services/collecte.service.ts:54",{"_index":775,"title":{},"body":{"injectables/CollecteService.html":{}}}],["src/app/services/collecte.service.ts:65",{"_index":767,"title":{},"body":{"injectables/CollecteService.html":{}}}],["src/app/services/collecte.service.ts:7",{"_index":763,"title":{},"body":{"injectables/CollecteService.html":{}}}],["src/app/services/collecte.service.ts:77",{"_index":776,"title":{},"body":{"injectables/CollecteService.html":{}}}],["src/app/services/collecte.service.ts:88",{"_index":774,"title":{},"body":{"injectables/CollecteService.html":{}}}],["src/app/services/collecte.service.ts:99",{"_index":777,"title":{},"body":{"injectables/CollecteService.html":{}}}],["src/app/services/logs",{"_index":1220,"title":{},"body":{"injectables/LogsApiService.html":{},"coverage.html":{}}}],["src/app/services/socket.service.ts",{"_index":1445,"title":{},"body":{"injectables/SocketService.html":{},"coverage.html":{}}}],["src/app/services/socket.service.ts:12",{"_index":1451,"title":{},"body":{"injectables/SocketService.html":{}}}],["src/app/services/socket.service.ts:27",{"_index":1457,"title":{},"body":{"injectables/SocketService.html":{}}}],["src/app/services/socket.service.ts:36",{"_index":1455,"title":{},"body":{"injectables/SocketService.html":{}}}],["src/app/services/socket.service.ts:45",{"_index":1453,"title":{},"body":{"injectables/SocketService.html":{}}}],["src/app/services/user",{"_index":1672,"title":{},"body":{"injectables/UserApiService.html":{},"coverage.html":{}}}],["src/app/services/user.service.ts",{"_index":1800,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/services/user.service.ts:115",{"_index":1812,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:147",{"_index":1828,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:17",{"_index":1830,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:18",{"_index":1833,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:19",{"_index":1809,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:23",{"_index":1826,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:28",{"_index":1821,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:40",{"_index":1823,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:51",{"_index":1814,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:62",{"_index":1818,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:67",{"_index":1817,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:73",{"_index":1819,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:79",{"_index":1824,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:87",{"_index":1813,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/services/user.service.ts:99",{"_index":1816,"title":{},"body":{"injectables/UserService.html":{}}}],["src/main.server.ts",{"_index":1917,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":1918,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stabilit",{"_index":1472,"title":{},"body":{"injectables/SocketService.html":{}}}],["stable",{"_index":1466,"title":{},"body":{"injectables/SocketService.html":{}}}],["stack",{"_index":1972,"title":{},"body":{"index.html":{}}}],["standalone",{"_index":69,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/AppComponent.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"components/MyAccountComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserPageComponent.html":{}}}],["start",{"_index":1069,"title":{},"body":{"components/HeaderComponent.html":{},"components/MenuComponent.html":{}}}],["startdatacapture",{"_index":762,"title":{},"body":{"injectables/CollecteService.html":{}}}],["startdate",{"_index":1240,"title":{},"body":{"injectables/LogsApiService.html":{}}}],["started",{"_index":1969,"title":{"index.html":{}},"body":{}}],["startindex",{"_index":1319,"title":{},"body":{"components/LogsComponent.html":{},"interfaces/User.html":{}}}],["state",{"_index":23,"title":{},"body":{"guards/AdminGuard.html":{},"components/HeaderComponent.html":{},"guards/UserGuard.html":{}}}],["statements",{"_index":1886,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":919,"title":{},"body":{"components/HeaderComponent.html":{}}}],["status",{"_index":1489,"title":{},"body":{"interfaces/User.html":{}}}],["statuscode",{"_index":1711,"title":{},"body":{"injectables/UserApiService.html":{}}}],["statut",{"_index":681,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{}}}],["stockage",{"_index":1526,"title":{},"body":{"interfaces/User.html":{},"index.html":{}}}],["stocke",{"_index":1996,"title":{},"body":{"index.html":{}}}],["stocker",{"_index":134,"title":{},"body":{"components/AdminPageComponent.html":{},"components/UserPageComponent.html":{}}}],["stockées",{"_index":2010,"title":{},"body":{"index.html":{}}}],["string",{"_index":102,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/CapteurData.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"injectables/CapteurDataService.html":{},"injectables/CollecteService.html":{},"components/HeaderComponent.html":{},"injectables/LogsApiService.html":{},"components/LogsComponent.html":{},"injectables/SocketService.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"components/UserPageComponent.html":{},"injectables/UserService.html":{}}}],["structure",{"_index":207,"title":{},"body":{"components/AdminPageComponent.html":{},"components/UserPageComponent.html":{},"injectables/UserService.html":{},"index.html":{}}}],["studio",{"_index":2047,"title":{},"body":{"index.html":{}}}],["style",{"_index":1094,"title":{},"body":{"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{}}}],["styles",{"_index":331,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"components/UserPageComponent.html":{}}}],["styleurl",{"_index":76,"title":{},"body":{"components/AdminPageComponent.html":{},"components/MyAccountComponent.html":{},"components/RegisterComponent.html":{}}}],["styleurls",{"_index":335,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/AppComponent.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"interfaces/User.html":{},"components/UserPageComponent.html":{}}}],["subscribe",{"_index":420,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"injectables/SocketService.html":{}}}],["success",{"_index":546,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/HeaderComponent.html":{}}}],["success,.h4",{"_index":569,"title":{},"body":{"components/AnalyseComponent-1.html":{}}}],["succès",{"_index":990,"title":{},"body":{"components/HeaderComponent.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"injectables/UserService.html":{}}}],["suivre",{"_index":1982,"title":{},"body":{"index.html":{}}}],["sun",{"_index":970,"title":{},"body":{"components/HeaderComponent.html":{}}}],["suppression",{"_index":2020,"title":{},"body":{"index.html":{}}}],["supprime",{"_index":1402,"title":{},"body":{"components/MenuComponent.html":{},"injectables/UserService.html":{}}}],["supérieur",{"_index":295,"title":{},"body":{"components/AdminPageComponent.html":{},"components/UserPageComponent.html":{}}}],["supérieure",{"_index":2052,"title":{},"body":{"index.html":{}}}],["sur",{"_index":1114,"title":{},"body":{"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"injectables/UserApiService.html":{},"index.html":{}}}],["surveiller",{"_index":2000,"title":{},"body":{"index.html":{}}}],["survenue",{"_index":1545,"title":{},"body":{"interfaces/User.html":{},"injectables/UserApiService.html":{},"injectables/UserService.html":{}}}],["survol",{"_index":1139,"title":{},"body":{"components/HeaderComponent.html":{},"components/MenuComponent.html":{}}}],["swimlane/ngx",{"_index":1940,"title":{},"body":{"dependencies.html":{}}}],["switch",{"_index":263,"title":{},"body":{"components/AdminPageComponent.html":{},"injectables/UserApiService.html":{}}}],["système",{"_index":1992,"title":{},"body":{"index.html":{}}}],["sélections",{"_index":408,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["sûr",{"_index":1626,"title":{},"body":{"interfaces/User.html":{}}}],["table",{"_index":1284,"title":{},"body":{"components/LogsComponent.html":{},"coverage.html":{}}}],["tableau",{"_index":1997,"title":{},"body":{"index.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1919,"title":{},"body":{"coverage.html":{}}}],["taille",{"_index":1415,"title":{},"body":{"components/MenuComponent.html":{},"components/UserPageComponent.html":{}}}],["tap",{"_index":1836,"title":{},"body":{"injectables/UserService.html":{}}}],["tap((response",{"_index":1844,"title":{},"body":{"injectables/UserService.html":{}}}],["tard",{"_index":1317,"title":{},"body":{"components/LogsComponent.html":{},"injectables/UserApiService.html":{}}}],["taskboard",{"_index":1437,"title":{},"body":{"components/MyAccountComponent.html":{}}}],["td",{"_index":1347,"title":{},"body":{"components/LogsComponent.html":{}}}],["technologies",{"_index":2031,"title":{},"body":{"index.html":{}}}],["teint",{"_index":257,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["teinte",{"_index":2029,"title":{},"body":{"index.html":{}}}],["telephone",{"_index":1490,"title":{},"body":{"interfaces/User.html":{},"injectables/UserApiService.html":{}}}],["temperature",{"_index":84,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"injectables/CapteurDataService.html":{},"components/UserPageComponent.html":{}}}],["temperaturedata",{"_index":85,"title":{},"body":{"components/AdminPageComponent.html":{},"components/UserPageComponent.html":{}}}],["template",{"_index":58,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"components/MyAccountComponent.html":{},"components/RegisterComponent.html":{},"components/UserPageComponent.html":{}}}],["templateurl",{"_index":74,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/AppComponent.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"components/MyAccountComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserPageComponent.html":{}}}],["temporaire",{"_index":1527,"title":{},"body":{"interfaces/User.html":{}}}],["temps",{"_index":742,"title":{},"body":{"injectables/CaptureService.html":{},"components/HeaderComponent.html":{},"index.html":{}}}],["température",{"_index":138,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"injectables/CapteurDataService.html":{},"components/UserPageComponent.html":{},"index.html":{}}}],["températures",{"_index":443,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"index.html":{}}}],["tenter",{"_index":395,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["term",{"_index":1332,"title":{},"body":{"components/LogsComponent.html":{}}}],["terme",{"_index":1277,"title":{},"body":{"components/LogsComponent.html":{}}}],["text",{"_index":539,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/HeaderComponent.html":{},"components/MenuComponent.html":{},"components/UserPageComponent.html":{}}}],["texte",{"_index":524,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/HeaderComponent.html":{},"components/MenuComponent.html":{},"components/UserPageComponent.html":{}}}],["th",{"_index":1346,"title":{},"body":{"components/LogsComponent.html":{}}}],["theme",{"_index":908,"title":{},"body":{"components/HeaderComponent.html":{},"miscellaneous/variables.html":{}}}],["themeicon",{"_index":964,"title":{},"body":{"components/HeaderComponent.html":{}}}],["then((data",{"_index":1590,"title":{},"body":{"interfaces/User.html":{}}}],["then((response",{"_index":1631,"title":{},"body":{"interfaces/User.html":{},"injectables/UserService.html":{}}}],["then((updateduser",{"_index":1655,"title":{},"body":{"interfaces/User.html":{}}}],["then((users",{"_index":1542,"title":{},"body":{"interfaces/User.html":{}}}],["then(response",{"_index":657,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.appref.isstable",{"_index":1468,"title":{},"body":{"injectables/SocketService.html":{}}}],["this.capteurdatalist",{"_index":480,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["this.capteurdatalist.foreach((item",{"_index":484,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["this.capteurdataservice.controlfan('off').subscribe",{"_index":256,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["this.capteurdataservice.controlfan('on').subscribe",{"_index":251,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["this.capteurdataservice.controlfan(action).subscribe",{"_index":267,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["this.capteurdataservice.getcapteurdata().subscribe((data",{"_index":149,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["this.capteurdataservice.getcapteurdatas(this.page",{"_index":478,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["this.capteurdataservice.getlastdaydata().subscribe",{"_index":201,"title":{},"body":{"components/AdminPageComponent.html":{},"components/UserPageComponent.html":{}}}],["this.cdr.detectchanges",{"_index":1649,"title":{},"body":{"interfaces/User.html":{}}}],["this.changepasswordform",{"_index":940,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.changepasswordform.get('confirmpassword')?.value",{"_index":958,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.changepasswordform.get('confirmpassword')?.valuechanges.subscribe",{"_index":956,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.changepasswordform.get('newpassword')?.value",{"_index":957,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.changepasswordform.get(controlname",{"_index":1025,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.changepasswordform.valid",{"_index":997,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.changepasswordform.value",{"_index":998,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.changepasswordmessage",{"_index":1018,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.chart",{"_index":437,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["this.chart.destroy",{"_index":438,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["this.closemodal",{"_index":1595,"title":{},"body":{"interfaces/User.html":{}}}],["this.closemodalupdate",{"_index":1660,"title":{},"body":{"interfaces/User.html":{}}}],["this.closepasswordmodalandshowprofilemodal",{"_index":1014,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.createchart",{"_index":403,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["this.createchart(avgtemperatures",{"_index":427,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["this.currentdatetime",{"_index":171,"title":{},"body":{"components/AdminPageComponent.html":{},"components/UserPageComponent.html":{}}}],["this.currentpage",{"_index":1320,"title":{},"body":{"components/LogsComponent.html":{},"interfaces/User.html":{}}}],["this.currentusersubject.asobservable",{"_index":1831,"title":{},"body":{"injectables/UserService.html":{}}}],["this.currentusersubject.next(json.parse(saveduser",{"_index":1850,"title":{},"body":{"injectables/UserService.html":{}}}],["this.currentusersubject.next(null",{"_index":1854,"title":{},"body":{"injectables/UserService.html":{}}}],["this.currentusersubject.next(response.user",{"_index":1847,"title":{},"body":{"injectables/UserService.html":{}}}],["this.currentusersubject.value",{"_index":1848,"title":{},"body":{"injectables/UserService.html":{}}}],["this.deleteallcookies",{"_index":1853,"title":{},"body":{"injectables/UserService.html":{}}}],["this.errormessage",{"_index":225,"title":{},"body":{"components/AdminPageComponent.html":{},"components/LogsComponent.html":{},"interfaces/User.html":{},"components/UserPageComponent.html":{}}}],["this.fanstatus",{"_index":265,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["this.fb.group",{"_index":941,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.fetchlastdaydata",{"_index":142,"title":{},"body":{"components/AdminPageComponent.html":{},"components/UserPageComponent.html":{}}}],["this.fetchusers",{"_index":1533,"title":{},"body":{"interfaces/User.html":{}}}],["this.filteredlogs().slice(startindex",{"_index":1324,"title":{},"body":{"components/LogsComponent.html":{}}}],["this.filteredusers().slice(startindex",{"_index":1550,"title":{},"body":{"interfaces/User.html":{}}}],["this.getcurrentuser",{"_index":1851,"title":{},"body":{"injectables/UserService.html":{}}}],["this.groupbydateandhour",{"_index":481,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["this.groupeddata",{"_index":492,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["this.handleerror(error",{"_index":1880,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http",{"_index":417,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["this.http.get(`${this.baseurl}/data",{"_index":712,"title":{},"body":{"interfaces/CapteurData.html":{},"injectables/CapteurDataService.html":{}}}],["this.http.get(`${this.baseurl}/last",{"_index":701,"title":{},"body":{"interfaces/CapteurData.html":{},"injectables/CapteurDataService.html":{}}}],["this.http.get(`${this.baseurl}/realtime",{"_index":703,"title":{},"body":{"interfaces/CapteurData.html":{},"injectables/CapteurDataService.html":{}}}],["this.http.get(`${this.baseurl}/weekly",{"_index":695,"title":{},"body":{"interfaces/CapteurData.html":{},"injectables/CapteurDataService.html":{}}}],["this.http.post(`${this.apiurl}/login",{"_index":1842,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.post(`${this.apiurl}/register",{"_index":1841,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.post(`${this.apiurl}/update",{"_index":1882,"title":{},"body":{"injectables/UserService.html":{}}}],["this.http.post(`${this.baseurl}/control",{"_index":708,"title":{},"body":{"interfaces/CapteurData.html":{},"injectables/CapteurDataService.html":{}}}],["this.humidite",{"_index":176,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["this.isadmin",{"_index":1392,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.isadminuser",{"_index":660,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.isdarkmode",{"_index":951,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.isloading",{"_index":1540,"title":{},"body":{"interfaces/User.html":{}}}],["this.isloggedin",{"_index":1390,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.ismodalvisible",{"_index":975,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.ispasswordmodalvisible",{"_index":976,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.issubmitting",{"_index":1575,"title":{},"body":{"interfaces/User.html":{}}}],["this.isuser",{"_index":1394,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.limit).subscribe",{"_index":479,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["this.loaddata",{"_index":383,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["this.loaduserdata",{"_index":939,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.loggedin",{"_index":659,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logs",{"_index":1311,"title":{},"body":{"components/LogsComponent.html":{}}}],["this.logs.filter((log",{"_index":1331,"title":{},"body":{"components/LogsComponent.html":{}}}],["this.logs.sort((a",{"_index":1327,"title":{},"body":{"components/LogsComponent.html":{}}}],["this.logsservice.getalllogs",{"_index":1312,"title":{},"body":{"components/LogsComponent.html":{}}}],["this.modalservice.dismissall",{"_index":1538,"title":{},"body":{"interfaces/User.html":{}}}],["this.modalservice.open(this.registermodal",{"_index":1535,"title":{},"body":{"interfaces/User.html":{}}}],["this.modalservice.open(this.updatemodal",{"_index":1662,"title":{},"body":{"interfaces/User.html":{}}}],["this.newuser.adresse.trim",{"_index":1580,"title":{},"body":{"interfaces/User.html":{}}}],["this.newuser.email.trim",{"_index":1578,"title":{},"body":{"interfaces/User.html":{}}}],["this.newuser.name.trim",{"_index":1577,"title":{},"body":{"interfaces/User.html":{}}}],["this.newuser.password",{"_index":1581,"title":{},"body":{"interfaces/User.html":{}}}],["this.newuser.photo",{"_index":1569,"title":{},"body":{"interfaces/User.html":{}}}],["this.newuser.telephone.trim",{"_index":1579,"title":{},"body":{"interfaces/User.html":{}}}],["this.openmodalupdate",{"_index":1652,"title":{},"body":{"interfaces/User.html":{}}}],["this.page",{"_index":502,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["this.pagesize",{"_index":1321,"title":{},"body":{"components/LogsComponent.html":{},"interfaces/User.html":{}}}],["this.paginatedlogs",{"_index":1323,"title":{},"body":{"components/LogsComponent.html":{}}}],["this.paginatedusers",{"_index":1549,"title":{},"body":{"interfaces/User.html":{}}}],["this.passwordsmatch",{"_index":959,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.photofile",{"_index":1559,"title":{},"body":{"interfaces/User.html":{}}}],["this.photoinput.nativeelement.click",{"_index":1029,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.photopreview",{"_index":1566,"title":{},"body":{"interfaces/User.html":{}}}],["this.renderer.addclass(document.body",{"_index":963,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.renderer.removeclass(document.body",{"_index":962,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.renderer.setattribute",{"_index":966,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.resetnewuserform",{"_index":1596,"title":{},"body":{"interfaces/User.html":{}}}],["this.router.events.subscribe((event",{"_index":593,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.navigate(['/login",{"_index":51,"title":{},"body":{"guards/AdminGuard.html":{},"guards/UserGuard.html":{},"injectables/UserService.html":{}}}],["this.searchterm.tolowercase",{"_index":1333,"title":{},"body":{"components/LogsComponent.html":{}}}],["this.selectedmonth",{"_index":412,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["this.selectedrole",{"_index":1556,"title":{},"body":{"interfaces/User.html":{}}}],["this.selectedweek",{"_index":414,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["this.selectedyear",{"_index":411,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["this.setchangepasswordmessage",{"_index":1015,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.setchangepasswordmessage('mot",{"_index":1012,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.showlayout",{"_index":609,"title":{},"body":{"components/AppComponent.html":{}}}],["this.shownewpassword",{"_index":1032,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.socket",{"_index":737,"title":{},"body":{"injectables/CaptureService.html":{},"injectables/SocketService.html":{}}}],["this.socket.connect",{"_index":1471,"title":{},"body":{"injectables/SocketService.html":{}}}],["this.socket.connected",{"_index":1475,"title":{},"body":{"injectables/SocketService.html":{}}}],["this.socket.disconnect",{"_index":1482,"title":{},"body":{"injectables/SocketService.html":{}}}],["this.socket.emit(event",{"_index":1476,"title":{},"body":{"injectables/SocketService.html":{}}}],["this.socket.on('error",{"_index":750,"title":{},"body":{"injectables/CaptureService.html":{}}}],["this.socket.on('nouvelledonnee",{"_index":745,"title":{},"body":{"injectables/CaptureService.html":{}}}],["this.socket.on(event",{"_index":1479,"title":{},"body":{"injectables/SocketService.html":{}}}],["this.sortkey",{"_index":1325,"title":{},"body":{"components/LogsComponent.html":{},"interfaces/User.html":{}}}],["this.sortorder",{"_index":1326,"title":{},"body":{"components/LogsComponent.html":{},"interfaces/User.html":{}}}],["this.temperature",{"_index":174,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["this.temperaturedata",{"_index":209,"title":{},"body":{"components/AdminPageComponent.html":{},"components/UserPageComponent.html":{}}}],["this.temperaturedata.find((d",{"_index":237,"title":{},"body":{"components/AdminPageComponent.html":{},"components/UserPageComponent.html":{}}}],["this.temperaturedata.foreach((data",{"_index":217,"title":{},"body":{"components/AdminPageComponent.html":{},"components/UserPageComponent.html":{}}}],["this.updatechart",{"_index":384,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["this.updatedatetime",{"_index":141,"title":{},"body":{"components/AdminPageComponent.html":{},"components/UserPageComponent.html":{}}}],["this.updateicon",{"_index":953,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.updatepagination",{"_index":1313,"title":{},"body":{"components/LogsComponent.html":{},"interfaces/User.html":{}}}],["this.updatethemeclass(theme",{"_index":952,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.user",{"_index":140,"title":{},"body":{"components/AdminPageComponent.html":{},"injectables/AuthService.html":{},"components/HeaderComponent.html":{},"components/MyAccountComponent.html":{},"components/UserPageComponent.html":{}}}],["this.user._id",{"_index":980,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.user.email",{"_index":1005,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.user.photo",{"_index":991,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.user.role",{"_index":661,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userapiservice",{"_index":1541,"title":{},"body":{"interfaces/User.html":{}}}],["this.users",{"_index":1543,"title":{},"body":{"interfaces/User.html":{}}}],["this.users.filter((user",{"_index":1552,"title":{},"body":{"interfaces/User.html":{}}}],["this.users.findindex((user",{"_index":1633,"title":{},"body":{"interfaces/User.html":{}}}],["this.users.map(u",{"_index":1656,"title":{},"body":{"interfaces/User.html":{}}}],["this.users.push(data.user",{"_index":1593,"title":{},"body":{"interfaces/User.html":{}}}],["this.users.sort((a",{"_index":1558,"title":{},"body":{"interfaces/User.html":{}}}],["this.users[index].status",{"_index":1635,"title":{},"body":{"interfaces/User.html":{}}}],["this.userservice.changepassword(email",{"_index":1010,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.userservice.getcurrentuser",{"_index":46,"title":{},"body":{"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/HeaderComponent.html":{},"components/MyAccountComponent.html":{},"guards/UserGuard.html":{},"components/UserPageComponent.html":{}}}],["this.userservice.isadmin",{"_index":1393,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.userservice.isloggedin",{"_index":1391,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.userservice.isuser",{"_index":1395,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.userservice.logout",{"_index":1044,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.userservice.updatephoto(this.user._id",{"_index":985,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.usertoedit",{"_index":1643,"title":{},"body":{"interfaces/User.html":{}}}],["this.validateuserinput(user",{"_index":1584,"title":{},"body":{"interfaces/User.html":{}}}],["throw",{"_index":664,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CollecteService.html":{},"injectables/LogsApiService.html":{},"injectables/UserApiService.html":{}}}],["thème",{"_index":1209,"title":{},"body":{"components/HeaderComponent.html":{}}}],["title",{"_index":577,"title":{},"body":{"components/AppComponent.html":{},"interfaces/User.html":{}}}],["titre",{"_index":1792,"title":{},"body":{"components/UserPageComponent.html":{}}}],["today",{"_index":830,"title":{},"body":{"components/FooterComponent.html":{}}}],["toggle",{"_index":1084,"title":{},"body":{"components/HeaderComponent.html":{}}}],["togglemodal",{"_index":874,"title":{},"body":{"components/HeaderComponent.html":{}}}],["togglemodal(event",{"_index":900,"title":{},"body":{"components/HeaderComponent.html":{}}}],["togglenewpasswordvisibility",{"_index":875,"title":{},"body":{"components/HeaderComponent.html":{}}}],["togglepasswordmodal",{"_index":876,"title":{},"body":{"components/HeaderComponent.html":{}}}],["toggletheme",{"_index":877,"title":{},"body":{"components/HeaderComponent.html":{}}}],["toggleuserrole",{"_index":1677,"title":{},"body":{"injectables/UserApiService.html":{}}}],["toggleuserrole(id",{"_index":1685,"title":{},"body":{"injectables/UserApiService.html":{}}}],["tolowercase().includes(this.searchterm.tolowercase",{"_index":1554,"title":{},"body":{"interfaces/User.html":{}}}],["top",{"_index":512,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/HeaderComponent.html":{},"components/LogsComponent.html":{}}}],["toujours",{"_index":1421,"title":{},"body":{"components/MenuComponent.html":{}}}],["tous",{"_index":1229,"title":{},"body":{"injectables/LogsApiService.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"injectables/UserService.html":{}}}],["tout",{"_index":1769,"title":{},"body":{"components/UserPageComponent.html":{},"injectables/UserService.html":{},"index.html":{}}}],["toute",{"_index":802,"title":{},"body":{"injectables/CollecteService.html":{}}}],["toutes",{"_index":778,"title":{},"body":{"injectables/CollecteService.html":{}}}],["traitement",{"_index":807,"title":{},"body":{"injectables/CollecteService.html":{}}}],["transform",{"_index":1199,"title":{},"body":{"components/HeaderComponent.html":{}}}],["transformation",{"_index":1978,"title":{},"body":{"index.html":{}}}],["transforme",{"_index":230,"title":{},"body":{"components/AdminPageComponent.html":{},"components/UserPageComponent.html":{}}}],["transition",{"_index":1174,"title":{},"body":{"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{}}}],["transparent",{"_index":1135,"title":{},"body":{"components/HeaderComponent.html":{}}}],["tre",{"_index":1523,"title":{},"body":{"interfaces/User.html":{}}}],["tree",{"_index":60,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"components/MyAccountComponent.html":{},"components/RegisterComponent.html":{},"components/UserPageComponent.html":{}}}],["trello",{"_index":2041,"title":{},"body":{"index.html":{}}}],["tri",{"_index":1283,"title":{},"body":{"components/LogsComponent.html":{}}}],["trier",{"_index":1287,"title":{},"body":{"components/LogsComponent.html":{}}}],["trouv",{"_index":1344,"title":{},"body":{"components/LogsComponent.html":{},"injectables/UserApiService.html":{}}}],["trouvée",{"_index":797,"title":{},"body":{"injectables/CollecteService.html":{}}}],["true",{"_index":50,"title":{},"body":{"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"components/MyAccountComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"guards/UserGuard.html":{},"components/UserPageComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":779,"title":{},"body":{"injectables/CollecteService.html":{},"injectables/LogsApiService.html":{},"components/LogsComponent.html":{},"injectables/UserApiService.html":{}}}],["tslib",{"_index":1961,"title":{},"body":{"dependencies.html":{}}}],["turnofffan",{"_index":92,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["turnonfan",{"_index":93,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["type",{"_index":19,"title":{},"body":{"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/CapteurData.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"injectables/CapteurDataService.html":{},"injectables/CaptureService.html":{},"injectables/CollecteService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/LogsApiService.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"components/MyAccountComponent.html":{},"injectables/SocketService.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"guards/UserGuard.html":{},"components/UserPageComponent.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":399,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["télécommande",{"_index":2018,"title":{},"body":{"index.html":{}}}],["téléphone",{"_index":1613,"title":{},"body":{"interfaces/User.html":{}}}],["u",{"_index":1659,"title":{},"body":{"interfaces/User.html":{}}}],["u._id",{"_index":1657,"title":{},"body":{"interfaces/User.html":{}}}],["ul",{"_index":1164,"title":{},"body":{"components/HeaderComponent.html":{},"components/MenuComponent.html":{}}}],["un",{"_index":157,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"injectables/AuthService.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"injectables/CollecteService.html":{},"components/HeaderComponent.html":{},"injectables/LogsApiService.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"injectables/SocketService.html":{},"injectables/UserApiService.html":{},"components/UserPageComponent.html":{},"injectables/UserService.html":{},"index.html":{}}}],["undefined",{"_index":401,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["une",{"_index":166,"title":{},"body":{"components/AdminPageComponent.html":{},"injectables/CollecteService.html":{},"components/HeaderComponent.html":{},"injectables/LogsApiService.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"components/UserPageComponent.html":{},"injectables/UserService.html":{},"index.html":{}}}],["uniqueroles",{"_index":1666,"title":{},"body":{"interfaces/User.html":{}}}],["unknown",{"_index":1738,"title":{},"body":{"injectables/UserApiService.html":{}}}],["updatechart",{"_index":351,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["updated",{"_index":1505,"title":{},"body":{"interfaces/User.html":{}}}],["updatedatetime",{"_index":94,"title":{},"body":{"components/AdminPageComponent.html":{},"components/UserPageComponent.html":{}}}],["updateduser",{"_index":1615,"title":{},"body":{"interfaces/User.html":{}}}],["updateduser._id",{"_index":1658,"title":{},"body":{"interfaces/User.html":{}}}],["updateduser.roles",{"_index":1619,"title":{},"body":{"interfaces/User.html":{}}}],["updateduser.status",{"_index":1636,"title":{},"body":{"interfaces/User.html":{}}}],["updateicon",{"_index":878,"title":{},"body":{"components/HeaderComponent.html":{}}}],["updatemodal",{"_index":1519,"title":{},"body":{"interfaces/User.html":{}}}],["updatepagination",{"_index":1272,"title":{},"body":{"components/LogsComponent.html":{},"interfaces/User.html":{}}}],["updatephoto",{"_index":1808,"title":{},"body":{"injectables/UserService.html":{}}}],["updatephoto(userid",{"_index":1827,"title":{},"body":{"injectables/UserService.html":{}}}],["updatethemeclass",{"_index":879,"title":{},"body":{"components/HeaderComponent.html":{}}}],["updatethemeclass(theme",{"_index":906,"title":{},"body":{"components/HeaderComponent.html":{}}}],["updateuser",{"_index":1653,"title":{},"body":{"interfaces/User.html":{},"injectables/UserApiService.html":{}}}],["updateuser(id",{"_index":1687,"title":{},"body":{"injectables/UserApiService.html":{}}}],["updateuser(this.usertoedit._id",{"_index":1654,"title":{},"body":{"interfaces/User.html":{}}}],["url",{"_index":691,"title":{},"body":{"interfaces/CapteurData.html":{},"injectables/CapteurDataService.html":{},"miscellaneous/variables.html":{}}}],["url('/assets/images/humide.png",{"_index":1763,"title":{},"body":{"components/UserPageComponent.html":{}}}],["use",{"_index":937,"title":{},"body":{"components/HeaderComponent.html":{}}}],["user",{"_index":86,"title":{"interfaces/User.html":{}},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"components/MyAccountComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"guards/UserGuard.html":{},"components/UserPageComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["user's",{"_index":1511,"title":{},"body":{"interfaces/User.html":{}}}],["user._id",{"_index":1634,"title":{},"body":{"interfaces/User.html":{}}}],["user.adresse",{"_index":1050,"title":{},"body":{"components/HeaderComponent.html":{},"interfaces/User.html":{}}}],["user.email",{"_index":1051,"title":{},"body":{"components/HeaderComponent.html":{},"interfaces/User.html":{}}}],["user.name",{"_index":271,"title":{},"body":{"components/AdminPageComponent.html":{},"components/HeaderComponent.html":{},"components/MyAccountComponent.html":{},"interfaces/User.html":{},"components/UserPageComponent.html":{}}}],["user.password",{"_index":1604,"title":{},"body":{"interfaces/User.html":{}}}],["user.password.length",{"_index":1614,"title":{},"body":{"interfaces/User.html":{}}}],["user.role",{"_index":1045,"title":{},"body":{"components/HeaderComponent.html":{},"injectables/UserService.html":{}}}],["user.roles",{"_index":1435,"title":{},"body":{"components/MyAccountComponent.html":{},"interfaces/User.html":{}}}],["user.roles.includes('admin')).length",{"_index":1671,"title":{},"body":{"interfaces/User.html":{}}}],["user.roles.includes(this.selectedrole",{"_index":1557,"title":{},"body":{"interfaces/User.html":{}}}],["user.secretcode",{"_index":1052,"title":{},"body":{"components/HeaderComponent.html":{}}}],["user.status).length",{"_index":1669,"title":{},"body":{"interfaces/User.html":{}}}],["user.telephone",{"_index":1603,"title":{},"body":{"interfaces/User.html":{}}}],["userapiservice",{"_index":1491,"title":{"injectables/UserApiService.html":{}},"body":{"interfaces/User.html":{},"injectables/UserApiService.html":{},"coverage.html":{}}}],["userdata",{"_index":971,"title":{},"body":{"components/HeaderComponent.html":{},"injectables/UserApiService.html":{},"injectables/UserService.html":{}}}],["userguard",{"_index":1746,"title":{"guards/UserGuard.html":{}},"body":{"guards/UserGuard.html":{},"coverage.html":{}}}],["userid",{"_index":1247,"title":{},"body":{"injectables/LogsApiService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{}}}],["username",{"_index":1254,"title":{},"body":{"injectables/LogsApiService.html":{}}}],["userpagecomponent",{"_index":326,"title":{"components/UserPageComponent.html":{}},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"components/MyAccountComponent.html":{},"components/RegisterComponent.html":{},"components/UserPageComponent.html":{},"coverage.html":{}}}],["users",{"_index":1497,"title":{},"body":{"interfaces/User.html":{}}}],["userservice",{"_index":12,"title":{"injectables/UserService.html":{}},"body":{"guards/AdminGuard.html":{},"components/AdminPageComponent.html":{},"components/HeaderComponent.html":{},"components/MenuComponent.html":{},"components/MyAccountComponent.html":{},"guards/UserGuard.html":{},"components/UserPageComponent.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["userservice,private",{"_index":1760,"title":{},"body":{"components/UserPageComponent.html":{}}}],["usertoedit",{"_index":1501,"title":{},"body":{"interfaces/User.html":{}}}],["utc",{"_index":1866,"title":{},"body":{"injectables/UserService.html":{}}}],["utilisateur",{"_index":1246,"title":{},"body":{"injectables/LogsApiService.html":{},"components/LogsComponent.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"index.html":{}}}],["utilisateur/yakar",{"_index":2070,"title":{},"body":{"index.html":{}}}],["utilisateurs",{"_index":328,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"components/MyAccountComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"components/UserPageComponent.html":{},"index.html":{}}}],["utilisateurs.component.css",{"_index":1496,"title":{},"body":{"interfaces/User.html":{}}}],["utilisateurs.component.html",{"_index":1495,"title":{},"body":{"interfaces/User.html":{}}}],["utilisateurscomponent",{"_index":327,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"components/MyAccountComponent.html":{},"components/RegisterComponent.html":{},"interfaces/User.html":{},"components/UserPageComponent.html":{},"coverage.html":{}}}],["utilisation",{"_index":782,"title":{},"body":{"injectables/CollecteService.html":{}}}],["utiliser",{"_index":589,"title":{},"body":{"components/AppComponent.html":{}}}],["utilisées",{"_index":2032,"title":{},"body":{"index.html":{}}}],["valid",{"_index":1203,"title":{},"body":{"components/HeaderComponent.html":{}}}],["validateuserinput(user",{"_index":1598,"title":{},"body":{"interfaces/User.html":{}}}],["validation",{"_index":1586,"title":{},"body":{"interfaces/User.html":{},"injectables/UserApiService.html":{}}}],["validators",{"_index":925,"title":{},"body":{"components/HeaderComponent.html":{}}}],["validators.minlength(8",{"_index":945,"title":{},"body":{"components/HeaderComponent.html":{}}}],["validators.pattern(/(?=.*[a",{"_index":946,"title":{},"body":{"components/HeaderComponent.html":{}}}],["validators.required",{"_index":943,"title":{},"body":{"components/HeaderComponent.html":{}}}],["valider",{"_index":1582,"title":{},"body":{"interfaces/User.html":{}}}],["value",{"_index":115,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CapteurDataService.html":{},"injectables/CollecteService.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"injectables/LogsApiService.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"components/UserPageComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":300,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/AppComponent.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"components/MyAccountComponent.html":{},"components/RegisterComponent.html":{},"components/UserPageComponent.html":{}}}],["variable",{"_index":936,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["variables",{"_index":2088,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vendredi",{"_index":453,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["ventilateur",{"_index":255,"title":{},"body":{"components/AdminPageComponent.html":{},"interfaces/CapteurData.html":{},"injectables/CapteurDataService.html":{}}}],["ventilation",{"_index":2015,"title":{},"body":{"index.html":{}}}],["vers",{"_index":1766,"title":{},"body":{"components/UserPageComponent.html":{},"index.html":{}}}],["version",{"_index":2050,"title":{},"body":{"index.html":{},"properties.html":{}}}],["vert",{"_index":548,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/HeaderComponent.html":{},"index.html":{}}}],["verte",{"_index":1207,"title":{},"body":{"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"components/UserPageComponent.html":{}}}],["vertical",{"_index":1348,"title":{},"body":{"components/LogsComponent.html":{}}}],["veuillez",{"_index":1314,"title":{},"body":{"components/LogsComponent.html":{},"injectables/UserApiService.html":{}}}],["via",{"_index":1474,"title":{},"body":{"injectables/SocketService.html":{},"index.html":{}}}],["vide",{"_index":405,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["viewchild",{"_index":924,"title":{},"body":{"components/HeaderComponent.html":{},"interfaces/User.html":{}}}],["viewchild('photoinput",{"_index":918,"title":{},"body":{"components/HeaderComponent.html":{}}}],["viewchild('registermodal",{"_index":1516,"title":{},"body":{"interfaces/User.html":{}}}],["viewchild('updatemodal",{"_index":1518,"title":{},"body":{"interfaces/User.html":{}}}],["visibilit",{"_index":1031,"title":{},"body":{"components/HeaderComponent.html":{}}}],["visible",{"_index":1789,"title":{},"body":{"components/UserPageComponent.html":{}}}],["visual",{"_index":2046,"title":{},"body":{"index.html":{}}}],["visualisation",{"_index":2013,"title":{},"body":{"index.html":{}}}],["visuelle",{"_index":1201,"title":{},"body":{"components/HeaderComponent.html":{}}}],["viter",{"_index":435,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/AppComponent.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["void",{"_index":100,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"components/MyAccountComponent.html":{},"injectables/SocketService.html":{},"interfaces/User.html":{},"components/UserPageComponent.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["voir",{"_index":2083,"title":{},"body":{"index.html":{}}}],["vos",{"_index":161,"title":{},"body":{"components/AdminPageComponent.html":{}}}],["votre",{"_index":692,"title":{},"body":{"interfaces/CapteurData.html":{},"injectables/CapteurDataService.html":{},"injectables/CaptureService.html":{},"components/HeaderComponent.html":{},"components/UserPageComponent.html":{}}}],["vouloir",{"_index":1627,"title":{},"body":{"interfaces/User.html":{}}}],["vous",{"_index":734,"title":{},"body":{"injectables/CaptureService.html":{},"components/HeaderComponent.html":{},"components/MenuComponent.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["vérification",{"_index":954,"title":{},"body":{"components/HeaderComponent.html":{},"components/MenuComponent.html":{},"injectables/UserApiService.html":{}}}],["vérifie",{"_index":682,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["vérifier",{"_index":206,"title":{},"body":{"components/AdminPageComponent.html":{},"injectables/AuthService.html":{},"injectables/CollecteService.html":{},"components/HeaderComponent.html":{},"components/MenuComponent.html":{},"interfaces/User.html":{},"injectables/UserApiService.html":{},"components/UserPageComponent.html":{},"injectables/UserService.html":{}}}],["vérifiez",{"_index":999,"title":{},"body":{"components/HeaderComponent.html":{}}}],["web",{"_index":1983,"title":{},"body":{"index.html":{}}}],["websocket",{"_index":735,"title":{},"body":{"injectables/CaptureService.html":{},"injectables/SocketService.html":{},"index.html":{}}}],["week",{"_index":413,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"injectables/CapteurDataService.html":{}}}],["week.tostring",{"_index":699,"title":{},"body":{"interfaces/CapteurData.html":{},"injectables/CapteurDataService.html":{}}}],["weight",{"_index":1161,"title":{},"body":{"components/HeaderComponent.html":{},"components/MenuComponent.html":{},"components/UserPageComponent.html":{}}}],["white",{"_index":523,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{},"components/UserPageComponent.html":{}}}],["width",{"_index":529,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"components/FooterComponent.html":{},"components/HeaderComponent.html":{},"components/LogsComponent.html":{},"components/MenuComponent.html":{}}}],["window",{"_index":400,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["works",{"_index":1443,"title":{},"body":{"components/RegisterComponent.html":{}}}],["y",{"_index":474,"title":{},"body":{"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{}}}],["yakar",{"_index":838,"title":{},"body":{"components/FooterComponent.html":{},"index.html":{}}}],["yakarfront",{"_index":580,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["year",{"_index":183,"title":{},"body":{"components/AdminPageComponent.html":{},"components/AnalyseComponent.html":{},"components/AnalyseComponent-1.html":{},"interfaces/CapteurData.html":{},"interfaces/CapteurData-1.html":{},"interfaces/CapteurData-2.html":{},"injectables/CapteurDataService.html":{},"components/UserPageComponent.html":{}}}],["year.tostring",{"_index":697,"title":{},"body":{"interfaces/CapteurData.html":{},"injectables/CapteurDataService.html":{}}}],["yes",{"_index":631,"title":{},"body":{"injectables/AuthService.html":{}}}],["z",{"_index":1130,"title":{},"body":{"components/HeaderComponent.html":{}}}],["z])(?=.*[!@#$%^&*])(?=.*[0",{"_index":947,"title":{},"body":{"components/HeaderComponent.html":{}}}],["zone",{"_index":1147,"title":{},"body":{"components/HeaderComponent.html":{}}}],["zone.js",{"_index":1963,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":1950,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"guards/AdminGuard.html":{"url":"guards/AdminGuard.html","title":"guard - AdminGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AdminGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/guards/admin.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/guards/admin.guard.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/guards/admin.guard.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                route\n                                            \n                                                        ActivatedRouteSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                state\n                                            \n                                                        RouterStateSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable | Promise | boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { UserService } from '../services/user.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminGuard implements CanActivate {\n\n  constructor(private userService: UserService, private router: Router) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable | Promise | boolean {\n    const currentUser = this.userService.getCurrentUser();\n\n    if (currentUser && currentUser.role === 'admin') {\n      return true;\n    } else {\n      this.router.navigate(['/login']);\n      return false;\n    }\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdminPageComponent.html":{"url":"components/AdminPageComponent.html","title":"component - AdminPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AdminPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/pages/admin-page/admin-page.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-admin-page\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                AnalyseComponent\n                            CommonModule\n                            FormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./admin-page.component.html\n            \n\n\n\n            \n                styleUrl\n                ./admin-page.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentDateTime\n                            \n                            \n                                errorMessage\n                            \n                            \n                                fanStatus\n                            \n                            \n                                humidite\n                            \n                            \n                                humiditeData\n                            \n                            \n                                temperature\n                            \n                            \n                                temperatureData\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fetchLastDayData\n                            \n                            \n                                getHumiditeAt\n                            \n                            \n                                getTemperatureAt\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onFanToggle\n                            \n                            \n                                turnOffFan\n                            \n                            \n                                turnOnFan\n                            \n                            \n                                updateDateTime\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, capteurDataService: CapteurDataService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/pages/admin-page/admin-page.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        capteurDataService\n                                                  \n                                                        \n                                                                        CapteurDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        fetchLastDayData\n                        \n                    \n                \n            \n            \n                \nfetchLastDayData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/pages/admin-page/admin-page.component.ts:62\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHumiditeAt\n                        \n                    \n                \n            \n            \n                \ngetHumiditeAt(heure: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/pages/admin-page/admin-page.component.ts:93\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                heure\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTemperatureAt\n                        \n                    \n                \n            \n            \n                \ngetTemperatureAt(heure: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/pages/admin-page/admin-page.component.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                heure\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/pages/admin-page/admin-page.component.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onFanToggle\n                        \n                    \n                \n            \n            \n                \nonFanToggle(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/pages/admin-page/admin-page.component.ts:131\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        turnOffFan\n                        \n                    \n                \n            \n            \n                \nturnOffFan()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/pages/admin-page/admin-page.component.ts:117\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        turnOnFan\n                        \n                    \n                \n            \n            \n                \nturnOnFan()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/pages/admin-page/admin-page.component.ts:106\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateDateTime\n                        \n                    \n                \n            \n            \n                \nupdateDateTime()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/pages/admin-page/admin-page.component.ts:50\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentDateTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/pages/admin-page/admin-page.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/pages/admin-page/admin-page.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fanStatus\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/pages/admin-page/admin-page.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        humidite\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/pages/admin-page/admin-page.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        humiditeData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/pages/admin-page/admin-page.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        temperature\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/pages/admin-page/admin-page.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        temperatureData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/pages/admin-page/admin-page.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/pages/admin-page/admin-page.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { AnalyseComponent } from './analyse/analyse.component';\nimport { UserService } from '../../../services/user.service';\nimport { CapteurDataService } from '../../../services/capteur-data.service';\nimport { ChangeDetectorRef } from '@angular/core';\nimport { FormsModule } from '@angular/forms';  // Importez FormsModule\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\n\n\n@Component({\n  selector: 'app-admin-page',\n  standalone: true,\n  imports: [AnalyseComponent, CommonModule,FormsModule],\n  templateUrl: './admin-page.component.html',\n  styleUrl: './admin-page.component.css'\n})\nexport class AdminPageComponent implements OnInit{\n  fanStatus: boolean = false;\n  user: any;\n  currentDateTime: string = '';\n  temperatureData: any[] = [];  // Pour stocker les données de température récupérées\n  humiditeData: any[] = []; //\n  errorMessage: string = '';\n  temperature: number = 0;\n  humidite: number = 0;\n\n\n  constructor(private userService: UserService, private capteurDataService: CapteurDataService, private cdr: ChangeDetectorRef){}\n\n  ngOnInit(): void {\n    this.user = this.userService.getCurrentUser();\n    this.updateDateTime();\n    this.fetchLastDayData();\n\n    // Récupérer les données de l'API au démarrage du composant\n    this.capteurDataService.getCapteurData().subscribe((data) => {\n      // Prenez le dernier enregistrement de la journée (ou un autre critère selon vos besoins)\n      const latestData = data[data.length - 1]; // ou une autre logique de filtrage pour l'heure actuelle\n      this.currentDateTime = `${latestData.date} ${latestData.heure}`;\n      this.temperature = latestData.temperature;\n      this.humidite = latestData.humidite;\n    });\n\n  }\n\n\n\n  updateDateTime(): void {\n    const now = new Date();\n    const options: Intl.DateTimeFormatOptions = {\n      year: 'numeric',\n      month: 'short', // Affiche le mois sous forme abrégée (e.g., \"Nov\")\n      day: '2-digit',\n      hour: '2-digit',\n      minute: '2-digit',\n    };\n    this.currentDateTime = new Intl.DateTimeFormat('en-US', options).format(now);\n  }\n\n  fetchLastDayData(): void {\n    this.capteurDataService.getLastDayData().subscribe({\n      next: (response) => {\n        // console.log('Réponse API :', response);  // Pour vérifier la structure des données\n        this.temperatureData = response.data;\n\n        // Affiche les heures retournées pour vérifier qu'elles sont bien formatées\n        this.temperatureData.forEach((data) => {\n          // console.log('Heure retournée:', data.heure);\n        });\n      },\n      error: (error) => {\n        console.error('Erreur lors de la récupération des données :', error);\n        this.errorMessage = 'Impossible de récupérer les données.';\n      },\n    });\n  }\n\n  getTemperatureAt(heure: string): string {\n    const formattedHeure = heure.slice(0, 5); // Transforme l'heure au format \"HH:mm\"\n    // console.log('Heure formatée à rechercher:', formattedHeure);  // Affiche l'heure recherchée\n\n    const data = this.temperatureData.find((d) => {\n      const formattedDataHeure = d.heure.slice(0, 5); // Formate la donnée de l'heure pour comparaison\n      // console.log('Comparaison entre', formattedHeure, 'et', formattedDataHeure);  // Compare les heures\n      return formattedDataHeure === formattedHeure;\n    });\n\n    return data ? `${data.temperature} °C` : '...';\n  }\n\n  getHumiditeAt(heure: string): string {\n    const formattedHeure = heure.slice(0, 5); // Transforme l'heure au format \"HH:mm\"\n    // console.log('Heure formatée à rechercher pour humidité:', formattedHeure);  // Affiche l'heure recherchée\n\n    const data = this.temperatureData.find((d) => {\n      const formattedDataHeure = d.heure.slice(0, 5); // Formate la donnée de l'heure pour comparaison\n      // console.log('Comparaison entre', formattedHeure, 'et', formattedDataHeure);  // Compare les heures\n      return formattedDataHeure === formattedHeure;\n    });\n\n    return data ? `${data.humidite} %` : '...';\n  }\n\n  turnOnFan() {\n    this.capteurDataService.controlFan('ON').subscribe(\n      response => {\n        console.log('Ventilateur allumé:', response);\n      },\n      error => {\n        console.error('Erreur lors de l\\'allumage du ventilateur:', error);\n      }\n    );\n  }\n\n  turnOffFan() {\n    this.capteurDataService.controlFan('OFF').subscribe(\n      response => {\n        console.log('Ventilateur éteint:', response);\n      },\n      error => {\n        console.error('Erreur lors de l\\'extinction du ventilateur:', error);\n      }\n    );\n  }\n\n\n\n  // Méthode appelée lors du changement d'état du switch\n  onFanToggle(event: any): void {\n    const action = this.fanStatus ? 'ON' : 'OFF';  // 'ON' si true, 'OFF' si false\n\n    this.capteurDataService.controlFan(action).subscribe(\n      response => {\n        console.log(`Ventilateur ${action === 'ON' ? 'allumé' : 'éteint'}`, response);\n      },\n      error => {\n        console.error('Erreur lors du contrôle du ventilateur:', error);\n      }\n    );\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n        \n            \n                \n\n                    \n                        \n                            Salut, {{user.name}} !\n                            Bienvenue à la maison, il est humide au magasin.\n                        \n                        \n                          {{currentDateTime}}\n                          \n                            \n                            {{temperature}} °C - {{humidite}} %\n                          \n                        \n                    \n                \n            \n        \n\n        \n                \n            \n                \n                    \n                    \n                      \n                        \n                        \n                          Humidité\n                           \n                          Niveau actuel\n                        \n                        \n                          10:00 &nbsp; \n                            {{ getHumiditeAt('10:00') }}\n                          \n                          14:00 &nbsp; \n                            {{ getHumiditeAt('14:00') }}\n                          \n                          17:00 &nbsp; \n                            {{ getHumiditeAt('17:00') }}\n                          \n                        \n                        \n                             \n                            est inférieur ou égal à 27%\n                        \n                    \n                    \n                  \n\n                  \n                    \n                    \n                      \n                        \n                        \n                          Température\n                           \n                          Conditions actuelles\n                        \n                        \n                          10:00 &nbsp; \n                            {{ getTemperatureAt('10:00') }}\n                          \n                          14:00 &nbsp; \n                            {{ getTemperatureAt('14:00') }}\n                          \n                          17:00 &nbsp; \n                            {{ getTemperatureAt('17:00') }}\n                          \n                        \n                        \n                             \n                            + \n                            Est supérieur à 27°\n                        \n                    \n                    \n                  \n                \n                 \n                     \n                        \n                            \n                                \n                                \n\n                                    \n                                      \n                                        \n                                        \n                                      \n                                      {{ fanStatus ? 'Ventilateur allumé' : 'Ventilateur éteint' }}\n                                    \n                                \n\n                                \n                                \n                                    \n                                    \n                                    \n                                    \n                                \n                            \n                        \n                    \n                \n                \n            \n        \n    \n\n\n\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                        Salut, {{user.name}} !                            Bienvenue à la maison, il est humide au magasin.                                                                          {{currentDateTime}}                                                                                  {{temperature}} °C - {{humidite}} %                                                                                                                                                                                                                                                                                                      Humidité                                                     Niveau actuel                                                                          10:00                               {{ getHumiditeAt(\\'10:00\\') }}                                                    14:00                               {{ getHumiditeAt(\\'14:00\\') }}                                                    17:00                               {{ getHumiditeAt(\\'17:00\\') }}                                                                                                                                   est inférieur ou égal à 27%                                                                                                                                                                                                                                            Température                                                     Conditions actuelles                                                                          10:00                               {{ getTemperatureAt(\\'10:00\\') }}                                                    14:00                               {{ getTemperatureAt(\\'14:00\\') }}                                                    17:00                               {{ getTemperatureAt(\\'17:00\\') }}                                                                                                                                   +                             Est supérieur à 27°                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  {{ fanStatus ? \\'Ventilateur allumé\\' : \\'Ventilateur éteint\\' }}                                                                                                                                                                                                                                                                                                                                                                                                                                                      '\n    var COMPONENTS = [{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AnalyseComponent', 'selector': 'app-analyse'},{'name': 'AnalyseComponent', 'selector': 'app-analyse'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MyAccountComponent', 'selector': 'app-my-account'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'UserPageComponent', 'selector': 'app-user-page'},{'name': 'UtilisateursComponent', 'selector': 'app-utilisateurs'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AdminPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AnalyseComponent.html":{"url":"components/AnalyseComponent.html","title":"component - AnalyseComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AnalyseComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/pages/admin-page/analyse/analyse.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-analyse\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            HttpClientModule\n                            FormsModule\n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./analyse.component.css\n            \n\n\n\n            \n                templateUrl\n                ./analyse.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                capteurDataList\n                            \n                            \n                                chart\n                            \n                            \n                                groupedData\n                            \n                            \n                                limit\n                            \n                            \n                                page\n                            \n                            \n                                selectedMonth\n                            \n                            \n                                selectedWeek\n                            \n                            \n                                selectedYear\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createChart\n                            \n                            \n                                groupByDateAndHour\n                            \n                            \n                                loadData\n                            \n                            \n                                nextPage\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                previousPage\n                            \n                            \n                                updateChart\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, capteurDataService: CapteurDataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/pages/admin-page/analyse/analyse.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        capteurDataService\n                                                  \n                                                        \n                                                                        CapteurDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createChart\n                        \n                    \n                \n            \n            \n                \ncreateChart(avgTemperatures: number[], avgHumidites: number[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/pages/admin-page/analyse/analyse.component.ts:75\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                avgTemperatures\n                                            \n                                                        number[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                avgHumidites\n                                            \n                                                        number[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groupByDateAndHour\n                        \n                    \n                \n            \n            \n                \ngroupByDateAndHour()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/pages/admin-page/analyse/analyse.component.ts:131\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadData\n                        \n                    \n                \n            \n            \n                \nloadData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/pages/admin-page/analyse/analyse.component.ts:119\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nextPage\n                        \n                    \n                \n            \n            \n                \nnextPage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/pages/admin-page/analyse/analyse.component.ts:158\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/pages/admin-page/analyse/analyse.component.ts:40\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/pages/admin-page/analyse/analyse.component.ts:35\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        previousPage\n                        \n                    \n                \n            \n            \n                \npreviousPage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/pages/admin-page/analyse/analyse.component.ts:151\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateChart\n                        \n                    \n                \n            \n            \n                \nupdateChart()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/pages/admin-page/analyse/analyse.component.ts:48\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        capteurDataList\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/pages/admin-page/analyse/analyse.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chart\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/pages/admin-page/analyse/analyse.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groupedData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/pages/admin-page/analyse/analyse.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 5\n                    \n                \n                    \n                        \n                                Defined in src/app/components/pages/admin-page/analyse/analyse.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/components/pages/admin-page/analyse/analyse.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedMonth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : new Date().getMonth() + 1\n                    \n                \n                    \n                        \n                                Defined in src/app/components/pages/admin-page/analyse/analyse.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedWeek\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/components/pages/admin-page/analyse/analyse.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedYear\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : new Date().getFullYear()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/pages/admin-page/analyse/analyse.component.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, AfterViewInit } from '@angular/core';\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { Chart } from 'chart.js/auto';\nimport { CapteurDataService } from '../../../../services/capteur-data.service';\n\ninterface CapteurData {\n  date: string;\n  heure: string;\n  temperature: number | null;\n  humidite: number | null;\n}\n\n@Component({\n  selector: 'app-analyse',\n  standalone: true,\n  imports: [HttpClientModule, FormsModule, CommonModule],\n  templateUrl: './analyse.component.html',\n  styleUrls: ['./analyse.component.css'],\n})\nexport class AnalyseComponent implements OnInit {\n  selectedYear: number = new Date().getFullYear();\n  selectedMonth: number = new Date().getMonth() + 1;\n  selectedWeek: number = 1;\n  capteurDataList: any[] = [];\n  groupedData: { date: string; heure: string; temperature: number | null; humidite: number | null }[] = [];\n  page: number = 1;\n  limit: number = 5;\n\n  chart: any;\n\n  constructor(private http: HttpClient, private capteurDataService: CapteurDataService) {}\n\n  ngOnInit(): void {\n    this.loadData();\n    this.updateChart(); // On met à jour le graphique lors du chargement du composant\n  }\n\n  ngAfterViewInit(): void {\n    // Cette fonction garantit que le DOM est prêt avant de tenter d'accéder à l'élément canvas\n    if (typeof window !== 'undefined' && typeof document !== 'undefined') {\n      this.createChart([], []); // Initialisation vide avant la récupération des données\n    }\n  }\n\n  // Fonction pour mettre à jour le graphique avec les sélections de l'utilisateur\n  updateChart(): void {\n    const payload = {\n      year: this.selectedYear,\n      month: this.selectedMonth,\n      week: this.selectedWeek,\n    };\n\n    // Requête API pour récupérer les données de la semaine\n    this.http\n      .post('http://localhost:5001/api/capteurs/weekly-average', payload)\n      .subscribe({\n        next: (data: any) => {\n          console.log('Données de l\\'API :', data);  // Debugging des données\n          const avgTemperatures = data.avgTemperatures || [];\n          const avgHumidites = data.avgHumidites || [];\n          // Création du graphique avec les données récupérées\n          if (typeof window !== 'undefined' && typeof document !== 'undefined') {\n            this.createChart(avgTemperatures, avgHumidites);\n          }\n        },\n        error: (err) => {\n          console.error('Erreur lors de la récupération des données :', err);\n        },\n      });\n  }\n\n  // Fonction pour créer et afficher le graphique avec Chart.js\n  createChart(avgTemperatures: number[], avgHumidites: number[]): void {\n    // Si un graphique existe déjà, on le détruit pour éviter les doublons\n    if (this.chart) {\n      this.chart.destroy();\n    }\n\n    // Récupération de l'élément canvas dans le DOM\n    const ctx = document.getElementById('chartCanvas') as HTMLCanvasElement;\n\n    // Création du graphique avec les températures et humidités moyennes\n    this.chart = new Chart(ctx, {\n      type: 'line',\n      data: {\n        labels: ['Lundi', 'Mardi', 'Mercredi', 'Jeudi', 'Vendredi', 'Samedi', 'Dimanche'], // Jours de la semaine\n        datasets: [\n          {\n            label: 'Température moyenne (°C)',\n            data: avgTemperatures,\n            borderColor: 'rgba(255, 99, 132, 1)',\n            borderWidth: 2,\n            fill: false,\n          },\n          {\n            label: 'Humidité moyenne (%)',\n            data: avgHumidites,\n            borderColor: '#12692b',\n            backgroundColor: 'rgba(18, 105, 43, 0.5)',\n            borderWidth: 2,\n            fill: false,\n          },\n        ],\n      },\n      options: {\n        responsive: true,\n        scales: {\n          y: {\n            beginAtZero: true,\n          },\n        },\n      },\n    });\n  }\n\n  // Charger les données avec pagination\n  loadData() {\n    this.capteurDataService.getCapteurDatas(this.page, this.limit).subscribe(\n      (response: { data: CapteurData[] }) => {\n        this.capteurDataList = response.data;\n        this.groupByDateAndHour();\n      },\n      (error) => {\n        console.error('Erreur lors du chargement des données:', error);\n      }\n    );\n  }\n\n  groupByDateAndHour() {\n    const grouped: { [key: string]: { date: string; heure: string; temperature: number | null; humidite: number | null } } = {};\n    this.capteurDataList.forEach((item: CapteurData) => {\n      const key = `${item.date}-${item.heure}`;\n      if (!grouped[key]) {\n        grouped[key] = { date: item.date, heure: item.heure, temperature: null, humidite: null };\n      }\n      if (item.temperature !== null) grouped[key].temperature = item.temperature;\n      if (item.humidite !== null) grouped[key].humidite = item.humidite;\n    });\n\n    this.groupedData = Object.values(grouped)\n      .filter((entry) => entry.temperature !== null && entry.humidite !== null)\n      .sort((a, b) => {\n        if (a.date > b.date) return -1;\n        if (a.date  b.heure ? -1 : 1;\n      });\n  }\n\n  previousPage() {\n    if (this.page > 1) {\n      this.page--;\n      this.loadData();\n    }\n  }\n\n  nextPage() {\n    this.page++;\n    this.loadData();\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n      \n        \n          Choisissez les paramètres\n        \n        \n          \n            Année :\n            \n              {{ year }}\n            \n          \n          \n            Mois :\n            \n              {{ month }}\n            \n          \n          \n            Semaine :\n            \n              {{ week }}\n            \n          \n        \n      \n\n      \n      \n        \n          La température et l’humidité moyenne de la semaine\n        \n        \n          \n        \n      \n    \n\n    \n    \n      \n        \n          Liste des données\n        \n        \n          \n            Aucune donnée disponible.\n          \n           0\">\n            \n               Date : {{ data.date }}\n               Heure : {{ data.heure }}\n               Température : {{ data.temperature }} °C\n               Humidité : {{ data.humidite }} %\n            \n          \n        \n\n        \n        \n          \n            \n          \n          Page {{ page }}\n          \n            \n          \n        \n      \n    \n\n  \n\n\n    \n\n    \n                \n                    ./analyse.component.css\n                \n                \ncanvas {\n  margin-top: 20px;\n  border-radius: 10px; /* Coins arrondis */\n  background-color: #1e1e1e; /* Fond du graphique */\n  color: white; /* Texte blanc */\n\n}\n\n.chart-container {\n  height: 400px;\n  width: 100%;\n}\n\n.card {\nmargin-bottom: 20px;\n}\n\n.list-group-item {\npadding: 15px;\nborder-radius: 5px;\n}\n\n.text-center {\nmargin-top: 20px;\n}\n\n.bg-dark {\nbackground-color: #000 !important; /* Fond noir */\n}\n\n.text-success {\ncolor: #28a745 !important; /* Texte vert */\n}\n\n.list-group-item.bg-dark {\nbackground-color: #000 !important; /* Fond noir pour chaque élément */\n}\n\n.list-group-item.text-success {\ncolor: #28a745 !important; /* Texte vert pour chaque élément */\n}\n\n.border-secondary {\nborder-color: #6c757d !important; /* Bordure grise */\n}\n\n#graph{\nwidth: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Choisissez les paramètres                                      Année :                          {{ year }}                                            Mois :                          {{ month }}                                            Semaine :                          {{ week }}                                                                  La température et l’humidité moyenne de la semaine                                                                            Liste des données                                      Aucune donnée disponible.                     0\">                           Date : {{ data.date }}               Heure : {{ data.heure }}               Température : {{ data.temperature }} °C               Humidité : {{ data.humidite }} %                                                                                        Page {{ page }}                                                    '\n    var COMPONENTS = [{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AnalyseComponent', 'selector': 'app-analyse'},{'name': 'AnalyseComponent', 'selector': 'app-analyse'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MyAccountComponent', 'selector': 'app-my-account'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'UserPageComponent', 'selector': 'app-user-page'},{'name': 'UtilisateursComponent', 'selector': 'app-utilisateurs'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AnalyseComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AnalyseComponent-1.html":{"url":"components/AnalyseComponent-1.html","title":"component - AnalyseComponent-1","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AnalyseComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/pages/user-page/analyse/analyse.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-analyse\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            HttpClientModule\n                            FormsModule\n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./analyse.component.css\n            \n\n\n\n            \n                templateUrl\n                ./analyse.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                capteurDataList\n                            \n                            \n                                chart\n                            \n                            \n                                groupedData\n                            \n                            \n                                limit\n                            \n                            \n                                page\n                            \n                            \n                                selectedMonth\n                            \n                            \n                                selectedWeek\n                            \n                            \n                                selectedYear\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createChart\n                            \n                            \n                                groupByDateAndHour\n                            \n                            \n                                loadData\n                            \n                            \n                                nextPage\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                previousPage\n                            \n                            \n                                updateChart\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, capteurDataService: CapteurDataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/pages/user-page/analyse/analyse.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        capteurDataService\n                                                  \n                                                        \n                                                                        CapteurDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createChart\n                        \n                    \n                \n            \n            \n                \ncreateChart(avgTemperatures: number[], avgHumidites: number[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/pages/user-page/analyse/analyse.component.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                avgTemperatures\n                                            \n                                                        number[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                avgHumidites\n                                            \n                                                        number[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groupByDateAndHour\n                        \n                    \n                \n            \n            \n                \ngroupByDateAndHour()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/pages/user-page/analyse/analyse.component.ts:132\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadData\n                        \n                    \n                \n            \n            \n                \nloadData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/pages/user-page/analyse/analyse.component.ts:120\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nextPage\n                        \n                    \n                \n            \n            \n                \nnextPage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/pages/user-page/analyse/analyse.component.ts:159\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/pages/user-page/analyse/analyse.component.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/pages/user-page/analyse/analyse.component.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        previousPage\n                        \n                    \n                \n            \n            \n                \npreviousPage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/pages/user-page/analyse/analyse.component.ts:152\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateChart\n                        \n                    \n                \n            \n            \n                \nupdateChart()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/pages/user-page/analyse/analyse.component.ts:49\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        capteurDataList\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/pages/user-page/analyse/analyse.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chart\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/pages/user-page/analyse/analyse.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groupedData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/pages/user-page/analyse/analyse.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        limit\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 5\n                    \n                \n                    \n                        \n                                Defined in src/app/components/pages/user-page/analyse/analyse.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/components/pages/user-page/analyse/analyse.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedMonth\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : new Date().getMonth() + 1\n                    \n                \n                    \n                        \n                                Defined in src/app/components/pages/user-page/analyse/analyse.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedWeek\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/components/pages/user-page/analyse/analyse.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedYear\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : new Date().getFullYear()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/pages/user-page/analyse/analyse.component.ts:24\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { Chart } from 'chart.js/auto';\nimport { CapteurDataService } from '../../../../services/capteur-data.service';\n\ninterface CapteurData {\n  date: string;\n  heure: string;\n  temperature: number | null;\n  humidite: number | null;\n}\n\n\n@Component({\n  selector: 'app-analyse',\n  standalone: true,\n  imports: [HttpClientModule, FormsModule, CommonModule],\n  templateUrl: './analyse.component.html',\n  styleUrls: ['./analyse.component.css'],\n})\nexport class AnalyseComponent implements OnInit {\n  selectedYear: number = new Date().getFullYear();\n  selectedMonth: number = new Date().getMonth() + 1;\n  selectedWeek: number = 1;\n  capteurDataList: any[] = [];\n  groupedData: { date: string; heure: string; temperature: number | null; humidite: number | null }[] = [];\n  page: number = 1;\n  limit: number = 5;\n\n  chart: any;\n\n  constructor(private http: HttpClient, private capteurDataService: CapteurDataService) {}\n\n  ngOnInit(): void {\n    this.loadData();\n    this.updateChart(); // On met à jour le graphique lors du chargement du composant\n  }\n\n  ngAfterViewInit(): void {\n    // Cette fonction garantit que le DOM est prêt avant de tenter d'accéder à l'élément canvas\n    if (typeof window !== 'undefined' && typeof document !== 'undefined') {\n      this.createChart([], []); // Initialisation vide avant la récupération des données\n    }\n  }\n\n  // Fonction pour mettre à jour le graphique avec les sélections de l'utilisateur\n  updateChart(): void {\n    const payload = {\n      year: this.selectedYear,\n      month: this.selectedMonth,\n      week: this.selectedWeek,\n    };\n\n    // Requête API pour récupérer les données de la semaine\n    this.http\n      .post('http://localhost:5001/api/capteurs/weekly-average', payload)\n      .subscribe({\n        next: (data: any) => {\n          console.log('Données de l\\'API :', data);  // Debugging des données\n          const avgTemperatures = data.avgTemperatures || [];\n          const avgHumidites = data.avgHumidites || [];\n          // Création du graphique avec les données récupérées\n          if (typeof window !== 'undefined' && typeof document !== 'undefined') {\n            this.createChart(avgTemperatures, avgHumidites);\n          }\n        },\n        error: (err) => {\n          console.error('Erreur lors de la récupération des données :', err);\n        },\n      });\n  }\n\n  // Fonction pour créer et afficher le graphique avec Chart.js\n  createChart(avgTemperatures: number[], avgHumidites: number[]): void {\n    // Si un graphique existe déjà, on le détruit pour éviter les doublons\n    if (this.chart) {\n      this.chart.destroy();\n    }\n\n    // Récupération de l'élément canvas dans le DOM\n    const ctx = document.getElementById('chartCanvas') as HTMLCanvasElement;\n\n    // Création du graphique avec les températures et humidités moyennes\n    this.chart = new Chart(ctx, {\n      type: 'line',\n      data: {\n        labels: ['Lundi', 'Mardi', 'Mercredi', 'Jeudi', 'Vendredi', 'Samedi', 'Dimanche'], // Jours de la semaine\n        datasets: [\n          {\n            label: 'Température moyenne (°C)',\n            data: avgTemperatures,\n            borderColor: 'rgba(255, 99, 132, 1)',\n            borderWidth: 2,\n            fill: false,\n          },\n          {\n            label: 'Humidité moyenne (%)',\n            data: avgHumidites,\n            borderColor: '#12692b',\n            backgroundColor: 'rgba(18, 105, 43, 0.5)',\n            borderWidth: 2,\n            fill: false,\n          },\n        ],\n      },\n      options: {\n        responsive: true,\n        scales: {\n          y: {\n            beginAtZero: true,\n          },\n        },\n      },\n    });\n  }\n\n  // Charger les données avec pagination\n  loadData() {\n    this.capteurDataService.getCapteurDatas(this.page, this.limit).subscribe(\n      (response: { data: CapteurData[] }) => {\n        this.capteurDataList = response.data;\n        this.groupByDateAndHour();\n      },\n      (error) => {\n        console.error('Erreur lors du chargement des données:', error);\n      }\n    );\n  }\n\n  groupByDateAndHour() {\n    const grouped: { [key: string]: { date: string; heure: string; temperature: number | null; humidite: number | null } } = {};\n    this.capteurDataList.forEach((item: CapteurData) => {\n      const key = `${item.date}-${item.heure}`;\n      if (!grouped[key]) {\n        grouped[key] = { date: item.date, heure: item.heure, temperature: null, humidite: null };\n      }\n      if (item.temperature !== null) grouped[key].temperature = item.temperature;\n      if (item.humidite !== null) grouped[key].humidite = item.humidite;\n    });\n\n    this.groupedData = Object.values(grouped)\n      .filter((entry) => entry.temperature !== null && entry.humidite !== null)\n      .sort((a, b) => {\n        if (a.date > b.date) return -1;\n        if (a.date  b.heure ? -1 : 1;\n      });\n  }\n\n  previousPage() {\n    if (this.page > 1) {\n      this.page--;\n      this.loadData();\n    }\n  }\n\n  nextPage() {\n    this.page++;\n    this.loadData();\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n      \n        \n          Choisissez les paramètres\n        \n        \n          \n            Année :\n            \n              {{ year }}\n            \n          \n          \n            Mois :\n            \n              {{ month }}\n            \n          \n          \n            Semaine :\n            \n              {{ week }}\n            \n          \n        \n      \n\n      \n      \n        \n          La température et l’humidité moyenne de la semaine\n        \n        \n          \n        \n      \n    \n\n    \n    \n      \n        \n          Liste des données\n        \n        \n          \n            Aucune donnée disponible.\n          \n           0\">\n            \n               Date : {{ data.date }}\n               Heure : {{ data.heure }}\n               Température : {{ data.temperature }} °C\n               Humidité : {{ data.humidite }} %\n            \n          \n        \n\n        \n        \n          \n            \n          \n          Page {{ page }}\n          \n            \n          \n        \n      \n    \n\n  \n\n\n    \n\n    \n                \n                    ./analyse.component.css\n                \n                \n  canvas {\n    margin-top: 20px;\n    border-radius: 10px; /* Coins arrondis */\n    background-color: #1e1e1e; /* Fond du graphique */\n    color: white; /* Texte blanc */\n\n  }\n\n  .chart-container {\n    height: 400px;\n    width: 100%;\n}\n\n.card {\n  margin-bottom: 20px;\n}\n\n.list-group-item {\n  padding: 15px;\n  border-radius: 5px;\n}\n\n.text-center {\n  margin-top: 20px;\n}\n\n.bg-dark {\n  background-color: #000 !important; /* Fond noir */\n}\n\n.text-success {\n  color: #28a745 !important; /* Texte vert */\n}\n\n.list-group-item.bg-dark {\n  background-color: #000 !important; /* Fond noir pour chaque élément */\n}\n\n.list-group-item.text-success,.h4 {\n  color: #28a745 !important; /* Texte vert pour chaque élément */\n}\n\n.border-secondary {\n  border-color: #6c757d !important; /* Bordure grise */\n}\n\n#graph{\n  width: 100%;\n}\n#h4{\n  color: green\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Choisissez les paramètres                                      Année :                          {{ year }}                                            Mois :                          {{ month }}                                            Semaine :                          {{ week }}                                                                  La température et l’humidité moyenne de la semaine                                                                            Liste des données                                      Aucune donnée disponible.                     0\">                           Date : {{ data.date }}               Heure : {{ data.heure }}               Température : {{ data.temperature }} °C               Humidité : {{ data.humidite }} %                                                                                        Page {{ page }}                                                    '\n    var COMPONENTS = [{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AnalyseComponent', 'selector': 'app-analyse'},{'name': 'AnalyseComponent', 'selector': 'app-analyse'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MyAccountComponent', 'selector': 'app-my-account'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'UserPageComponent', 'selector': 'app-user-page'},{'name': 'UtilisateursComponent', 'selector': 'app-utilisateurs'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AnalyseComponent-1'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterOutlet\n                                HeaderComponent\n                                FooterComponent\n                                MenuComponent\n                            HttpClientModule\n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                showLayout\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        showLayout\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'yakarFront'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { RouterOutlet } from '@angular/router';\nimport { HeaderComponent } from './components/header/header.component';\nimport { FooterComponent } from './components/footer/footer.component';\nimport { MenuComponent } from './components/menu/menu.component';\nimport { CommonModule } from '@angular/common'; // Ajout du CommonModule pour *ngIf\nimport { HttpClientModule } from '@angular/common/http';\n\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [\n    RouterOutlet,\n    HeaderComponent,\n    FooterComponent,\n    MenuComponent,\n    HttpClientModule,\n    CommonModule, // Nécessaire pour utiliser *ngIf\n  ],\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n  title = 'yakarFront';\n  showLayout = true; // Contrôle l'affichage des composants globaux\n\n  constructor(private router: Router) {\n    this.router.events.subscribe((event) => {\n      if (event instanceof NavigationEnd) {\n        // Normalisez l'URL pour éviter les conflits (redirections, query params)\n        const cleanUrl = event.urlAfterRedirects.split('?')[0];\n        const noLayoutRoutes = ['/', '/login', '/register']; // Routes sans layout\n        this.showLayout = !noLayoutRoutes.includes(cleanUrl);\n      }\n    });\n  }\n\n}\n\n    \n\n    \n        \n  \n  \n\n  \n  \n\n  \n  \n    \n  \n\n  \n  \n\n\n    \n\n    \n                \n                    ./app.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                      '\n    var COMPONENTS = [{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AnalyseComponent', 'selector': 'app-analyse'},{'name': 'AnalyseComponent', 'selector': 'app-analyse'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MyAccountComponent', 'selector': 'app-my-account'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'UserPageComponent', 'selector': 'app-user-page'},{'name': 'UtilisateursComponent', 'selector': 'app-utilisateurs'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                isAdminUser\n                            \n                            \n                                    Private\n                                loggedIn\n                            \n                            \n                                    Private\n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkEmailExistence\n                            \n                            \n                                getUser\n                            \n                            \n                                isAdmin\n                            \n                            \n                                isLoggedIn\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkEmailExistence\n                        \n                    \n                \n            \n            \n                \ncheckEmailExistence(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n            \n                \ngetUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:81\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAdmin\n                        \n                    \n                \n            \n            \n                \nisAdmin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:76\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoggedIn\n                        \n                    \n                \n            \n            \n                \nisLoggedIn()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:71\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(email?: string, password?: string, secretCode?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                secretCode\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/auth.service.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isAdminUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loggedIn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/services/auth.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport axios from '../config/axios-config'; // Import de l'instance Axios configurée\nimport { from, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private user: any = null;  // Déclaration de la propriété user\n  private loggedIn: boolean = false;\n  private isAdminUser: boolean = false;\n\n  // Méthode pour vérifier si l'email existe\n    checkEmailExistence(email: string): Promise {\n      return axios.post('/auth/check-email', { email });\n    }\n\n  // Méthode de connexion\n  login(email?: string, password?: string, secretCode?: string): Observable {\n    const loginData: any = {};\n\n    if (email && password) {\n      loginData.email = email;\n      loginData.password = password;\n    } else if (secretCode) {\n      loginData.secretCode = secretCode;\n    } else {\n      return from(Promise.reject('Veuillez fournir un email/mot de passe ou un code secret.'));\n    }\n\n    const promise = axios.post('/auth/login', loginData)\n      .then(response => {\n        this.user = response.data.user;\n        this.loggedIn = true;\n        this.isAdminUser = this.user.role === 'admin';\n        return this.user;\n      })\n      .catch(error => {\n        if (error.response) {\n          throw error.response.data;\n        } else if (error.request) {\n          throw new Error('Aucune réponse du serveur');\n        } else {\n          throw new Error('Erreur dans la configuration de la requête');\n        }\n      });\n\n    return from(promise); // Conversion de la *Promise* en `Observable`\n  }\n\n  // Méthode de déconnexion\n  logout(): Promise {\n    return axios.post('/auth/logout') // Appelle l'endpoint de déconnexion\n      .then(() => {\n        this.user = null;             // Réinitialiser l'utilisateur localement\n        this.loggedIn = false;        // Mettre à jour le statut de connexion\n        this.isAdminUser = false;     // Réinitialiser le statut admin\n      })\n      .catch(error => {\n        if (error.response) {\n          throw error.response.data;\n        } else if (error.request) {\n          throw new Error('Aucune réponse du serveur lors de la déconnexion');\n        } else {\n          throw new Error('Erreur dans la configuration de la requête de déconnexion');\n        }\n      });\n  }\n\n  // Vérifie si l'utilisateur est connecté\n  isLoggedIn(): boolean {\n    return this.loggedIn;\n  }\n\n  // Vérifie si l'utilisateur est un admin\n  isAdmin(): boolean {\n    return this.isAdminUser;\n  }\n\n  // Récupère les informations de l'utilisateur connecté\n  getUser(): any {\n    return this.user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CapteurData.html":{"url":"interfaces/CapteurData.html","title":"interface - CapteurData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CapteurData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/capteur-data.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            date\n                                        \n                                \n                                \n                                        \n                                            heure\n                                        \n                                \n                                \n                                        \n                                            humidite\n                                        \n                                \n                                \n                                        \n                                            temperature\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        heure\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        heure:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        humidite\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        humidite:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        temperature\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        temperature:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\ninterface CapteurData {\n  date: string;\n  heure: string;\n  temperature: number;\n  humidite: number;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CapteurDataService {\n  private baseUrl = 'http://localhost:5001/api/capteurs'; // URL de votre backend\n\n  constructor(private http: HttpClient) {}\n\n  getWeeklyAverages(year: number, month: number, week: number): Observable {\n    return this.http.get(`${this.baseUrl}/weekly-averages`, {\n      params: { year: year.toString(), month: month.toString(), week: week.toString() },\n    });\n  }\n\n  getLastDayData(): Observable {\n    return this.http.get(`${this.baseUrl}/last-day-data`);\n  }\n\n  // Méthode pour récupérer les données de température et humidité\n  getCapteurData(): Observable {\n    return this.http.get(`${this.baseUrl}/realTime`); // Changez cette route selon votre API\n  }\n\n  // Méthode pour contrôler l'état du ventilateur\n  // Méthode pour contrôler le ventilateur\n  controlFan(action: 'ON' | 'OFF'): Observable {\n    return this.http.post(`${this.baseUrl}/control-fan`, { action });\n  }\n\n  // Méthode pour récupérer les données des capteurs avec pagination\n  getCapteurDatas(page: number, limit: number): Observable {\n    return this.http.get(`${this.baseUrl}/data`, {\n      params: { page: page.toString(), limit: limit.toString() },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CapteurData-1.html":{"url":"interfaces/CapteurData-1.html","title":"interface - CapteurData-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CapteurData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/pages/admin-page/analyse/analyse.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            date\n                                        \n                                \n                                \n                                        \n                                            heure\n                                        \n                                \n                                \n                                        \n                                            humidite\n                                        \n                                \n                                \n                                        \n                                            temperature\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        heure\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        heure:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        humidite\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        humidite:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        temperature\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        temperature:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, AfterViewInit } from '@angular/core';\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { Chart } from 'chart.js/auto';\nimport { CapteurDataService } from '../../../../services/capteur-data.service';\n\ninterface CapteurData {\n  date: string;\n  heure: string;\n  temperature: number | null;\n  humidite: number | null;\n}\n\n@Component({\n  selector: 'app-analyse',\n  standalone: true,\n  imports: [HttpClientModule, FormsModule, CommonModule],\n  templateUrl: './analyse.component.html',\n  styleUrls: ['./analyse.component.css'],\n})\nexport class AnalyseComponent implements OnInit {\n  selectedYear: number = new Date().getFullYear();\n  selectedMonth: number = new Date().getMonth() + 1;\n  selectedWeek: number = 1;\n  capteurDataList: any[] = [];\n  groupedData: { date: string; heure: string; temperature: number | null; humidite: number | null }[] = [];\n  page: number = 1;\n  limit: number = 5;\n\n  chart: any;\n\n  constructor(private http: HttpClient, private capteurDataService: CapteurDataService) {}\n\n  ngOnInit(): void {\n    this.loadData();\n    this.updateChart(); // On met à jour le graphique lors du chargement du composant\n  }\n\n  ngAfterViewInit(): void {\n    // Cette fonction garantit que le DOM est prêt avant de tenter d'accéder à l'élément canvas\n    if (typeof window !== 'undefined' && typeof document !== 'undefined') {\n      this.createChart([], []); // Initialisation vide avant la récupération des données\n    }\n  }\n\n  // Fonction pour mettre à jour le graphique avec les sélections de l'utilisateur\n  updateChart(): void {\n    const payload = {\n      year: this.selectedYear,\n      month: this.selectedMonth,\n      week: this.selectedWeek,\n    };\n\n    // Requête API pour récupérer les données de la semaine\n    this.http\n      .post('http://localhost:5001/api/capteurs/weekly-average', payload)\n      .subscribe({\n        next: (data: any) => {\n          console.log('Données de l\\'API :', data);  // Debugging des données\n          const avgTemperatures = data.avgTemperatures || [];\n          const avgHumidites = data.avgHumidites || [];\n          // Création du graphique avec les données récupérées\n          if (typeof window !== 'undefined' && typeof document !== 'undefined') {\n            this.createChart(avgTemperatures, avgHumidites);\n          }\n        },\n        error: (err) => {\n          console.error('Erreur lors de la récupération des données :', err);\n        },\n      });\n  }\n\n  // Fonction pour créer et afficher le graphique avec Chart.js\n  createChart(avgTemperatures: number[], avgHumidites: number[]): void {\n    // Si un graphique existe déjà, on le détruit pour éviter les doublons\n    if (this.chart) {\n      this.chart.destroy();\n    }\n\n    // Récupération de l'élément canvas dans le DOM\n    const ctx = document.getElementById('chartCanvas') as HTMLCanvasElement;\n\n    // Création du graphique avec les températures et humidités moyennes\n    this.chart = new Chart(ctx, {\n      type: 'line',\n      data: {\n        labels: ['Lundi', 'Mardi', 'Mercredi', 'Jeudi', 'Vendredi', 'Samedi', 'Dimanche'], // Jours de la semaine\n        datasets: [\n          {\n            label: 'Température moyenne (°C)',\n            data: avgTemperatures,\n            borderColor: 'rgba(255, 99, 132, 1)',\n            borderWidth: 2,\n            fill: false,\n          },\n          {\n            label: 'Humidité moyenne (%)',\n            data: avgHumidites,\n            borderColor: '#12692b',\n            backgroundColor: 'rgba(18, 105, 43, 0.5)',\n            borderWidth: 2,\n            fill: false,\n          },\n        ],\n      },\n      options: {\n        responsive: true,\n        scales: {\n          y: {\n            beginAtZero: true,\n          },\n        },\n      },\n    });\n  }\n\n  // Charger les données avec pagination\n  loadData() {\n    this.capteurDataService.getCapteurDatas(this.page, this.limit).subscribe(\n      (response: { data: CapteurData[] }) => {\n        this.capteurDataList = response.data;\n        this.groupByDateAndHour();\n      },\n      (error) => {\n        console.error('Erreur lors du chargement des données:', error);\n      }\n    );\n  }\n\n  groupByDateAndHour() {\n    const grouped: { [key: string]: { date: string; heure: string; temperature: number | null; humidite: number | null } } = {};\n    this.capteurDataList.forEach((item: CapteurData) => {\n      const key = `${item.date}-${item.heure}`;\n      if (!grouped[key]) {\n        grouped[key] = { date: item.date, heure: item.heure, temperature: null, humidite: null };\n      }\n      if (item.temperature !== null) grouped[key].temperature = item.temperature;\n      if (item.humidite !== null) grouped[key].humidite = item.humidite;\n    });\n\n    this.groupedData = Object.values(grouped)\n      .filter((entry) => entry.temperature !== null && entry.humidite !== null)\n      .sort((a, b) => {\n        if (a.date > b.date) return -1;\n        if (a.date  b.heure ? -1 : 1;\n      });\n  }\n\n  previousPage() {\n    if (this.page > 1) {\n      this.page--;\n      this.loadData();\n    }\n  }\n\n  nextPage() {\n    this.page++;\n    this.loadData();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CapteurData-2.html":{"url":"interfaces/CapteurData-2.html","title":"interface - CapteurData-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CapteurData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/pages/user-page/analyse/analyse.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            date\n                                        \n                                \n                                \n                                        \n                                            heure\n                                        \n                                \n                                \n                                        \n                                            humidite\n                                        \n                                \n                                \n                                        \n                                            temperature\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        heure\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        heure:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        humidite\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        humidite:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        temperature\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        temperature:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { Chart } from 'chart.js/auto';\nimport { CapteurDataService } from '../../../../services/capteur-data.service';\n\ninterface CapteurData {\n  date: string;\n  heure: string;\n  temperature: number | null;\n  humidite: number | null;\n}\n\n\n@Component({\n  selector: 'app-analyse',\n  standalone: true,\n  imports: [HttpClientModule, FormsModule, CommonModule],\n  templateUrl: './analyse.component.html',\n  styleUrls: ['./analyse.component.css'],\n})\nexport class AnalyseComponent implements OnInit {\n  selectedYear: number = new Date().getFullYear();\n  selectedMonth: number = new Date().getMonth() + 1;\n  selectedWeek: number = 1;\n  capteurDataList: any[] = [];\n  groupedData: { date: string; heure: string; temperature: number | null; humidite: number | null }[] = [];\n  page: number = 1;\n  limit: number = 5;\n\n  chart: any;\n\n  constructor(private http: HttpClient, private capteurDataService: CapteurDataService) {}\n\n  ngOnInit(): void {\n    this.loadData();\n    this.updateChart(); // On met à jour le graphique lors du chargement du composant\n  }\n\n  ngAfterViewInit(): void {\n    // Cette fonction garantit que le DOM est prêt avant de tenter d'accéder à l'élément canvas\n    if (typeof window !== 'undefined' && typeof document !== 'undefined') {\n      this.createChart([], []); // Initialisation vide avant la récupération des données\n    }\n  }\n\n  // Fonction pour mettre à jour le graphique avec les sélections de l'utilisateur\n  updateChart(): void {\n    const payload = {\n      year: this.selectedYear,\n      month: this.selectedMonth,\n      week: this.selectedWeek,\n    };\n\n    // Requête API pour récupérer les données de la semaine\n    this.http\n      .post('http://localhost:5001/api/capteurs/weekly-average', payload)\n      .subscribe({\n        next: (data: any) => {\n          console.log('Données de l\\'API :', data);  // Debugging des données\n          const avgTemperatures = data.avgTemperatures || [];\n          const avgHumidites = data.avgHumidites || [];\n          // Création du graphique avec les données récupérées\n          if (typeof window !== 'undefined' && typeof document !== 'undefined') {\n            this.createChart(avgTemperatures, avgHumidites);\n          }\n        },\n        error: (err) => {\n          console.error('Erreur lors de la récupération des données :', err);\n        },\n      });\n  }\n\n  // Fonction pour créer et afficher le graphique avec Chart.js\n  createChart(avgTemperatures: number[], avgHumidites: number[]): void {\n    // Si un graphique existe déjà, on le détruit pour éviter les doublons\n    if (this.chart) {\n      this.chart.destroy();\n    }\n\n    // Récupération de l'élément canvas dans le DOM\n    const ctx = document.getElementById('chartCanvas') as HTMLCanvasElement;\n\n    // Création du graphique avec les températures et humidités moyennes\n    this.chart = new Chart(ctx, {\n      type: 'line',\n      data: {\n        labels: ['Lundi', 'Mardi', 'Mercredi', 'Jeudi', 'Vendredi', 'Samedi', 'Dimanche'], // Jours de la semaine\n        datasets: [\n          {\n            label: 'Température moyenne (°C)',\n            data: avgTemperatures,\n            borderColor: 'rgba(255, 99, 132, 1)',\n            borderWidth: 2,\n            fill: false,\n          },\n          {\n            label: 'Humidité moyenne (%)',\n            data: avgHumidites,\n            borderColor: '#12692b',\n            backgroundColor: 'rgba(18, 105, 43, 0.5)',\n            borderWidth: 2,\n            fill: false,\n          },\n        ],\n      },\n      options: {\n        responsive: true,\n        scales: {\n          y: {\n            beginAtZero: true,\n          },\n        },\n      },\n    });\n  }\n\n  // Charger les données avec pagination\n  loadData() {\n    this.capteurDataService.getCapteurDatas(this.page, this.limit).subscribe(\n      (response: { data: CapteurData[] }) => {\n        this.capteurDataList = response.data;\n        this.groupByDateAndHour();\n      },\n      (error) => {\n        console.error('Erreur lors du chargement des données:', error);\n      }\n    );\n  }\n\n  groupByDateAndHour() {\n    const grouped: { [key: string]: { date: string; heure: string; temperature: number | null; humidite: number | null } } = {};\n    this.capteurDataList.forEach((item: CapteurData) => {\n      const key = `${item.date}-${item.heure}`;\n      if (!grouped[key]) {\n        grouped[key] = { date: item.date, heure: item.heure, temperature: null, humidite: null };\n      }\n      if (item.temperature !== null) grouped[key].temperature = item.temperature;\n      if (item.humidite !== null) grouped[key].humidite = item.humidite;\n    });\n\n    this.groupedData = Object.values(grouped)\n      .filter((entry) => entry.temperature !== null && entry.humidite !== null)\n      .sort((a, b) => {\n        if (a.date > b.date) return -1;\n        if (a.date  b.heure ? -1 : 1;\n      });\n  }\n\n  previousPage() {\n    if (this.page > 1) {\n      this.page--;\n      this.loadData();\n    }\n  }\n\n  nextPage() {\n    this.page++;\n    this.loadData();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CapteurDataService.html":{"url":"injectables/CapteurDataService.html","title":"injectable - CapteurDataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CapteurDataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/capteur-data.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                baseUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                controlFan\n                            \n                            \n                                getCapteurData\n                            \n                            \n                                getCapteurDatas\n                            \n                            \n                                getLastDayData\n                            \n                            \n                                getWeeklyAverages\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/capteur-data.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        controlFan\n                        \n                    \n                \n            \n            \n                \ncontrolFan(action: \"ON\" | \"OFF\")\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/capteur-data.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                action\n                                            \n                                                        \"ON\" | \"OFF\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCapteurData\n                        \n                    \n                \n            \n            \n                \ngetCapteurData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/capteur-data.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCapteurDatas\n                        \n                    \n                \n            \n            \n                \ngetCapteurDatas(page: number, limit: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/capteur-data.service.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLastDayData\n                        \n                    \n                \n            \n            \n                \ngetLastDayData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/capteur-data.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getWeeklyAverages\n                        \n                    \n                \n            \n            \n                \ngetWeeklyAverages(year: number, month: number, week: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/capteur-data.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                year\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                month\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                week\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://localhost:5001/api/capteurs'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/capteur-data.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\ninterface CapteurData {\n  date: string;\n  heure: string;\n  temperature: number;\n  humidite: number;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CapteurDataService {\n  private baseUrl = 'http://localhost:5001/api/capteurs'; // URL de votre backend\n\n  constructor(private http: HttpClient) {}\n\n  getWeeklyAverages(year: number, month: number, week: number): Observable {\n    return this.http.get(`${this.baseUrl}/weekly-averages`, {\n      params: { year: year.toString(), month: month.toString(), week: week.toString() },\n    });\n  }\n\n  getLastDayData(): Observable {\n    return this.http.get(`${this.baseUrl}/last-day-data`);\n  }\n\n  // Méthode pour récupérer les données de température et humidité\n  getCapteurData(): Observable {\n    return this.http.get(`${this.baseUrl}/realTime`); // Changez cette route selon votre API\n  }\n\n  // Méthode pour contrôler l'état du ventilateur\n  // Méthode pour contrôler le ventilateur\n  controlFan(action: 'ON' | 'OFF'): Observable {\n    return this.http.post(`${this.baseUrl}/control-fan`, { action });\n  }\n\n  // Méthode pour récupérer les données des capteurs avec pagination\n  getCapteurDatas(page: number, limit: number): Observable {\n    return this.http.get(`${this.baseUrl}/data`, {\n      params: { page: page.toString(), limit: limit.toString() },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CaptureService.html":{"url":"injectables/CaptureService.html","title":"injectable - CaptureService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CaptureService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/capture.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                socket\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                listenToRealTimeData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/capture.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        listenToRealTimeData\n                        \n                    \n                \n            \n            \n                \nlistenToRealTimeData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/capture.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        socket\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/capture.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { io } from 'socket.io-client';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CaptureService {\n  private socket: any;\n\n  constructor() {\n    // Assurez-vous que l'URL de votre serveur WebSocket est correcte\n    this.socket = io('http://localhost:3000'); // Remplacez par l'URL de votre serveur\n  }\n\n  // Méthode pour écouter les données en temps réel\n  listenToRealTimeData(): Observable {\n    return new Observable((observer) => {\n      this.socket.on('nouvelleDonnee', (data: any) => {\n        observer.next(data); // Émettre les données reçues du serveur\n      });\n\n      // Gérer les erreurs WebSocket si nécessaire\n      this.socket.on('error', (error: any) => {\n        observer.error(error);\n      });\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CollecteService.html":{"url":"injectables/CollecteService.html","title":"injectable - CollecteService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CollecteService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/collecte.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getAllData\n                            \n                            \n                                    Async\n                                getCurrentMonthData\n                            \n                            \n                                    Async\n                                getDailyAverage\n                            \n                            \n                                    Async\n                                getDataById\n                            \n                            \n                                    Async\n                                getDataForWeek\n                            \n                            \n                                    Async\n                                getMonthlyAverage\n                            \n                            \n                                    Async\n                                getWeeklyAverage\n                            \n                            \n                                    Async\n                                startDataCapture\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/collecte.service.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAllData\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/collecte.service.ts:11\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getCurrentMonthData\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCurrentMonthData(page: number, pageSize: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/collecte.service.ts:65\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    1\n                                            \n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    6\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getDailyAverage\n                        \n                    \n                \n            \n            \n                \n                        \n                    getDailyAverage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/collecte.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getDataById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getDataById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/collecte.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getDataForWeek\n                        \n                    \n                \n            \n            \n                \n                        \n                    getDataForWeek(date: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/collecte.service.ts:88\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                date\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getMonthlyAverage\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMonthlyAverage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/collecte.service.ts:54\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getWeeklyAverage\n                        \n                    \n                \n            \n            \n                \n                        \n                    getWeeklyAverage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/collecte.service.ts:77\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        startDataCapture\n                        \n                    \n                \n            \n            \n                \n                        \n                    startDataCapture()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/collecte.service.ts:99\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport axios from '../config/axios-config'; // Import de l'instance Axios configurée\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CollecteService {\n  constructor() {}\n\n  // Récupérer toutes les données\n  async getAllData(): Promise {\n    try {\n      const response = await axios.get('collecte/donnees'); // Utilisation de l'URL de base configurée\n      return response.data;\n    } catch (error) {\n      console.error('Erreur lors de la récupération des données:', error);\n      throw error;\n    }\n  }\n\n  // Récupérer une donnée par ID\n  async getDataById(id: string): Promise {\n    try {\n      const response = await axios.get(`collecte/donnees/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error(`Erreur lors de la récupération des données avec l'ID ${id}:`, error);\n      throw error;\n    }\n  }\n\n  // Récupérer les moyennes journalières\n // Récupérer les moyennes journalières\n async getDailyAverage(): Promise {\n  try {\n    const response = await axios.get('collecte/donnees/daily-average');\n    return response.data;\n  } catch (error) {\n    if (axios.isAxiosError(error)) {\n      // Vérifier si l'erreur est une erreur Axios\n      if (error.response?.status === 404) {\n        console.warn('Aucune donnée journalière trouvée.');\n        return null; // Retourner null si aucune donnée n'est disponible\n      }\n      console.error('Erreur lors de la récupération des moyennes journalières:', error.response?.data || error.message);\n    } else {\n      // Pour toute autre erreur, afficher le message générique\n      console.error('Erreur inattendue:', error);\n    }\n    throw error; // Rejeter l'erreur pour un traitement en amont\n  }\n}\n  // Récupérer les moyennes mensuelles\nasync getMonthlyAverage(): Promise {\n  try {\n    const response = await axios.get('collecte/donnees/monthly-average');\n    return response.data;\n  } catch (error) {\n    console.error('Erreur lors de la récupération des moyennes mensuelles:', error);\n    throw error;\n  }\n}\n  // Récupérer les données du mois en cours avec pagination\n// Service CollecteService pour récupérer les données avec pagination\nasync getCurrentMonthData(page: number = 1, pageSize: number = 6): Promise {\n  try {\n    const response = await axios.get(`collecte/donnees/mois-actuel?page=${page}&pageSize=${pageSize}`);\n    return response.data; // La réponse doit contenir `currentMonthData`\n  } catch (error) {\n    console.error('Erreur lors de la récupération des données du mois en cours :', error);\n    throw error;\n  }\n}\n\n\n  // Récupérer les moyennes hebdomadaires\n  async getWeeklyAverage(): Promise {\n    try {\n      const response = await axios.get('collecte/donnees/weekly-average');\n      return response.data;\n    } catch (error) {\n      console.error('Erreur lors de la récupération des moyennes hebdomadaires:', error);\n      throw error;\n    }\n  }\n\n  // Filtrer les données pour une semaine donnée\n  async getDataForWeek(date: string): Promise {\n    try {\n      const response = await axios.get(`collecte/donnees/week/${date}`);\n      return response.data;\n    } catch (error) {\n      console.error(`Erreur lors de la récupération des données pour la semaine du ${date}:`, error);\n      throw error;\n    }\n  }\n\n  // Démarrer la capture des données\n  async startDataCapture(): Promise {\n    try {\n      const response = await axios.post('collecte/donnees/capture');\n      return response.data;\n    } catch (error) {\n      console.error('Erreur lors du démarrage de la capture des données:', error);\n      throw error;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/footer/footer.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./footer.component.css\n            \n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                today\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/footer/footer.component.ts:13\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/footer/footer.component.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        today\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : Date.now()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/footer/footer.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';  // Importation de CommonModule\n\n@Component({\n  selector: 'app-footer',\n  standalone: true,\n  imports: [CommonModule],  // Ajouter CommonModule dans les imports\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n  \n  public today: number = Date.now();\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n\n    \n      \n        Copyright {{ today | date:'y'}} © Yakar Groupe 2 by P-3Adefnipa  \n      \n    \n  \n  \n    \n\n    \n                \n                    ./footer.component.css\n                \n                .footer {\n    background-color: #202121; /* Fond sombre pour le menu */\n    padding: 10px;\n    width: 100%;\n    display: flex; /* Pour aligner les éléments horizontalement */\n    justify-content: center; /* Centrer les éléments horizontalement */\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  Copyright {{ today | date:\\'y\\'}} © Yakar Groupe 2 by P-3Adefnipa                '\n    var COMPONENTS = [{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AnalyseComponent', 'selector': 'app-analyse'},{'name': 'AnalyseComponent', 'selector': 'app-analyse'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MyAccountComponent', 'selector': 'app-my-account'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'UserPageComponent', 'selector': 'app-user-page'},{'name': 'UtilisateursComponent', 'selector': 'app-utilisateurs'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/header/header.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            ReactiveFormsModule\n                \n            \n\n            \n                styleUrls\n                ./header.component.css\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                changePasswordForm\n                            \n                            \n                                changePasswordMessage\n                            \n                            \n                                isDarkMode\n                            \n                            \n                                isModalVisible\n                            \n                            \n                                isPasswordModalVisible\n                            \n                            \n                                passwordsMatch\n                            \n                            \n                                    \n                                photoInput\n                            \n                            \n                                showNewPassword\n                            \n                            \n                                user\n                            \n                            \n                                    Public\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                closePasswordModalAndShowProfileModal\n                            \n                            \n                                isInvalid\n                            \n                            \n                                loadUserData\n                            \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onPhotoSelected\n                            \n                            \n                                onSubmit\n                            \n                            \n                                openFileSelector\n                            \n                            \n                                    Private\n                                setChangePasswordMessage\n                            \n                            \n                                toggleModal\n                            \n                            \n                                toggleNewPasswordVisibility\n                            \n                            \n                                togglePasswordModal\n                            \n                            \n                                toggleTheme\n                            \n                            \n                                    Private\n                                updateIcon\n                            \n                            \n                                    Private\n                                updateThemeClass\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, modalService: NgbModal, fb: FormBuilder, renderer: Renderer2)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/header/header.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    NgbModal\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        closePasswordModalAndShowProfileModal\n                        \n                    \n                \n            \n            \n                \n                        \n                    closePasswordModalAndShowProfileModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/header/header.component.ts:179\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isInvalid\n                        \n                    \n                \n            \n            \n                \nisInvalid(controlName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/header/header.component.ts:163\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                controlName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadUserData\n                        \n                    \n                \n            \n            \n                \nloadUserData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/header/header.component.ts:91\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/header/header.component.ts:185\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/header/header.component.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onPhotoSelected\n                        \n                    \n                \n            \n            \n                \nonPhotoSelected(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/header/header.component.ts:107\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/header/header.component.ts:130\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openFileSelector\n                        \n                    \n                \n            \n            \n                \nopenFileSelector()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/header/header.component.ts:169\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setChangePasswordMessage\n                        \n                    \n                \n            \n            \n                \n                        \n                    setChangePasswordMessage(text: string, type: \"success\" | \"error\")\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/header/header.component.ts:156\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                type\n                                            \n                                                        \"success\" | \"error\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleModal\n                        \n                    \n                \n            \n            \n                \ntoggleModal(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/header/header.component.ts:98\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleNewPasswordVisibility\n                        \n                    \n                \n            \n            \n                \ntoggleNewPasswordVisibility()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/header/header.component.ts:174\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        togglePasswordModal\n                        \n                    \n                \n            \n            \n                \ntogglePasswordModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/header/header.component.ts:103\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleTheme\n                        \n                    \n                \n            \n            \n                \ntoggleTheme()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/header/header.component.ts:66\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        updateIcon\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateIcon()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/header/header.component.ts:80\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        updateThemeClass\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateThemeClass(theme: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/header/header.component.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                theme\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        changePasswordForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/header/header.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changePasswordMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/components/header/header.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDarkMode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/header/header.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isModalVisible\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/header/header.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isPasswordModalVisible\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/header/header.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordsMatch\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/header/header.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        photoInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('photoInput', {static: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/header/header.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showNewPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/header/header.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/components/header/header.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/header/header.component.ts:32\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, CUSTOM_ELEMENTS_SCHEMA, ViewChild, ElementRef } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UserService } from '../../services/user.service';\nimport { FormBuilder, FormGroup, FormsModule, Validators } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { Renderer2 } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-header',\n  standalone: true,\n  imports: [CommonModule, FormsModule, ReactiveFormsModule],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n  changePasswordMessage: { text: string; type: 'success' | 'error' } | null = null;\n\n  isDarkMode = true; // Define the initial theme state (dark mode by default)\n  user: any = {};\n  isModalVisible: boolean = false;\n  isPasswordModalVisible: boolean = false;\n  changePasswordForm: FormGroup;\n  passwordsMatch = true; // Pour vérifier si les mots de passe correspondent\n  showNewPassword: boolean = false; // Nouvelle variable\n\n  @ViewChild('photoInput', { static: false }) photoInput!: ElementRef;\n\n\n  constructor(\n    public userService: UserService,\n    private modalService: NgbModal,\n    private fb: FormBuilder,\n    private renderer: Renderer2 // Use Renderer2 for DOM manipulations\n  ) {\n    this.loadUserData();\n    this.changePasswordForm = this.fb.group({\n      currentPassword: ['', Validators.required],\n      newPassword: [\n        '',\n        [\n          Validators.required,\n          Validators.minLength(8),\n          Validators.pattern(/(?=.*[A-Z])(?=.*[!@#$%^&*])(?=.*[0-9])/),\n        ],\n      ],\n      confirmPassword: ['', Validators.required],\n    });\n  }\n\n  ngOnInit(): void {\n    this.user = this.userService.getCurrentUser();\n    const theme = localStorage.getItem('theme') || 'dark-theme';\n    this.isDarkMode = theme === 'dark-theme';\n    this.updateThemeClass(theme);\n    this.updateIcon();\n    // Vérification en temps réel des mots de passe correspondants\n    this.changePasswordForm.get('confirmPassword')?.valueChanges.subscribe(() => {\n      const newPassword = this.changePasswordForm.get('newPassword')?.value;\n      const confirmPassword = this.changePasswordForm.get('confirmPassword')?.value;\n      this.passwordsMatch = newPassword === confirmPassword;\n    });\n  }\n\n  toggleTheme(): void {\n    this.isDarkMode = !this.isDarkMode;\n    const theme = this.isDarkMode ? 'dark-theme' : 'light-theme';\n    this.updateThemeClass(theme);\n    this.updateIcon();\n    localStorage.setItem('theme', theme);\n  }\n\n  private updateThemeClass(theme: string): void {\n    this.renderer.removeClass(document.body, 'dark-theme');\n    this.renderer.removeClass(document.body, 'light-theme');\n    this.renderer.addClass(document.body, theme);\n  }\n\n  private updateIcon(): void {\n    const themeIcon = document.getElementById('themeIcon');\n    if (themeIcon) {\n      this.renderer.setAttribute(\n        themeIcon,\n        'class',\n        this.isDarkMode ? 'bi bi-moon-fill theme-icon moon' : 'bi bi-sun-fill theme-icon sun'\n      );\n    }\n  }\n\n  loadUserData(): void {\n    const userData = localStorage.getItem('currentUser');\n    if (userData) {\n      this.user = JSON.parse(userData);\n    }\n  }\n\n  toggleModal(event: Event): void {\n    event.preventDefault();\n    this.isModalVisible = !this.isModalVisible;\n  }\n\n  togglePasswordModal(): void {\n    this.isPasswordModalVisible = !this.isPasswordModalVisible;\n  }\n\n  onPhotoSelected(event: any): void {\n  const file = event.target.files[0];\n  if (file) {\n    const formData = new FormData();\n    formData.append('userId', this.user._id);\n    formData.append('photo', file);\n\n    console.log('FormData:', formData.get('userId'), formData.get('photo'));\n\n    this.userService.updatePhoto(this.user._id, file).subscribe({\n      next: (response: any) => {\n        alert( 'Photo mise à jour avec succès.');\n        this.user.photo = response.photo;\n      },\n      error: (err) => {\n        console.error('Erreur Backend:', err.error.message);\n        alert( `Erreur : ${err.error.message || 'Impossible de mettre à jour la photo.'}`);\n      },\n    });\n  }\n}\n\n  // Soumettre le formulaire de changement de mot de passe\n  onSubmit(): void {\n    if (this.changePasswordForm.valid && this.passwordsMatch) {\n      const { currentPassword, newPassword, confirmPassword } = this.changePasswordForm.value;\n  \n      // Vérifiez si l'email de l'utilisateur est présent (vous pourriez avoir à adapter cette partie)\n      const email = this.user.email; // Assurez-vous que l'email est bien dans `this.user`\n  \n      // Appel de la méthode changePassword avec 4 arguments\n      this.userService.changePassword(email, currentPassword, newPassword, confirmPassword).subscribe({\n        next: () => {\n          this.setChangePasswordMessage('Mot de passe changé avec succès.', 'success');\n          this.closePasswordModalAndShowProfileModal();\n        },\n        error: (err) => {\n          this.setChangePasswordMessage(\n            err.error.message || 'Impossible de changer le mot de passe.',\n            'error'\n          );\n          this.closePasswordModalAndShowProfileModal();\n        },\n      });\n    }\n  }\n  \n\n  // Méthode pour définir le message\n  private setChangePasswordMessage(text: string, type: 'success' | 'error'): void {\n    this.changePasswordMessage = { text, type };\n    setTimeout(() => {\n      this.changePasswordMessage = null;\n    }, 5000); // Efface le message après 5 secondes\n  }\n\n  isInvalid(controlName: string): boolean {\n    const control = this.changePasswordForm.get(controlName);\n    return !!(control && control.invalid && (control.touched || control.dirty));\n  }\n\n\n  openFileSelector(): void {\n    this.photoInput.nativeElement.click();\n  }\n\n  // Méthode pour basculer la visibilité du mot de passe\n  toggleNewPasswordVisibility(): void {\n    this.showNewPassword = !this.showNewPassword;\n  }\n\n  // Ferme le modal de changement de mot de passe et ouvre celui de profil\n  private closePasswordModalAndShowProfileModal(): void {\n    this.isPasswordModalVisible = false; // Fermer le modal de changement de mot de passe\n    setTimeout(() => {\n      this.isModalVisible = true; // Afficher le modal de profil après un délai\n    }, 300); // Ajuster la durée selon l'animation\n  }\n  logout(): void {\n    this.userService.logout();\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n    \n      \n    \n\n    \n    \n      \n        \n        \n          {{user.name}}\n          {{user.role}}\n        \n      \n\n      \n      \n        Profile\n        \n        Déconnexion\n      \n      \n    \n  \n\n\n\n\n\n  \n    \n      \n        Profil de l'utilisateur\n        \n      \n      \n        \n        \n          \n            {{ changePasswordMessage.text }}\n          \n        \n        \n          \n          \n            \n            \n               Changer la photo\n            \n          \n        \n        Nom: {{ user.name }}\n        Adresse: {{ user.adresse }}\n        Email: {{ user.email }}\n        Code Secret: {{ user.secretCode }}\n        Role: {{ user.role }}\n        Changer votre mot de passe\n      \n    \n  \n\n\n\n\n  \n    \n      \n        Changer le mot de passe\n        \n      \n      \n        \n          \n          \n            Mot de passe actuel\n            \n            \n              Ce champ est requis.\n            \n          \n\n          \n          \n            Nouveau mot de passe\n\n              \n              \n\n              \n              \n\n            \n              Le mot de passe doit contenir au moins 8 caractères, une majuscule, un chiffre, et un caractère spécial.\n            \n          \n\n          \n          \n            Confirmez le mot de passe\n            \n            \n              Ce champ est requis.\n            \n            \n              Les mots de passe ne correspondent pas.\n            \n          \n\n          \n          \n            Changer le mot de passe\n          \n        \n      \n    \n  \n\n\n\n\n\n\n\n    \n\n    \n                \n                    ./header.component.css\n                \n                /*======= Page Header css Start ======= */\n\n.logo-image {\n  width: 100px;\n}\n.user-avatar {\n  width: 35px;\n  height: 35px;\n  margin-right: 10px;\n}\n.mode {\n  cursor: pointer;\n  display: flex;\n  align-items: end;\n  color: white;\n}\n\n.mode:hover {\n  color: #f1f1f1;\n}\n\n/* Ensure that the profile image and theme toggle button are aligned */\n.navbar .ms-auto {\n  display: flex;\n  align-items: center;\n  position: relative; /* Ensure that items inside it are properly aligned */\n}\n\n/* Style pour l'icône de mode */\n.theme-icon {\n  font-size: 20px;\n  color: white;\n}\n\n/* Espace entre l'icône de mode et le texte */\n.theme-icon.sun {\n  color: black;\n}\n\n.theme-icon.moon {\n  color: white;\n}\n\n/* Alignement général des éléments à droite dans la navbar */\n.navbar .ms-auto {\n  display: flex;\n  align-items: center;\n  position: relative;\n}\n\n/* Pour le bouton de bascule de mode */\n.mode {\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  margin-left: 15px;  /* Espace entre le mode toggle et le profil */\n}\n\n/* Image de l'utilisateur */\n.user-avatar {\n  width: 40px;\n  height: 40px;\n  margin-right: 10px;\n}\n/* Styles pour le modal */\n.modal-content {\n  color: #333; /* Texte en gris foncé pour le rendre lisible sur fond clair */\n}\n\n/* Spécifique pour le fond sombre */\n.modal-body {\n  color: #333; /* Texte sombre pour le modal */\n}\n\n.modal-header {\n  background-color: #f8f9fa; /* Fond clair pour l'entête du modal */\n  color: #333; /* Texte en noir pour la lisibilité */\n}\n\n.modal-footer {\n  background-color: #f8f9fa; /* Fond clair pour le footer du modal */\n  color: #333; /* Texte en noir pour la lisibilité */\n}\n\nbutton {\n  color: #fff;\n  background-color: #007bff;\n}\n\nbutton:hover {\n  background-color: #0056b3;\n}\n\n.is-invalid {\n  border-color: #dc3545;\n}\n\n.invalid-feedback {\n  color: #dc3545;\n  font-size: 0.875em;\n}\n\n.position-relative {\n  position: relative;\n}\n.position-absolute {\n  position: absolute;\n  z-index: 2;\n  border: none;\n  background: none;\n  outline: none;\n  cursor: pointer;\n}\n\n.input-group .btn {\n  border: none;\n  background: transparent;\n  padding: 0 10px;\n}\n\n.input-group .btn i {\n  font-size: 1.2rem;\n  color: #6c757d; /* Couleur de l'icône */\n  cursor: pointer;\n}\n\n.input-group .btn:hover i {\n  color: #000; /* Changement de couleur au survol */\n}\n\n.alert {\n  font-size: 0.9rem;\n  padding: 10px;\n  margin-bottom: 10px;\n}\n.alert-success {\n  color: #155724;\n  background-color: #d4edda;\n  border-color: #c3e6cb;\n}\n.alert-error {\n  color: #721c24;\n  background-color: #f8d7da;\n  border-color: #f5c6cb;\n}\n/* Style pour la zone de chargement */\n#loading {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100px;\n  color: #00796b;\n}\n\n.spinner-border {\n  width: 2rem;\n  height: 2rem;\n  border-width: 0.3em;\n}\n\n/* Style général du formulaire */\n.container {\n  max-width: 500px;\n  margin: 0 auto;\n}\n\nh2 {\n  color: #00796b;\n  font-family: 'Arial', sans-serif;\n  font-weight: 600;\n  font-size: 22px;\n}\n\nul {\n  padding-left: 0;\n  list-style-type: none;\n}\n\n/* Style des champs de saisie */\ninput.form-control {\n  border-radius: 20px;\n  border: 1px solid #ddd;\n  padding: 8px 12px;\n  font-size: 14px;\n  transition: border-color 0.3s;\n}\n\ninput.form-control:focus {\n  border-color: #00796b;\n  box-shadow: 0 0 3px rgba(0, 123, 123, 0.5);\n}\n\n.input-group {\n  margin-bottom: 10px;\n}\n\n/* Icones d'affichage/massage de mot de passe */\n.input-group-text {\n  cursor: pointer;\n  background-color: transparent;\n  border: none;\n  padding: 8px;\n}\n\n.input-group-text i {\n  color: #00796b;\n  font-size: 16px;\n}\n\n/* Style des messages d'erreur et de succès */\n.text-danger {\n  font-size: 12px;\n  margin-top: 5px;\n}\n\n.alert {\n  padding: 8px 15px;\n  border-radius: 8px;\n  margin-top: 15px;\n}\n\n.alert-success {\n  background-color: #28a745;\n  color: white;\n}\n\n.alert-danger {\n  background-color: #f44336;\n  color: white;\n}\n\nbutton:disabled {\n  background-color: #ccc;\n  cursor: not-allowed;\n}\n\nbutton {\n  padding: 10px 25px;\n  font-size: 14px;\n  border-radius: 20px;\n  background-color: #00796b;\n  border: none;\n  color: white;\n  cursor: pointer;\n  transition: background-color 0.3s;\n}\n\nbutton:hover:enabled {\n  background-color: #004d40;\n}\n\nbutton:focus {\n  outline: none;\n}\n\n/* Animation pour le bouton de soumission */\nbutton[type=\"submit\"]:hover {\n  transform: scale(1.05);\n}\n\n/* Réponse visuelle du champ de mot de passe */\n.input-group input.is-invalid {\n  border-color: #f44336;\n}\n\n.input-group input.is-valid {\n  border-color: #28a745;\n}\n/* Icône de l'œil (pour afficher/masquer le mot de passe) */\n.input-group-text i {\n  color: #00796b; /* couleur de l'icône, verte comme le thème */\n  font-size: 16px;\n}\n\n.input-group-text {\n  cursor: pointer;\n  background-color: white;\n  border: none;\n  padding: 8px;\n}\n\n.input-group-text i {\n  color: #00796b; /* couleur de l'icône en vert */\n}\n\n/* Lorsque l'icône de l'œil est masqué (eye-slash), conserver la couleur verte */\n.input-group-text i.fas.fa-eye-slash {\n  color: #00796b; /* même couleur pour l'icône barrée */\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                            {{user.name}}          {{user.role}}                                  Profile                Déconnexion                                      Profil de l\\'utilisateur                                                          {{ changePasswordMessage.text }}                                                                                     Changer la photo                                      Nom: {{ user.name }}        Adresse: {{ user.adresse }}        Email: {{ user.email }}        Code Secret: {{ user.secretCode }}        Role: {{ user.role }}        Changer votre mot de passe                                Changer le mot de passe                                                            Mot de passe actuel                                      Ce champ est requis.                                                      Nouveau mot de passe                                                                                  Le mot de passe doit contenir au moins 8 caractères, une majuscule, un chiffre, et un caractère spécial.                                                      Confirmez le mot de passe                                      Ce champ est requis.                                      Les mots de passe ne correspondent pas.                                                      Changer le mot de passe                              '\n    var COMPONENTS = [{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AnalyseComponent', 'selector': 'app-analyse'},{'name': 'AnalyseComponent', 'selector': 'app-analyse'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MyAccountComponent', 'selector': 'app-my-account'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'UserPageComponent', 'selector': 'app-user-page'},{'name': 'UtilisateursComponent', 'selector': 'app-utilisateurs'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LogsApiService.html":{"url":"injectables/LogsApiService.html","title":"injectable - LogsApiService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LogsApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/logs-api.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                baseUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getAllLogs\n                            \n                            \n                                    Async\n                                getLogsByAction\n                            \n                            \n                                    Async\n                                getLogsByDateRange\n                            \n                            \n                                    Async\n                                getLogsByUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/logs-api.service.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAllLogs\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllLogs()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/logs-api.service.ts:15\n                        \n                    \n\n\n            \n                \n                        Récupérer tous les historiques\n\n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getLogsByAction\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLogsByAction(action: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/logs-api.service.ts:47\n                        \n                    \n\n\n            \n                \n                        Récupérer les historiques correspondant à une action spécifique\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                action\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Action recherchée\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getLogsByDateRange\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLogsByDateRange(startDate: string, endDate: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/logs-api.service.ts:31\n                        \n                    \n\n\n            \n                \n                        Récupérer les historiques entre deux dates\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                startDate\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Date de début (format ISO)\n\n                                            \n                                        \n                                        \n                                                endDate\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Date de fin (format ISO)\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getLogsByUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLogsByUser(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/logs-api.service.ts:63\n                        \n                    \n\n\n            \n                \n                        Récupérer les historiques pour un utilisateur spécifique\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID de l'utilisateur\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        baseUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'historique'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/logs-api.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport axios from '../config/axios-config'; // Instance Axios configurée\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LogsApiService {\n  private readonly baseUrl = 'historique'; // Base relative pour les logs\n\n  constructor() {}\n\n  /**\n   * Récupérer tous les historiques\n   */\n  async getAllLogs(): Promise {\n    try {\n      const response = await axios.get('/historique/historique');\n      return response.data; // Les logs incluent maintenant le champ \"userName\"\n    } catch (error) {\n      console.error('Erreur lors de la récupération de tous les logs :', error);\n      throw error;\n    }\n  }\n  \n\n  /**\n   * Récupérer les historiques entre deux dates\n   * @param startDate Date de début (format ISO)\n   * @param endDate Date de fin (format ISO)\n   */\n  async getLogsByDateRange(startDate: string, endDate: string): Promise {\n    try {\n      const response = await axios.get(`${this.baseUrl}/date-range`, {\n        params: { startDate, endDate },\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Erreur lors de la récupération des logs par période :', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Récupérer les historiques correspondant à une action spécifique\n   * @param action Action recherchée\n   */\n  async getLogsByAction(action: string): Promise {\n    try {\n      const response = await axios.get(`${this.baseUrl}/action`, {\n        params: { action },\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Erreur lors de la récupération des logs par action :', error);\n      throw error;\n    }\n  }\n\n  /**\n   * Récupérer les historiques pour un utilisateur spécifique\n   * @param userId ID de l'utilisateur\n   */\n  async getLogsByUser(userId: string): Promise {\n    try {\n      const response = await axios.get(`${this.baseUrl}/user/${userId}`);\n      return response.data;\n    } catch (error) {\n      console.error('Erreur lors de la récupération des logs pour un utilisateur :', error);\n      throw error;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LogsComponent.html":{"url":"components/LogsComponent.html","title":"component - LogsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LogsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/pages/logs/logs.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-logs\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            NgbPaginationModule\n                            FormsModule\n                \n            \n\n            \n                styleUrls\n                ./logs.component.css\n            \n\n\n\n            \n                templateUrl\n                ./logs.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentPage\n                            \n                            \n                                errorMessage\n                            \n                            \n                                logs\n                            \n                            \n                                pageSize\n                            \n                            \n                                paginatedLogs\n                            \n                            \n                                searchTerm\n                            \n                            \n                                sortKey\n                            \n                            \n                                sortOrder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                filteredLogs\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                sortTable\n                            \n                            \n                                updatePagination\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(logsService: LogsApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/pages/logs/logs.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logsService\n                                                  \n                                                        \n                                                                        LogsApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        filteredLogs\n                        \n                    \n                \n            \n            \n                \nfilteredLogs()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/pages/logs/logs.component.ts:73\n                        \n                    \n\n\n            \n                \n                        Filtrer les logs en fonction du terme de recherche\n\n\n                        \n                            Returns :     any[]\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/pages/logs/logs.component.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sortTable\n                        \n                    \n                \n            \n            \n                \nsortTable(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/pages/logs/logs.component.ts:50\n                        \n                    \n\n\n            \n                \n                        Appliquer un tri à la table\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Clé sur laquelle trier\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatePagination\n                        \n                    \n                \n            \n            \n                \nupdatePagination()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/pages/logs/logs.component.ts:40\n                        \n                    \n\n\n            \n                \n                        Mettre à jour les logs paginés en fonction de la page actuelle et du filtre\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/components/pages/logs/logs.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/pages/logs/logs.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logs\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/pages/logs/logs.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pageSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 15\n                    \n                \n                    \n                        \n                                Defined in src/app/components/pages/logs/logs.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        paginatedLogs\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/pages/logs/logs.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchTerm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/pages/logs/logs.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sortKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/pages/logs/logs.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sortOrder\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"asc\" | \"desc\"\n\n                    \n                \n                \n                    \n                        Default value : 'asc'\n                    \n                \n                    \n                        \n                                Defined in src/app/components/pages/logs/logs.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgbPaginationModule } from '@ng-bootstrap/ng-bootstrap';\nimport { FormsModule } from '@angular/forms';\nimport { LogsApiService } from '../../../services/logs-api.service';\n\n@Component({\n  selector: 'app-logs',\n  standalone: true,\n  imports: [CommonModule, NgbPaginationModule, FormsModule],\n  templateUrl: './logs.component.html',\n  styleUrls: ['./logs.component.css'],\n})\nexport class LogsComponent implements OnInit {\n  logs: any[] = []; // Liste complète des logs\n  paginatedLogs: any[] = []; // Logs paginés\n  currentPage = 1; // Page courante\n  pageSize = 15; // Nombre d'éléments par page\n  searchTerm = ''; // Filtre de recherche\n  sortKey = ''; // Clé de tri (date, heure, action, id_users)\n  sortOrder: 'asc' | 'desc' = 'asc'; // Ordre de tri\n  errorMessage = ''; // Message d'erreur (le cas échéant)\n\n  constructor(private logsService: LogsApiService) {}\n\n  async ngOnInit() {\n    try {\n      // Appel à l'API pour récupérer les logs\n      this.logs = await this.logsService.getAllLogs();\n      this.updatePagination(); // Mettre à jour la pagination avec les données récupérées\n    } catch (error) {\n      this.errorMessage = 'Impossible de récupérer les logs. Veuillez réessayer plus tard.';\n      console.error(this.errorMessage, error);\n    }\n  }\n\n  /**\n   * Mettre à jour les logs paginés en fonction de la page actuelle et du filtre\n   */\n  updatePagination(): void {\n    const startIndex = (this.currentPage - 1) * this.pageSize;\n    const endIndex = startIndex + this.pageSize;\n    this.paginatedLogs = this.filteredLogs().slice(startIndex, endIndex);\n  }\n\n  /**\n   * Appliquer un tri à la table\n   * @param key Clé sur laquelle trier\n   */\n  sortTable(key: string): void {\n    if (this.sortKey === key) {\n      this.sortOrder = this.sortOrder === 'asc' ? 'desc' : 'asc';\n    } else {\n      this.sortKey = key;\n      this.sortOrder = 'asc';\n    }\n  \n    this.logs.sort((a, b) => {\n      const aValue = (a as any)[key];\n      const bValue = (b as any)[key];\n  \n      if (aValue  bValue) return this.sortOrder === 'asc' ? 1 : -1;\n      return 0;\n    });\n  \n    this.updatePagination();\n  }\n  \n  /**\n   * Filtrer les logs en fonction du terme de recherche\n   */\n  filteredLogs(): any[] {\n    return this.logs.filter((log) => {\n      const term = this.searchTerm.toLowerCase();\n      return (\n        log.action.toLowerCase().includes(term) || \n        log.userName.toLowerCase().includes(term) // Recherche dans le nom d'utilisateur\n      );\n    });\n  }\n  \n}\n\n    \n\n    \n        \n  \n    \n      \n      \n        {{ errorMessage }}\n      \n\n      \n      \n        \n          \n        \n      \n\n      \n      \n        \n          \n            Date\n            Heure\n            Action\n            Utilisateur\n          \n        \n        \n          \n            {{ log.date | date: 'dd/MM/yyyy' }}\n            {{ log.heure }}\n            {{ log.action }}\n            {{ log.userName }} \n          \n        \n      \n\n      \n      \n        Aucun log trouvé.\n      \n    \n  \n\n  \n  \n    \n      \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./logs.component.css\n                \n                body {\n    background-color: #202121;\n    color: #ffffff;\n  }\n  \n  .table {\n    color: white;\n    background-color: #202121;\n  }\n  \n  th, td {\n    vertical-align: middle;\n    cursor: pointer;\n  }\n  \n  /* .search-input {\n    width: 60%;\n    padding: 8px;\n    border: 1px solid #00ff47;\n    border-radius: 5px;\n    margin-bottom: 15px;\n  } */\n  \n  .pagination-container {\n    display: flex;\n    justify-content: center;\n    margin-top: 20px;\n  }\n  /* Style de l'input de recherche */\n.search-container .search-input {\n    padding: 10px 15px;\n    width: 250px;\n    font-size: 16px;\n    border: none;\n    border-radius: 30px;\n    background-color: #343a40; /* Gris foncé */\n    color: #00ff47;\n    box-shadow: inset 0 2px 4px rgba(0, 0, 0, 0.1);\n    outline: none;\n    transition: all 0.3s ease;\n  }\n  \n  .search-container .search-input::placeholder {\n    color: #00ff47; /* Placeholder en gris clair */\n  }\n  \n  .search-container .search-input:focus {\n    background-color: #495057; /* Couleur légèrement plus claire au focus */\n    box-shadow: 0 0 8px rgba(0, 255, 71, 0.6); /* Lumière verte */\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                          {{ errorMessage }}                                                                                            Date            Heure            Action            Utilisateur                                                {{ log.date | date: \\'dd/MM/yyyy\\' }}            {{ log.heure }}            {{ log.action }}            {{ log.userName }}                                             Aucun log trouvé.                                              '\n    var COMPONENTS = [{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AnalyseComponent', 'selector': 'app-analyse'},{'name': 'AnalyseComponent', 'selector': 'app-analyse'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MyAccountComponent', 'selector': 'app-my-account'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'UserPageComponent', 'selector': 'app-user-page'},{'name': 'UtilisateursComponent', 'selector': 'app-utilisateurs'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LogsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MenuComponent.html":{"url":"components/MenuComponent.html","title":"component - MenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/menu/menu.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-menu\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterLink\n                            RouterLinkActive\n                            CommonModule\n                \n            \n\n            \n                styleUrls\n                ./menu.component.css\n            \n\n\n\n            \n                templateUrl\n                ./menu.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isAdmin\n                            \n                            \n                                isLoggedIn\n                            \n                            \n                                isUser\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canAccessAdmin\n                            \n                            \n                                canAccessUser\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/menu/menu.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canAccessAdmin\n                        \n                    \n                \n            \n            \n                \ncanAccessAdmin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/menu/menu.component.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        canAccessUser\n                        \n                    \n                \n            \n            \n                \ncanAccessUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/menu/menu.component.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/menu/menu.component.ts:20\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isAdmin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/menu/menu.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoggedIn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/menu/menu.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/menu/menu.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { RouterLink, RouterLinkActive } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { UserService } from '../../services/user.service'; // Assurez-vous d'importer le service UserService\n\n@Component({\n  selector: 'app-menu',\n  standalone: true,\n  imports: [RouterLink, RouterLinkActive, CommonModule],\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css']\n})\nexport class MenuComponent implements OnInit {\n  isLoggedIn: boolean = false;\n  isAdmin: boolean = false;\n  isUser: boolean = false;\n\n  constructor(private userService: UserService) {}\n\n  ngOnInit(): void {\n    // Vérification si l'utilisateur est connecté et son rôle\n    this.isLoggedIn = this.userService.isLoggedIn();\n    this.isAdmin = this.userService.isAdmin();\n    this.isUser = this.userService.isUser();\n  }\n\n  // Méthode pour vérifier si l'utilisateur est autorisé à accéder à un certain lien\n  canAccessAdmin(): boolean {\n    return this.isAdmin;\n  }\n\n  canAccessUser(): boolean {\n    return this.isUser;\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      Dashboard Admin\n    \n    \n    \n    \n      Dashboard User\n    \n\n    \n    \n      Utilisateurs\n    \n\n    \n    \n      Logs\n    \n  \n\n\n    \n\n    \n                \n                    ./menu.component.css\n                \n                /* Style de base du menu */\nnav.menu {\n    background-color: #202121; /* Fond sombre pour le menu */\n    padding: 10px;\n    width: 100%;\n    display: flex; /* Pour aligner les éléments horizontalement */\n    justify-content: start; /* Centrer les éléments horizontalement */\n  }\n  \n  nav.menu ul {\n    list-style-type: none; /* Supprime les puces par défaut */\n    padding: 0;\n    margin: 0;\n    display: flex; /* Aligne les éléments de manière horizontale */\n  }\n  \n  nav.menu li {\n    margin: 0 15px; /* Espacement horizontal entre les éléments */\n  }\n  \n  nav.menu a {\n    color: #00FF47; /* Couleur par défaut des liens */\n    text-decoration: none; /* Enlève le soulignement */\n    font-size: 16px; /* Taille du texte */\n    padding: 8px 15px; /* Espacement autour du texte */\n    border-radius: 4px; /* Coins arrondis des liens */\n    transition: all 0.3s ease; /* Animation fluide lors des changements */\n  }\n  \n  nav.menu a:hover {\n    background-color: rgba(0, 255, 71, 0.1); /* Légère couleur de fond au survol */\n    color: #00FF47; /* Couleur toujours la même au survol */\n  }\n  \n  /* Lien actif */\n  nav.menu a.active {\n    color: white; /* Couleur du lien actif */\n    border-bottom: 2px solid #00FF47; /* Bordure en bas du lien actif */\n    font-weight: bold; /* Texte en gras pour le lien actif */\n  }\n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                Dashboard Admin                      Dashboard User                  Utilisateurs                  Logs      '\n    var COMPONENTS = [{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AnalyseComponent', 'selector': 'app-analyse'},{'name': 'AnalyseComponent', 'selector': 'app-analyse'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MyAccountComponent', 'selector': 'app-my-account'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'UserPageComponent', 'selector': 'app-user-page'},{'name': 'UtilisateursComponent', 'selector': 'app-utilisateurs'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MyAccountComponent.html":{"url":"components/MyAccountComponent.html","title":"component - MyAccountComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MyAccountComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/header/elements/my-account/my-account.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-my-account\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./my-account.component.html\n            \n\n\n\n            \n                styleUrl\n                ./my-account.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/header/elements/my-account/my-account.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/header/elements/my-account/my-account.component.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/header/elements/my-account/my-account.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../../../../services/user.service';\n\n@Component({\n  selector: 'app-my-account',\n  standalone: true,\n  imports: [],\n  templateUrl: './my-account.component.html',\n  styleUrl: './my-account.component.css'\n})\nexport class MyAccountComponent implements OnInit {\n  user: any;\n\n\n  constructor(private userService: UserService) {}\n\n  ngOnInit(): void {\n    this.user = this.userService.getCurrentUser();\n  }\n\n}\n\n    \n\n    \n        \n\n    \n    \n      {{ user.name }}\n      {{ user.roles}} \n    \n  \n\n  \n  \n    Account\n    Inbox\n    Taskboard\n    Settings\n    Log out\n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              {{ user.name }}      {{ user.roles}}               Account    Inbox    Taskboard    Settings    Log out  '\n    var COMPONENTS = [{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AnalyseComponent', 'selector': 'app-analyse'},{'name': 'AnalyseComponent', 'selector': 'app-analyse'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MyAccountComponent', 'selector': 'app-my-account'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'UserPageComponent', 'selector': 'app-user-page'},{'name': 'UtilisateursComponent', 'selector': 'app-utilisateurs'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MyAccountComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/register/register.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n            \n                styleUrl\n                ./register.component.css\n            \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-register',\n  standalone: true,\n  imports: [],\n  templateUrl: './register.component.html',\n  styleUrl: './register.component.css'\n})\nexport class RegisterComponent {\n\n}\n\n    \n\n    \n        register works!\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'register works!'\n    var COMPONENTS = [{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AnalyseComponent', 'selector': 'app-analyse'},{'name': 'AnalyseComponent', 'selector': 'app-analyse'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MyAccountComponent', 'selector': 'app-my-account'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'UserPageComponent', 'selector': 'app-user-page'},{'name': 'UtilisateursComponent', 'selector': 'app-utilisateurs'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SocketService.html":{"url":"injectables/SocketService.html","title":"injectable - SocketService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SocketService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/socket.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                socket\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                disconnect\n                            \n                            \n                                onMessage\n                            \n                            \n                                sendMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(appRef: ApplicationRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/socket.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        appRef\n                                                  \n                                                        \n                                                                    ApplicationRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        disconnect\n                        \n                    \n                \n            \n            \n                \ndisconnect()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/socket.service.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onMessage\n                        \n                    \n                \n            \n            \n                \nonMessage(event: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/socket.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendMessage\n                        \n                    \n                \n            \n            \n                \nsendMessage(event: string, message: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/socket.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                message\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        socket\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Socket\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/socket.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { io, Socket } from 'socket.io-client';\nimport { ApplicationRef } from '@angular/core';\nimport { first } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SocketService {\n\n  private socket: Socket;\n\n  constructor(private appRef: ApplicationRef) {\n    // Initialisation du socket sans connexion immédiate\n    this.socket = io('http://localhost:5001', { autoConnect: false });\n\n    // Attendre que l'application soit stable avant de connecter le WebSocket\n    this.appRef.isStable\n      .pipe(first((isStable) => isStable))\n      .subscribe(() => {\n        this.socket.connect(); // Connexion du socket après la stabilité\n      });\n  }\n\n  // Méthode pour envoyer un message via WebSocket\n  sendMessage(event: string, message: any): void {\n    if (this.socket.connected) {\n      this.socket.emit(event, message);\n    } else {\n      console.error('Socket n\\'est pas connecté');\n    }\n  }\n\n  // Méthode pour écouter un message spécifique\n  onMessage(event: string): Observable {\n    return new Observable((observer) => {\n      this.socket.on(event, (data) => {\n        observer.next(data);\n      });\n    });\n  }\n\n  // Méthode pour se déconnecter du socket\n  disconnect(): void {\n    if (this.socket) {\n      this.socket.disconnect();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/pages/utilisateurs/utilisateurs.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            _id\n                                        \n                                \n                                \n                                        \n                                            adresse\n                                        \n                                \n                                \n                                        \n                                            authentication\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            date_modification\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            photo\n                                        \n                                \n                                \n                                        \n                                            roles\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                                \n                                        \n                                            telephone\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        adresse\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        adresse:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        authentication\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        authentication:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        date_modification\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        date_modification:     Date | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        photo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        photo:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        telephone\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        telephone:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgbPaginationModule } from '@ng-bootstrap/ng-bootstrap';\nimport { FormsModule } from '@angular/forms';\nimport { UserApiService } from '../../../services/user-api.service';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ChangeDetectorRef } from '@angular/core';\n\n// Interface User adaptée au modèle backend\ninterface User {\n  _id: string;\n  name: string;\n  email: string;\n  telephone: string;\n  adresse: string;\n  photo?: string;\n  status: boolean;\n  authentication: {\n    secretCode: string;\n  };\n  roles: string[];\n  createdAt: Date;\n  date_modification: Date | null;\n}\n\n@Component({\n  selector: 'app-utilisateurs',\n  standalone: true,\n  imports: [CommonModule, NgbPaginationModule, FormsModule],\n  templateUrl: './utilisateurs.component.html',\n  styleUrls: ['./utilisateurs.component.css'],\n})\nexport class UtilisateursComponent implements OnInit {\n  users: User[] = [];\n  paginatedUsers: User[] = [];\n  currentPage = 1;\n  pageSize = 15;\n  searchTerm = '';\n  selectedRole = '';\n  sortKey = '';\n  sortOrder: 'asc' | 'desc' = 'asc';\n  isLoading = false;\n  errorMessage: string | null = null;\n  userToEdit: User = {\n    _id: '', // Should be provided or assigned later\n    name: '',\n    email: '',\n    telephone: '',\n    adresse: '',\n    photo: '', // Optional\n    status: false, // Default value, can be updated\n    authentication: {\n      secretCode: '' // Dummy value, replace when needed\n    },\n    roles: [], // Can be set based on the user's roles\n    createdAt: new Date(), // Set to current date, adjust as necessary\n    date_modification: null // Null or date as applicable\n  };\n  \n  \n\n  @ViewChild('registerModal') registerModal!: ElementRef;\n  @ViewChild('updateModal') updateModal: any;  // Déclarez la référence du modal\n\n  newUser = {\n    name: '',\n    email: '',\n    telephone: '',\n    adresse: '',\n    photo: '', // Doit être une chaîne\n    password: ''\n  };\n  \n\n  photoFile: File | null = null; // Stockage temporaire du fichier photo\n  photoPreview: string | null = null; // Prévisualisation de l'image\n  isSubmitting = false;\n\n  constructor(\n    private userApiService: UserApiService,\n    private modalService: NgbModal,\n    private cdr: ChangeDetectorRef\n  ) {}\n\n  ngOnInit(): void {\n    this.fetchUsers();\n  }\n\n  openModal(): void {\n    this.modalService.open(this.registerModal, { centered: true });\n  }\n\n  closeModal(): void {\n    this.modalService.dismissAll();\n  }\n\n  fetchUsers(activeOnly: boolean = true): void {\n    this.isLoading = true;\n    this.errorMessage = null;\n  \n    this.userApiService\n      .fetchUsers(activeOnly)\n      .then((users) => {\n        this.users = users || [];\n        this.updatePagination();\n      })\n      .catch((error) => {\n        console.error('Erreur lors de la récupération des utilisateurs:', error.message);\n        this.errorMessage =\n          error.message || 'Une erreur est survenue lors de la récupération des utilisateurs.';\n        this.users = [];\n      })\n      .finally(() => {\n        this.isLoading = false;\n      });\n  }\n  \n  // Mise à jour de la pagination\n  updatePagination(): void {\n    const startIndex = (this.currentPage - 1) * this.pageSize;\n    const endIndex = startIndex + this.pageSize;\n    this.currentPage = Math.min(\n      this.currentPage,\n      Math.ceil(this.users.length / this.pageSize)\n    );\n    this.paginatedUsers = this.filteredUsers().slice(startIndex, endIndex);\n  }\n\n  // Filtrage des utilisateurs\n  filteredUsers(): User[] {\n    return this.users.filter((user) => {\n      const matchesSearch =\n        (user.name || '').toLowerCase().includes(this.searchTerm.toLowerCase()) ||\n        (user.email || '').toLowerCase().includes(this.searchTerm.toLowerCase()) ||\n        (user.adresse || '').toLowerCase().includes(this.searchTerm.toLowerCase());\n\n      const matchesRole = this.selectedRole\n        ? user.roles.includes(this.selectedRole)\n        : true;\n\n      return matchesSearch && matchesRole;\n    });\n  }\n  sortTable(key: string): void {\n    if (this.sortKey === key) {\n      this.sortOrder = this.sortOrder === 'asc' ? 'desc' : 'asc';\n    } else {\n      this.sortKey = key;\n      this.sortOrder = 'asc';\n    }\n\n    this.users.sort((a, b) => {\n      const aValue = (a as any)[key];\n      const bValue = (b as any)[key];\n\n      if (aValue  bValue) return this.sortOrder === 'asc' ? 1 : -1;\n      return 0;\n    });\n\n    this.updatePagination();\n  }\n\n  onPhotoSelected(event: any): void {\n    const file: File = event.target.files[0];\n    if (file) {\n      this.photoFile = file;\n  \n      // Génération de la prévisualisation et conversion en base64\n      const reader = new FileReader();\n      reader.onload = (e: any) => {\n        this.photoPreview = e.target.result; // Pour affichage dans le formulaire\n        this.newUser.photo = e.target.result; // Conversion en base64 pour l'envoi\n      };\n      reader.readAsDataURL(file);\n    }\n  }\n  \n\n// Méthode d'inscription d'un utilisateur\nregisterNewUser(): void {\n  this.isSubmitting = true;\n\n  // Préparer les données utilisateur\n  const user = {\n    name: this.newUser.name.trim(),\n    email: this.newUser.email.trim(),\n    telephone: this.newUser.telephone.trim(),\n    adresse: this.newUser.adresse.trim(),\n    password: this.newUser.password,\n    photo: this.newUser.photo,\n  };\n\n  // Valider les données avant d'envoyer la requête\n  if (!this.validateUserInput(user)) {\n    this.isSubmitting = false; // Réactiver le formulaire si validation échoue\n    return;\n  }\n\n  // Appel au service pour inscrire l'utilisateur\n  this.userApiService\n    .registerUser(user)\n    .then((data) => {\n      console.log('Utilisateur inscrit avec succès:', data);\n\n      // Ajouter l'utilisateur localement et mettre à jour la pagination\n      this.users.push(data.user);\n      this.updatePagination();\n\n      // Fermer le modal, réinitialiser le formulaire et nettoyer les erreurs\n      this.closeModal();\n      this.resetNewUserForm();\n      this.errorMessage = null;\n    })\n    .catch((error) => {\n      console.error('Erreur lors de l’inscription:', error.message);\n      this.errorMessage = error.message; // Afficher l'erreur utilisateur\n    })\n    .finally(() => {\n      this.isSubmitting = false; // Réactiver le formulaire après la réponse\n    });\n}\n\nvalidateUserInput(user: { name: string; email: string; telephone: string; adresse: string; password: string; photo?: string }): boolean {\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  const phoneRegex = /^(70|75|76|77|78)\\d{7}$/;\n\n  if (!user.name || !user.email || !user.telephone || !user.adresse || !user.password) {\n    this.errorMessage = 'Tous les champs obligatoires doivent être remplis.';\n    return false;\n  }\n\n  if (!emailRegex.test(user.email)) {\n    this.errorMessage = 'Adresse e-mail invalide.';\n    return false;\n  }\n\n  if (!phoneRegex.test(user.telephone)) {\n    this.errorMessage = 'Le numéro de téléphone est invalide.';\n    return false;\n  }\n\n  if (user.password.length  {\n        const updatedUser = response.user; // Récupère l'utilisateur mis à jour depuis le backend\n        user.roles = updatedUser.roles; // Met à jour les rôles localement\n        console.log(`Rôle mis à jour : ${updatedUser.roles}`);\n      })\n      .catch((error) => {\n        console.error('Erreur lors du basculement du rôle :', error);\n        alert('Une erreur est survenue lors de la mise à jour du rôle.');\n      });\n  }\n  onDeleteUser(userId: string): void {\n    if (confirm('Êtes-vous sûr de vouloir désactiver cet utilisateur ?')) {\n      // Appel du service pour désactiver l'utilisateur\n      this.userApiService\n        .disableUser(userId)\n        .then((response) => {\n          const updatedUser = response.user; // Récupère l'utilisateur mis à jour\n          // Mettre à jour l'utilisateur dans la liste locale\n          const index = this.users.findIndex((user) => user._id === userId);\n          if (index !== -1) {\n            this.users[index].status = updatedUser.status; // Met à jour le statut\n          }\n          console.log('Utilisateur désactivé avec succès.');\n        })\n        .catch((error) => {\n          console.error('Erreur lors de la désactivation de l\\'utilisateur :', error);\n          alert('Une erreur est survenue lors de la désactivation de l\\'utilisateur.');\n        });\n    }\n  }\n  \n  deleteUser(userId: string): void {\n    this.users = this.users.filter((user) => user._id !== userId);\n  }\n// Ouvrir le modal d'édition d'un utilisateur\neditUser(user: User): void {\n  this.userToEdit = { ...user };  // Copie des données de l'utilisateur\n  console.log('User to edit:', this.userToEdit); // Debug pour vérifier l'objet utilisateur\n  this.cdr.detectChanges();  // Force la détection des changements si nécessaire\n  this.openModalUpdate();  // Ouvrir le modal de mise à jour\n}\n\n// Soumettre la mise à jour d'un utilisateur\nupdateUser(): void {\n  if (this.userToEdit) {\n    this.isLoading = true;\n    this.errorMessage = null;\n\n    // Mise à jour de l'utilisateur\n    this.userApiService\n      .updateUser(this.userToEdit._id, this.userToEdit)\n      .then((updatedUser) => {\n        // Mise à jour de l'utilisateur dans la liste\n        this.users = this.users.map(u =>\n          u._id === updatedUser._id ? updatedUser : u\n        );\n        this.closeModalUpdate();  // Ferme le modal après la mise à jour\n      })\n      .catch((error) => {\n        console.error('Erreur lors de la mise à jour de l\\'utilisateur:', error.message);\n        this.errorMessage = error.message || 'Une erreur est survenue lors de la mise à jour de l\\'utilisateur.';\n      })\n      .finally(() => {\n        this.isLoading = false;\n      });\n  }\n}\n\n// Ouvrir le modal de mise à jour\nopenModalUpdate(): void {\n  this.modalService.open(this.updateModal, { ariaLabelledBy: 'modal-basic-title' });\n}\n\n// Fermer le modal\ncloseModalUpdate(): void {\n  this.modalService.dismissAll();\n}\n  get uniqueRoles(): string[] {\n    return [...new Set(this.users.flatMap((user) => user.roles))];\n  }\n\n  get activeUsersCount(): number {\n    return this.users.filter((user) => user.status).length;\n  }\n\n  get adminUsersCount(): number {\n    return this.users.filter((user) => user.roles.includes('admin')).length;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserApiService.html":{"url":"injectables/UserApiService.html","title":"injectable - UserApiService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/user-api.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                disableUser\n                            \n                            \n                                    Async\n                                fetchUserById\n                            \n                            \n                                    Async\n                                fetchUsers\n                            \n                            \n                                    Async\n                                registerUser\n                            \n                            \n                                    Async\n                                toggleUserRole\n                            \n                            \n                                    Async\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        disableUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    disableUser(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user-api.service.ts:116\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        fetchUserById\n                        \n                    \n                \n            \n            \n                \n                        \n                    fetchUserById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user-api.service.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        fetchUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    fetchUsers(activeOnly: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user-api.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                activeOnly\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    true\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        registerUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    registerUser(user: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user-api.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        toggleUserRole\n                        \n                    \n                \n            \n            \n                \n                        \n                    toggleUserRole(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user-api.service.ts:128\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUser(id: string, userData: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user-api.service.ts:97\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                userData\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport axios from '../config/axios-config'; // Import de l'instance Axios configurée\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserApiService {\n  // Récupérer tous les utilisateurs\n// Service Angular avec un paramètre pour récupérer les utilisateurs actifs\nasync fetchUsers(activeOnly: boolean = true): Promise {\n  try {\n    const { data } = await axios.get(`/users/users?active=${activeOnly}`); // Envoie un paramètre à l'API\n    if (!data || !data.users) {\n      throw new Error('Aucun utilisateur trouvé.');\n    }\n    return data.users;\n  } catch (error) {\n    if (axios.isAxiosError(error)) {\n      console.error('Erreur Axios:', error.response?.data || error.message);\n      throw new Error(error.response?.data?.message || 'Erreur réseau Axios');\n    } else {\n      console.error('Erreur inconnue:', error);\n      throw new Error('Erreur inconnue');\n    }\n  }\n}\n\n// Inscription d'un utilisateur\n// Service amélioré avec gestion des erreurs\nasync registerUser(user: {\n  name: string;\n  email: string;\n  password: string;\n  telephone: string;\n  adresse: string;\n  photo?: string;\n}): Promise {\n  try {\n    const response = await axios.post('/users/register', user);\n\n    // Vérification explicite du statut de la réponse\n    if (response.status === 200 || response.status === 201) {\n      console.log('Utilisateur inscrit avec succès:', response.data);\n      return response.data;\n    } else {\n      // Lancer une erreur si le statut est inattendu\n      throw new Error(`Erreur inattendue : statut ${response.status}`);\n    }\n  } catch (error) {\n    // Gestion des erreurs spécifiques à Axios\n    if (axios.isAxiosError(error)) {\n      const statusCode = error.response?.status;\n      const serverMessage = error.response?.data?.message;\n\n      if (statusCode) {\n        switch (statusCode) {\n          case 400:\n            console.error('Erreur de validation des données:', serverMessage || 'Données invalides.');\n            break;\n          case 403:\n            console.error('Erreur d\\'authentification:', serverMessage || 'Accès refusé.');\n            break;\n          case 500:\n            console.error('Erreur serveur:', serverMessage || 'Une erreur est survenue sur le serveur.');\n            break;\n          default:\n            console.error('Erreur inconnue côté serveur:', serverMessage || 'Erreur inattendue.');\n        }\n      } else {\n        console.error('Erreur de communication avec le serveur:', error.message);\n      }\n\n      // Lever une erreur utilisateur avec un message adapté\n      throw new Error(serverMessage || 'Une erreur est survenue lors de l\\'inscription.');\n    }\n\n    // Gestion des erreurs générales (non-Axios)\n    console.error('Erreur non-gérée:', error);\n    throw new Error('Une erreur imprévue est survenue. Veuillez réessayer plus tard.');\n  }\n}\n\n// Récupérer un utilisateur par ID\nasync fetchUserById(id: string): Promise {\n  try {\n    const { data } = await axios.get(`/users/users/${id}`);\n    return data.user;\n  } catch (error) {\n    console.error(`Erreur lors de la récupération de l'utilisateur avec l'ID ${id}:`, error);\n    throw error;\n  }\n}\n\n// Mettre à jour un utilisateur\n// Service Angular : mettre à jour un utilisateur\n// Service Angular : mettre à jour un utilisateur\nasync updateUser(id: string, userData: any): Promise {\n  try {\n    const { data } = await axios.put(`/users/users/${id}`, userData); // Envoi des données au backend\n    return data;\n  } catch (error: unknown) {\n    // Vérifier si l'error est une instance d'Error ou a une propriété message\n    if (error instanceof Error) {\n      console.error('Erreur lors de la mise à jour de l\\'utilisateur:', error.message);\n      throw error;\n    } else {\n      console.error('Erreur inconnue:', error);\n      throw new Error('Erreur inconnue lors de la mise à jour.');\n    }\n  }\n}\n\n\n\n// Désactiver un utilisateur\nasync disableUser(id: string): Promise {\n  try {\n    // Appel de l'API pour désactiver l'utilisateur\n    const { data } = await axios.delete(`/users/users/${id}`);\n    return data; // Renvoie les données utilisateur mises à jour\n  } catch (error) {\n    console.error(`Erreur lors de la désactivation de l'utilisateur avec l'ID ${id}:`, error);\n    throw error;\n  }\n}\n\n// Basculer le rôle d'un utilisateur\nasync toggleUserRole(id: string): Promise {\n  try {\n    // Appeler l'API pour basculer le rôle\n    const { data } = await axios.patch(`/users/users/${id}/role`);\n    return data; // Renvoie les données utilisateur mises à jour\n  } catch (error) {\n    console.error(`Erreur lors de la mise à jour du rôle pour l'utilisateur ${id}:`, error);\n    throw error;\n  }\n}\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/UserGuard.html":{"url":"guards/UserGuard.html","title":"guard - UserGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    UserGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/guards/user.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/guards/user.guard.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/guards/user.guard.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                route\n                                            \n                                                        ActivatedRouteSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                state\n                                            \n                                                        RouterStateSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable | Promise | boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { UserService } from '../services/user.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserGuard implements CanActivate {\n\n  constructor(private userService: UserService, private router: Router) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable | Promise | boolean {\n    const currentUser = this.userService.getCurrentUser();\n\n    if (currentUser && currentUser.role === 'user') {\n      return true;\n    } else {\n      this.router.navigate(['/login']);\n      return false;\n    }\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserPageComponent.html":{"url":"components/UserPageComponent.html","title":"component - UserPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/pages/user-page/user-page.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-page\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                                AnalyseComponent\n                \n            \n\n            \n                styleUrls\n                ./user-page.component.css\n            \n\n\n\n            \n                templateUrl\n                ./user-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentDateTime\n                            \n                            \n                                errorMessage\n                            \n                            \n                                humidite\n                            \n                            \n                                humiditeData\n                            \n                            \n                                temperature\n                            \n                            \n                                temperatureData\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fetchLastDayData\n                            \n                            \n                                getHumiditeAt\n                            \n                            \n                                getTemperatureAt\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateDateTime\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, capteurDataService: CapteurDataService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/pages/user-page/user-page.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        capteurDataService\n                                                  \n                                                        \n                                                                        CapteurDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        fetchLastDayData\n                        \n                    \n                \n            \n            \n                \nfetchLastDayData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/pages/user-page/user-page.component.ts:43\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHumiditeAt\n                        \n                    \n                \n            \n            \n                \ngetHumiditeAt(heure: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/pages/user-page/user-page.component.ts:76\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                heure\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTemperatureAt\n                        \n                    \n                \n            \n            \n                \ngetTemperatureAt(heure: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/pages/user-page/user-page.component.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                heure\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/pages/user-page/user-page.component.ts:25\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateDateTime\n                        \n                    \n                \n            \n            \n                \nupdateDateTime()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/pages/user-page/user-page.component.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentDateTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/pages/user-page/user-page.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/pages/user-page/user-page.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        humidite\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/pages/user-page/user-page.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        humiditeData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/pages/user-page/user-page.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        temperature\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/pages/user-page/user-page.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        temperatureData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/pages/user-page/user-page.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/pages/user-page/user-page.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../../../services/user.service';\nimport { AnalyseComponent } from './analyse/analyse.component';\nimport { CapteurDataService } from '../../../services/capteur-data.service';\nimport { ChangeDetectorRef } from '@angular/core';\n\n@Component({\n  selector: 'app-user-page',\n  standalone: true,\n  imports: [AnalyseComponent],\n  templateUrl: './user-page.component.html',\n  styleUrls: ['./user-page.component.css']\n})\nexport class UserPageComponent implements OnInit {\n  user: any;\n  currentDateTime: string = '';\n  temperatureData: any[] = [];  // Pour stocker les données de température récupérées\n  humiditeData: any[] = []; //\n  errorMessage: string = '';\n  temperature: number = 0;\n  humidite: number = 0;\n\n  constructor(private userService: UserService,private capteurDataService: CapteurDataService, private cdr: ChangeDetectorRef) {}\n\n  ngOnInit(): void {\n    this.user = this.userService.getCurrentUser();\n    this.updateDateTime();\n    this.fetchLastDayData();\n  }\n\n  updateDateTime(): void {\n    const now = new Date();\n    const options: Intl.DateTimeFormatOptions = {\n      year: 'numeric',\n      month: 'short', // Affiche le mois sous forme abrégée (e.g., \"Nov\")\n      day: '2-digit',\n      hour: '2-digit',\n      minute: '2-digit',\n    };\n    this.currentDateTime = new Intl.DateTimeFormat('en-US', options).format(now);\n  }\n\n  fetchLastDayData(): void {\n    this.capteurDataService.getLastDayData().subscribe({\n      next: (response) => {\n        console.log('Réponse API :', response);  // Pour vérifier la structure des données\n        this.temperatureData = response.data;\n\n        // Affiche les heures retournées pour vérifier qu'elles sont bien formatées\n        this.temperatureData.forEach((data) => {\n          console.log('Heure retournée:', data.heure);\n        });\n      },\n      error: (error) => {\n        console.error('Erreur lors de la récupération des données :', error);\n        this.errorMessage = 'Impossible de récupérer les données.';\n      },\n    });\n  }\n\n\n\n  getTemperatureAt(heure: string): string {\n    const formattedHeure = heure.slice(0, 5); // Transforme l'heure au format \"HH:mm\"\n    console.log('Heure formatée à rechercher:', formattedHeure);  // Affiche l'heure recherchée\n\n    const data = this.temperatureData.find((d) => {\n      const formattedDataHeure = d.heure.slice(0, 5); // Formate la donnée de l'heure pour comparaison\n      console.log('Comparaison entre', formattedHeure, 'et', formattedDataHeure);  // Compare les heures\n      return formattedDataHeure === formattedHeure;\n    });\n\n    return data ? `${data.temperature} °C` : '...';\n  }\n\n  getHumiditeAt(heure: string): string {\n    const formattedHeure = heure.slice(0, 5); // Transforme l'heure au format \"HH:mm\"\n    console.log('Heure formatée à rechercher pour humidité:', formattedHeure);  // Affiche l'heure recherchée\n\n    const data = this.temperatureData.find((d) => {\n      const formattedDataHeure = d.heure.slice(0, 5); // Formate la donnée de l'heure pour comparaison\n      console.log('Comparaison entre', formattedHeure, 'et', formattedDataHeure);  // Compare les heures\n      return formattedDataHeure === formattedHeure;\n    });\n\n    return data ? `${data.humidite} %` : '...';\n  }\n}\n\n    \n\n    \n        \n  \n      \n      \n          \n          \n              \n                  \n                  \n                      \n                          \n                          \n                              Humidité\n                               \n                              Niveau actuel\n                          \n                          \n                            10:00 &nbsp; \n                              {{ getHumiditeAt('10:00') }}\n                            \n                            14:00 &nbsp; \n                              {{ getHumiditeAt('14:00') }}\n                            \n                            17:00 &nbsp; \n                              {{ getHumiditeAt('17:00') }}\n                            \n                          \n                          \n                               \n                              est inférieur ou égal à 27%\n                          \n                      \n                  \n              \n                  \n              \n                  \n                  \n                      \n                          \n                          \n                              Température\n                               \n                              Conditions actuelles\n                          \n                          \n                            10:00 &nbsp; \n                              {{ getTemperatureAt('10:00') }}\n                            \n                            14:00 &nbsp; \n                              {{ getTemperatureAt('14:00') }}\n                            \n                            17:00 &nbsp; \n                              {{ getTemperatureAt('17:00') }}\n                            \n                          \n                          \n                               \n                              + \n                              Est supérieur à 27°\n                          \n                      \n                  \n              \n          \n      \n\n      \n      \n          \n              \n\n                  \n                      \n                          Salut, {{user.name}}  !\n                          Bienvenue à la maison, il est humide au magasin.\n                      \n                      \n                          {{currentDateTime}}\n                            - 15 °C\n                      \n                  \n              \n          \n      \n  \n\n\n\n      \n          \n      \n\n\n    \n\n    \n                \n                    ./user-page.component.css\n                \n                .card {\n    border: none;\n    border-radius: 10px;\n  }\n  \n  .bg-dark {\n    background-color: #2b2b2b !important;\n  }\n  \n  .text-white {\n    color: #fff !important;\n  }\n  \n  .main-card {\n    background-image: url('/assets/images/humide.png'); /* Remplacez 'background.jpg' par le chemin vers votre image */\n    background-size: cover; /* L'image couvre tout le conteneur */\n    background-position: center; /* Centrer l'image */\n    border: none;\n    border-radius: 10px;\n    min-height: 300px; /* Définissez une hauteur minimale */\n  }\n  \n  .main-card .card-body {\n    background: rgba(0, 0, 0, 0.425); /* Ajoute un effet d'ombre */\n    border-radius: 10px;\n    /* padding: 20px; */\n  }\n  .card-body .d-flex p {\n    margin-right: 10px; /* Espacement entre les  */\n    white-space: nowrap; /* Empêche le texte de passer à la ligne */\n  }\n  .highlight {\n    color: #17fc58; /* Couleur verte spécifique */\n    font-weight: bold; /* (Facultatif) Rendre le texte plus visible */\n  }\n  .card-body h6 {\n    font-size: 1rem; /* Taille pour le titre */\n  }\n  \n  .card-body .d-flex i {\n    font-size: 1.2rem; /* Taille des icônes */\n  }\n  \n  .card-body small {\n    font-size: 0.8rem; /* Taille pour le texte en petit */\n    color: #bbb; /* Couleur gris clair */\n  }\n  \n  .me-2 {\n    margin-right: 8px; /* Espacement à droite des icônes */\n  }\n  \n  .ms-2 {\n    margin-left: 8px; /* Espacement à gauche du texte en  */\n  }\n  .icon-green {\n    color: #17fc58; /* Couleur verte */\n    font-size: 1.2rem; /* Ajustez la taille si nécessaire */\n  }\n  .list-group {\n    background-color: #2b2b2b;\n  }\n  .list-group-item i {\n    margin-right: 10px;\n  }\n\n  h4 {\n    color: #00FF47;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                            Humidité                                                             Niveau actuel                                                                                10:00                                 {{ getHumiditeAt(\\'10:00\\') }}                                                        14:00                                 {{ getHumiditeAt(\\'14:00\\') }}                                                        17:00                                 {{ getHumiditeAt(\\'17:00\\') }}                                                                                                                                             est inférieur ou égal à 27%                                                                                                                                                                                                                                                            Température                                                             Conditions actuelles                                                                                10:00                                 {{ getTemperatureAt(\\'10:00\\') }}                                                        14:00                                 {{ getTemperatureAt(\\'14:00\\') }}                                                        17:00                                 {{ getTemperatureAt(\\'17:00\\') }}                                                                                                                                             +                               Est supérieur à 27°                                                                                                                                                                                                      Salut, {{user.name}}  !                          Bienvenue à la maison, il est humide au magasin.                                                                      {{currentDateTime}}                            - 15 °C                                                                                              '\n    var COMPONENTS = [{'name': 'AdminPageComponent', 'selector': 'app-admin-page'},{'name': 'AnalyseComponent', 'selector': 'app-analyse'},{'name': 'AnalyseComponent', 'selector': 'app-analyse'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'LogsComponent', 'selector': 'app-logs'},{'name': 'MenuComponent', 'selector': 'app-menu'},{'name': 'MyAccountComponent', 'selector': 'app-my-account'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'UserPageComponent', 'selector': 'app-user-page'},{'name': 'UtilisateursComponent', 'selector': 'app-utilisateurs'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                            \n                                    Public\n                                currentUser\n                            \n                            \n                                    Private\n                                currentUserSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changePassword\n                            \n                            \n                                    Private\n                                deleteAllCookies\n                            \n                            \n                                getCurrentUser\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                isAdmin\n                            \n                            \n                                isLoggedIn\n                            \n                            \n                                isUser\n                            \n                            \n                                loginWithEmail\n                            \n                            \n                                loginWithSecretCode\n                            \n                            \n                                logout\n                            \n                            \n                                registerUser\n                            \n                            \n                                updatePhoto\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/user.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changePassword\n                        \n                    \n                \n            \n            \n                \nchangePassword(email: string, oldPassword: string, newPassword: string, confirmPassword: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user.service.ts:115\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                oldPassword\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                newPassword\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                confirmPassword\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        deleteAllCookies\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteAllCookies()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user.service.ts:87\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentUser\n                        \n                    \n                \n            \n            \n                \ngetCurrentUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user.service.ts:51\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleError(error: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user.service.ts:99\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAdmin\n                        \n                    \n                \n            \n            \n                \nisAdmin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user.service.ts:67\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoggedIn\n                        \n                    \n                \n            \n            \n                \nisLoggedIn()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user.service.ts:62\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isUser\n                        \n                    \n                \n            \n            \n                \nisUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user.service.ts:73\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginWithEmail\n                        \n                    \n                \n            \n            \n                \nloginWithEmail(email: string, password: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginWithSecretCode\n                        \n                    \n                \n            \n            \n                \nloginWithSecretCode(secretCode: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                secretCode\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user.service.ts:79\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerUser\n                        \n                    \n                \n            \n            \n                \nregisterUser(userData: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user.service.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userData\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatePhoto\n                        \n                    \n                \n            \n            \n                \nupdatePhoto(userId: string, photo: File)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/user.service.ts:147\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                photo\n                                            \n                                                        File\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://localhost:5001/api/auth'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/user.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.currentUserSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/user.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        currentUserSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/user.service.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { config } from './../app.config.server';\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { BehaviorSubject, Observable, from } from 'rxjs';\nimport { Router } from '@angular/router'; // Importez le Router\nimport { HttpClientModule } from '@angular/common/http';\nimport { tap } from 'rxjs/operators';\nimport axios from '../config/axios-config'; // Importer l'instance Axios configurée\nimport { catchError, map } from 'rxjs/operators'; // Importation des opérateurs RxJS\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  private apiUrl = 'http://localhost:5001/api/auth';\n  private currentUserSubject = new BehaviorSubject(null);\n  public currentUser = this.currentUserSubject.asObservable();\n\n  constructor(private http: HttpClient, private router: Router ) {}\n\n  registerUser(userData: any): Observable {\n    return this.http.post(`${this.apiUrl}/register`, userData);\n  }\n\n  // Connexion avec email et mot de passe\n  loginWithEmail(email: string, password: string): Observable {\n    return this.http.post(`${this.apiUrl}/login-email`, { email, password }).pipe(\n      tap((response: any) => {\n        if (response.user) {\n          localStorage.setItem('currentUser', JSON.stringify(response.user));\n          this.currentUserSubject.next(response.user);\n        }\n      })\n    );\n  }\n\n  // Connexion avec code secret\n  loginWithSecretCode(secretCode: string): Observable {\n    return this.http.post(`${this.apiUrl}/login-secret`, { secretCode }).pipe(\n      tap((response: any) => {\n        if (response.user) {\n          this.currentUserSubject.next(response.user);\n        }\n      })\n    );\n  }\n\n // Récupérer l'utilisateur actuel\n getCurrentUser(): any {\n  const user = this.currentUserSubject.value;\n  if (!user) {\n    const savedUser = localStorage.getItem('currentUser');\n    if (savedUser) {\n      this.currentUserSubject.next(JSON.parse(savedUser));\n    }\n  }\n  return this.currentUserSubject.value;\n}\n// Vérifie si l'utilisateur est connecté\nisLoggedIn(): boolean {\n  return !!this.getCurrentUser();\n}\n\n// Vérifie si l'utilisateur est un admin\nisAdmin(): boolean {\n  const user = this.getCurrentUser();\n  return user && user.role === 'admin'; // Vérifie si le rôle est admin\n}\n\n// Vérifie si l'utilisateur est un user\nisUser(): boolean {\n  const user = this.getCurrentUser();\n  return user && user.role === 'user'; // Vérifie si le rôle est user\n}\n\n// Méthode de déconnexion\nlogout() {\n  localStorage.removeItem('currentUser');\n  this.deleteAllCookies();\n  this.currentUserSubject.next(null);\n  this.router.navigate(['/login']);\n}\n\n// Supprime tous les cookies\nprivate deleteAllCookies() {\n  const cookies = document.cookie.split(';');\n  for (let i = 0; i  -1 ? cookie.substr(0, eqPos) : cookie;\n    document.cookie = name + \"=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/\";\n  }\n}\n\n\n// Méthode pour gérer les erreurs de manière centralisée\nprivate handleError(error: any): Observable {\n  let errorMessage = 'Une erreur est survenue';\n  if (error.response) {\n    // Erreur côté serveur\n    errorMessage = error.response.data.message || errorMessage;\n  } else if (error.message) {\n    // Erreur de type client\n    errorMessage = error.message;\n  }\n  // Retourner un Observable avec un message d'erreur\n  return new Observable(observer => {\n    observer.error(errorMessage);\n  });\n}\n  // Changer le mot de passe\n// Fonction pour changer le mot de passe de l'utilisateur\nchangePassword(email: string, oldPassword: string, newPassword: string, confirmPassword: string): Observable {\n  if (newPassword !== confirmPassword) {\n    return new Observable((observer) => {\n      observer.error({ message: 'Les nouveaux mots de passe ne correspondent pas.' });\n    });\n  }\n\n  const body = {\n    email: email,\n    oldPassword: oldPassword,\n    newPassword: newPassword,\n    confirmPassword: confirmPassword,\n  };\n\n  return from(\n    axios.post(`${this.apiUrl}/change-password`, body)\n      .then((response) => {\n        console.log('Mot de passe mis à jour avec succès:', response.data);\n        return response.data;\n      })\n  ).pipe(\n    map((response) => {\n      console.log('Réponse de l\\'API:', response);  // Log de la réponse pour vérifier la structure\n      return response;  // Retourne la réponse si tout est correct\n    }),\n    catchError((error) => {\n      console.error('Erreur lors du changement de mot de passe:', error);\n      return this.handleError(error);  // Gestion de l'erreur\n    })\n  );\n}\n\n  updatePhoto(userId: string, photo: File) {\n    const currentUser = this.getCurrentUser();\n    const formData = new FormData();\n    formData.append('userId', currentUser.id);\n    formData.append('photo', photo);\n\n    return this.http.post(`${this.apiUrl}/update-photo`, formData);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        server.ts\n            \n            function\n            app\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        server.ts\n            \n            function\n            run\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/app/app.config.server.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.config.server.ts\n            \n            variable\n            serverConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/header/elements/my-account/my-account.component.ts\n            \n            component\n            MyAccountComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                0 %\n                (0/27)\n            \n        \n        \n            \n                \n                src/app/components/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                0 %\n                (0/54)\n            \n        \n        \n            \n                \n                src/app/components/menu/menu.component.ts\n            \n            component\n            MenuComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/components/pages/admin-page/admin-page.component.ts\n            \n            component\n            AdminPageComponent\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/components/pages/admin-page/analyse/analyse.component.ts\n            \n            component\n            AnalyseComponent\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/components/pages/admin-page/analyse/analyse.component.ts\n            \n            interface\n            CapteurData\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/components/pages/logs/logs.component.ts\n            \n            component\n            LogsComponent\n            \n                21 %\n                (3/14)\n            \n        \n        \n            \n                \n                src/app/components/pages/user-page/analyse/analyse.component.ts\n            \n            component\n            AnalyseComponent\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/components/pages/user-page/analyse/analyse.component.ts\n            \n            interface\n            CapteurData\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/components/pages/user-page/user-page.component.ts\n            \n            component\n            UserPageComponent\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/components/pages/utilisateurs/utilisateurs.component.ts\n            \n            component\n            UtilisateursComponent\n            \n                0 %\n                (0/38)\n            \n        \n        \n            \n                \n                src/app/components/pages/utilisateurs/utilisateurs.component.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/components/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/config/app-config.ts\n            \n            variable\n            BASE_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/guards/admin.guard.ts\n            \n            guard\n            AdminGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/guards/user.guard.ts\n            \n            guard\n            UserGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/services/capteur-data.service.ts\n            \n            injectable\n            CapteurDataService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/services/capteur-data.service.ts\n            \n            interface\n            CapteurData\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/services/capture.service.ts\n            \n            injectable\n            CaptureService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/services/collecte.service.ts\n            \n            injectable\n            CollecteService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/services/logs-api.service.ts\n            \n            injectable\n            LogsApiService\n            \n                57 %\n                (4/7)\n            \n        \n        \n            \n                \n                src/app/services/socket.service.ts\n            \n            injectable\n            SocketService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/services/user-api.service.ts\n            \n            injectable\n            UserApiService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/services/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                        src/main.server.ts\n            \n            variable\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^18.2.0\n        \n            @angular/cdk : ^18.2.12\n        \n            @angular/common : ^18.2.0\n        \n            @angular/compiler : ^18.2.0\n        \n            @angular/core : ^18.2.0\n        \n            @angular/forms : ^18.2.0\n        \n            @angular/localize : ^18.2.12\n        \n            @angular/material : ^18.2.12\n        \n            @angular/platform-browser : ^18.2.0\n        \n            @angular/platform-browser-dynamic : ^18.2.0\n        \n            @angular/platform-server : ^18.2.0\n        \n            @angular/router : ^18.2.0\n        \n            @angular/ssr : ^18.2.12\n        \n            @fortawesome/fontawesome-free : ^6.7.0\n        \n            @ng-bootstrap/ng-bootstrap : ^17.0.1\n        \n            @popperjs/core : ^2.11.8\n        \n            @swimlane/ngx-charts : ^21.0.0\n        \n            @swimlane/ngx-datatable : ^20.1.0\n        \n            axios : ^1.7.7\n        \n            bootstrap : ^5.3.3\n        \n            chart.js : ^4.4.6\n        \n            chartjs-plugin-zoom : ^2.1.0\n        \n            echarts : ^5.5.1\n        \n            express : ^4.18.2\n        \n            ngx-chartjs : ^0.0.1\n        \n            ngx-echarts : ^18.0.0\n        \n            ngx-socket-io : ^4.8.0\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.10\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            app   (server.ts)\n                        \n                        \n                            run   (server.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        app\n                        \n                    \n                \n            \n            \n                \napp()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :     express.Express\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        run\n                        \n                    \n                \n            \n            \n                \nrun()\n                \n            \n\n\n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nYakarFront\n🌱 Projet Full Stack IoT - YAKAR 🌱\nCe projet a pour objectif de développer une plateforme de contrôle de la température et de l'humidité d'un magasin de stockage pour la structure de transformation des produits locaux YAKAR. Il permet de suivre et de gérer la température et l'humidité via une interface web et un écran LCD, tout en déclenchant des alertes en cas de dépassement de seuils critiques. Le projet repose sur un système IoT qui collecte des données environnementales, les stocke, et les affiche en temps réel sur un tableau de bord.\n\n📋 Description du projet\nYAKAR a besoin de surveiller et de contrôler la température et l'humidité dans son espace de stockage des produits locaux. Le projet implique la mise en place d'un système de capteurs (température et humidité) qui collecte les données à intervalles réguliers (10h, 14h, 17h). Ces données sont affichées en temps réel via une interface web, un écran LCD, et stockées dans une base de données.\nFonctionnalités :\n\nUtilisateur simple :\n\nVisualisation de la température et de l'humidité en temps réel.\nHistorique des températures et humidité pour chaque heure de collecte.\nTempérature et humidité moyenne de la journée.\n\n\nUtilisateur admin :\n\nContrôle à distance du système de ventilation (allumer/éteindre via l'interface ou une télécommande).\nGestion des utilisateurs (création, modification, suppression de comptes).\nHistorique des températures et humidité de la semaine.\n\n\n\nComportement du système :\n\nTempérature > 27°C : Déclenchement du buzzer, ventilation allumée, signal rouge.\nTempérature ≤ 27°C : Signal vert allumé, ventilation éteinte.\nCollecte automatique des données à 10h, 14h et 17h.\n\n\n🛠 Technologies utilisées\n\nFrontend : Angular 18.2.12\nBackend : Node.js, Express, WebSocket\nBase de données : MongoDB\nIoT : Microcontrôleur (Arduino ou ESP32), capteurs de température et d'humidité\nGestion de projet : Méthode agile, Trello\nOutils de collaboration : Git, GitHub, Visual Studio Code\n\n\n🚀 Installation\nPrérequis :\n\nNode.js (version 18 ou supérieure)\nAngular CLI (version 18.2.12)\nMongoDB\n\n👥 Contributeurs\nMouhamadou Moustapha Fa - Développeur\nNdiawar Diop - Développeur\nKhalifa Ababacar Gaye - Développeur\nFatou Diéye - Développeur\nCloner le projet :\nExample :git clone https://github.com/ton-utilisateur/Yakar-IoT.git\ncd Yakar-IoT\nInstaller les dépendances :\nbash\nCopier le code\nnpm install\nLancer le serveur de développement :\nbash\nCopier le code\nng serve\nNaviguer vers http://localhost:4200/ pour voir l'application en action.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    13 Components\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            BASE_URL   (src/.../app-config.ts)\n                        \n                        \n                            bootstrap   (src/.../main.server.ts)\n                        \n                        \n                            config   (src/.../main.ts)\n                        \n                        \n                            config   (src/.../app.config.server.ts)\n                        \n                        \n                            serverConfig   (src/.../app.config.server.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [provideZoneChangeDetection({ eventCoalescing: true }), provideRouter(routes), provideClientHydration(),provideHttpClient(withFetch())]\n}\n                    \n                \n\n\n        \n    \n\n    src/app/config/app-config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        BASE_URL\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('BaseUrl', {\n  providedIn: 'root',\n  factory: () => 'http://localhost:5000/api/',  // URL par défaut\n})\n                    \n                \n\n\n        \n    \n\n    src/main.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => bootstrapApplication(AppComponent, config)\n                    \n                \n\n\n        \n    \n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  // Configuration par défaut de ECharts\n  echarts: {\n    // Par exemple, vous pouvez spécifier des options par défaut pour le graphique\n    theme: 'dark',\n    // Vous pouvez aussi configurer des options comme le chargement de la bibliothèque ECharts ici\n  }\n}\n                    \n                \n\n\n        \n    \n\n    src/app/app.config.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : mergeApplicationConfig(appConfig, serverConfig)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serverConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideServerRendering()\n  ]\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
